var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.627,1,1.243]],["body/components/AppComponent.html",[0,1.022,1,2.156,2,1.909,3,0.246,4,0.185,5,1.525,6,1.525,7,1.525,8,0.185,9,3.321,10,1.359,11,2.833,12,2.833,13,2.429,14,1.803,15,1.612,16,2.023,17,4.945,18,2.023,19,5.163,20,2.779,21,5.163,22,0.241,23,0.396,24,5.794,25,1.364,26,3.576,27,1.29,28,3.891,29,1.028,30,0.022,31,1.612,32,0.241,33,0.424,34,0.973,35,0.973,36,5.163,37,3.891,38,0.96,39,0.82,40,1.439,41,5.163,42,2.945,43,0.213,44,0.869,45,1.525,46,2.023,47,2.023,48,1.525,49,2.037,50,1.525,51,0.563,52,1.525,53,1.359,54,1.439,55,1.149,56,2.587,57,1.359,58,1.525,59,1.439,60,1.525,61,2.418,62,1.439,63,1.359,64,1.359,65,1.525,66,1.359,67,1.525,68,1.359,69,1.359,70,1.359,71,1.525,72,1.359,73,1.525,74,1.359,75,1.359,76,1.359,77,1.909,78,1.359,79,1.359,80,1.439,81,1.359,82,1.525,83,1.525,84,0.015,85,0.015]],["title/guards/AuthGuard.html",[86,2.437,87,2.694]],["body/guards/AuthGuard.html",[3,0.274,4,0.182,8,0.182,13,1.798,22,0.236,25,1.348,27,1.275,29,1.01,30,0.022,32,0.315,35,0.955,38,1.088,39,0.805,40,1.413,43,0.209,44,0.853,51,0.556,69,2.005,77,2.265,81,1.781,84,0.015,85,0.015,86,3.493,87,3.861,88,3.821,89,3.261,90,0.903,91,5.101,92,3.861,93,5.101,94,5.101,95,4.353,96,5.101,97,5.101,98,6.384,99,1.781,100,3.261,101,2.902,102,3.369,103,3.821,104,1.592,105,1.275,106,3.821,107,6.127,108,5.742,109,6.127,110,3.821,111,2.955,112,3.55,113,1.592,114,1.688,115,3.261,116,3.821,117,3.821,118,5.101,119,3.261,120,2.057,121,3.261,122,2.214,123,3.821,124,1.92,125,2.057,126,2.121,127,2.265,128,3.821,129,3.821,130,2.617,131,3.821,132,3.821,133,5.101,134,5.101,135,3.821,136,3.821,137,3.861,138,5.101,139,3.821,140,2.892,141,3.932,142,3.821,143,3.821,144,3.821,145,3.821,146,3.821,147,3.821]],["title/injectables/AuthService.html",[101,1.572,113,1.111]],["body/injectables/AuthService.html",[3,0.16,4,0.16,8,0.16,13,1.578,22,0.207,23,0.358,25,1.233,27,1.716,29,1.612,30,0.022,31,1.457,32,0.359,33,0.366,34,1.525,35,1.525,38,1.073,39,0.707,40,1.24,43,0.183,44,0.749,51,0.585,69,1.63,80,1.726,84,0.014,85,0.014,99,1.875,101,2.062,102,2.916,104,1.676,105,1.342,112,3.11,113,1.457,114,1.482,115,2.863,119,2.863,124,1.685,126,2.88,127,2.335,137,2.539,148,1.685,149,2.863,150,3.11,151,2.972,152,2.916,153,6.315,154,3.533,155,4.953,156,5.803,157,4.667,158,3.354,159,2.89,160,3.354,161,2.704,162,4.667,163,3.362,164,3.354,165,1.806,166,3.354,167,3.354,168,3.354,169,2.697,170,3.354,171,4.667,172,3.354,173,4.667,174,3.354,175,2.513,176,3.354,177,1.829,178,4.667,179,3.354,180,4.667,181,2.539,182,1.685,183,1.578,184,2.863,185,1.806,186,3.354,187,1.578,188,2.297,189,4.667,190,3.354,191,3.354,192,3.354,193,5.368,194,4.667,195,2.704,196,4.667,197,4.667,198,3.354,199,2.863,200,3.354,201,3.354,202,3.354,203,2.863,204,3.354,205,3.354,206,3.354,207,3.354,208,3.354]],["title/components/ChangePasswordPageComponent.html",[0,0.627,53,1.243]],["body/components/ChangePasswordPageComponent.html",[0,0.751,1,0.787,2,1.288,3,0.166,4,0.107,5,0.883,6,0.883,7,0.883,8,0.107,10,0.787,11,2.613,12,2.613,14,0.787,15,1.087,16,0.883,18,1.365,22,0.139,23,0.267,25,0.921,26,2.776,27,1.618,29,1.266,30,0.022,31,1.496,32,0.296,33,0.38,34,1.427,35,1.427,38,0.907,39,0.475,40,0.833,43,0.123,44,0.503,45,0.883,46,1.365,47,1.365,48,0.883,49,1.582,50,0.883,51,0.464,52,0.883,53,1.673,54,2.42,55,2.157,56,2.146,57,0.787,58,0.883,59,0.833,60,0.883,61,1.877,62,0.833,63,0.787,64,0.787,65,0.883,66,0.787,67,0.883,68,0.787,69,1.809,70,0.787,71,0.883,72,0.787,73,0.883,74,0.787,75,0.787,76,0.787,77,1.288,78,0.787,79,0.787,80,0.833,81,1.994,82,0.883,83,0.883,84,0.01,85,0.01,90,0.532,99,1.487,101,2.117,102,2.139,104,0.703,105,0.563,111,2.018,120,1.213,125,1.875,126,2.517,137,1.705,151,2.848,152,1.132,154,3.626,159,2.292,161,2.467,169,1.132,175,1.213,181,1.705,182,1.132,183,1.06,203,1.923,209,1.413,210,5.587,211,5.587,212,1.06,213,2.973,214,2.973,215,1.415,216,4.089,217,2.636,218,3.483,219,3.483,220,3.483,221,2.385,222,2.671,223,2.185,224,2.185,225,2.185,226,2.139,227,1.75,228,3.483,229,3.626,230,4.258,231,3.634,232,4.089,233,3.483,234,2.973,235,2.253,236,2.253,237,1.923,238,2.253,239,3.223,240,2.253,241,1.705,242,2.467,243,2.185,244,1.705,245,1.923,246,1.923,247,1.543,248,1.539,249,1.705,250,1.923,251,1.705,252,1.705,253,1.923,254,1.413,255,1.305,256,1.213,257,2.253,258,1.705,259,1.923,260,1.543,261,2.253,262,1.923,263,2.253,264,2.253,265,1.923,266,1.923,267,1.923,268,1.705,269,2.253,270,2.253,271,2.253,272,2.253,273,2.253,274,2.253,275,1.705,276,1.705,277,1.923,278,2.253,279,2.253,280,2.253,281,1.923,282,3.483,283,2.253,284,1.539,285,3.483,286,3.483,287,2.636,288,2.973,289,3.483,290,2.385,291,3.483,292,3.483,293,2.973,294,3.483,295,3.005,296,3.483,297,1.448,298,2.973,299,3.483,300,3.483,301,3.483]],["title/components/DefaultComponent.html",[0,0.627,57,1.243]],["body/components/DefaultComponent.html",[0,0.907,1,1.084,2,1.634,3,0.211,4,0.148,5,1.216,6,1.216,7,1.216,8,0.148,10,1.084,11,2.752,12,2.752,14,1.543,15,1.379,16,1.731,17,3.771,18,1.731,20,2.379,22,0.192,23,0.339,25,1.168,27,1.584,29,1.36,30,0.022,31,1.75,34,1.481,35,1.286,38,0.982,39,0.654,40,1.147,42,2.349,43,0.17,44,0.693,45,1.216,46,1.731,47,1.731,48,1.216,49,1.851,50,1.216,51,0.482,52,1.216,53,1.084,54,1.147,55,0.916,56,2.413,57,1.958,58,1.216,59,1.147,60,1.216,61,2.197,62,1.147,63,1.084,64,1.084,65,1.216,66,1.084,67,2.016,68,1.084,69,1.084,70,1.084,71,1.216,72,1.084,73,1.216,74,1.084,75,1.797,76,1.084,77,2.548,78,1.084,79,1.084,80,1.147,81,1.084,82,1.216,83,1.216,84,0.013,85,0.013,90,0.733,92,3.345,99,1.797,101,2.274,120,1.67,155,4.785,183,1.46,242,2.981,243,1.947,254,2.772,302,2.648,303,4.418,304,4.418,305,4.418,306,3.771,307,3.345,308,3.026,309,4.418,310,4.418,311,5.145,312,2.274,313,4.244,314,5.607,315,4.418,316,3.103,317,3.103,318,3.103,319,3.103,320,3.103,321,3.771,322,1.67,323,3.103,324,3.103,325,5.145,326,2.648,327,3.103,328,2.349,329,3.026,330,4.418,331,4.418,332,4.418,333,4.418,334,3.771,335,3.771,336,4.418,337,3.345,338,3.026,339,3.345,340,4.418,341,4.418]],["title/interfaces/DishAddIngredientModel.html",[342,0.273,343,1.788]],["body/interfaces/DishAddIngredientModel.html",[3,0.229,4,0.229,8,0.229,22,0.297,23,0.453,30,0.022,32,0.395,33,0.785,43,0.374,51,0.698,84,0.017,85,0.017,90,1.134,297,2.455,342,0.526,343,2.967,344,1.269,345,2.782,346,6.396,347,4.381,348,4.842,349,2.121,350,1.012,351,3.705,352,3.012,353,2.412,354,3.012,355,2.412,356,3.012,357,4.012,358,3.012,359,3.012,360,3.705,361,3.012,362,2.412]],["title/interfaces/DishCreate.html",[342,0.273,353,1.788]],["body/interfaces/DishCreate.html",[3,0.232,4,0.232,8,0.232,22,0.302,23,0.458,30,0.022,32,0.369,33,0.787,43,0.376,51,0.764,84,0.018,85,0.018,90,1.586,342,0.528,343,2.451,344,1.289,345,2.827,349,2.156,350,1.028,351,3.741,352,3.061,353,2.997,354,3.061,355,2.451,356,3.061,357,4.041,358,3.061,359,3.061,360,3.741,361,3.061,362,2.451]],["title/interfaces/DishDetail.html",[342,0.273,349,1.572]],["body/interfaces/DishDetail.html",[3,0.22,4,0.22,8,0.22,22,0.285,23,0.442,30,0.022,32,0.419,33,0.789,43,0.37,51,0.753,84,0.017,85,0.017,90,1.555,297,2.395,342,0.52,343,2.318,344,1.219,345,2.673,349,2.545,350,1.387,351,3.614,352,2.894,353,2.318,354,2.894,355,3.156,356,2.894,357,3.941,358,2.894,359,2.894,360,3.614,361,2.894,362,2.318,363,5.362,364,4.755,365,3.614]],["title/interfaces/DishIngredientModel.html",[342,0.273,362,1.788]],["body/interfaces/DishIngredientModel.html",[3,0.232,4,0.232,8,0.232,22,0.302,23,0.458,30,0.022,32,0.369,33,0.787,43,0.376,51,0.703,84,0.018,85,0.018,90,1.153,342,0.528,343,2.451,344,1.289,345,2.827,347,4.412,348,4.876,349,2.156,350,1.028,351,3.741,352,3.061,353,2.451,354,3.061,355,2.451,356,3.061,357,4.041,358,3.061,359,3.061,360,3.741,361,3.061,362,2.997]],["title/injectables/DishService.html",[113,1.111,366,2.694]],["body/injectables/DishService.html",[3,0.138,4,0.138,8,0.138,13,1.358,22,0.178,23,0.322,25,1.109,27,1.684,29,1.679,30,0.022,31,1.876,32,0.407,33,0.693,34,1.235,35,1.356,38,0.954,39,0.608,43,0.158,44,0.644,51,0.693,84,0.012,85,0.012,99,1.008,104,2.022,105,1.588,111,3.142,112,2.43,113,1.31,114,1.276,122,1.673,124,1.451,126,2.054,127,1.827,141,4.436,148,1.451,150,2.863,151,2.325,152,3.02,161,2.43,165,1.554,177,1.644,182,1.451,184,2.464,185,2.66,195,1.673,199,4.629,312,2.183,338,4.116,343,2.483,349,1.276,350,1.041,353,2.483,355,1.451,362,2.483,365,2.631,366,3.175,367,2.464,368,4.195,369,4.195,370,2.631,371,4.195,372,4.195,373,4.195,374,4.195,375,5.423,376,1.811,377,4.195,378,2.887,379,2.887,380,2.887,381,2.887,382,3.175,383,3.116,384,2.887,385,1.811,386,3.175,387,2.887,388,3.02,389,2.887,390,2.887,391,2.887,392,4.195,393,2.887,394,2.887,395,2.887,396,2.887,397,4.195,398,2.887,399,2.887,400,4.195,401,4.195,402,2.185,403,2.887,404,1.673,405,4.195,406,2.887,407,2.642,408,3.339,409,2.631,410,3.58,411,3.58,412,2.185,413,2.887,414,2.887,415,2.887,416,4.195,417,4.941,418,4.941,419,2.887,420,2.887,421,2.887,422,2.887,423,2.887,424,2.887,425,2.464,426,2.887,427,2.185,428,1.811,429,1.811,430,1.811,431,1.811,432,1.811]],["title/injectables/EditService.html",[113,1.111,433,1.916]],["body/injectables/EditService.html",[3,0.133,4,0.133,8,0.133,13,1.312,15,1.512,22,0.172,23,0.314,25,1.081,27,1.776,29,1.725,30,0.022,31,2.005,32,0.397,33,0.772,34,1.654,35,1.654,38,0.802,39,0.588,43,0.152,44,0.622,49,0.92,51,0.648,84,0.012,85,0.012,104,1.854,105,1.484,113,1.277,114,1.232,124,1.401,126,2.783,127,1.031,148,1.401,177,2.466,185,1.501,242,3.44,284,1.232,297,1.7,347,1.909,408,3.744,433,2.202,434,2.379,435,4.089,436,4.089,437,5.937,438,5.937,439,5.937,440,4.843,441,4.133,442,4.843,443,4.089,444,5.334,445,5.334,446,5.334,447,4.089,448,4.089,449,4.089,450,4.089,451,4.089,452,4.089,453,5.334,454,2.788,455,2.788,456,2.788,457,2.788,458,2.788,459,4.089,460,2.788,461,2.788,462,2.788,463,4.089,464,2.788,465,2.379,466,2.788,467,2.788,468,4.089,469,2.788,470,2.11,471,2.788,472,4.089,473,2.788,474,3.49,475,2.788,476,5.937,477,2.788,478,4.089,479,2.788,480,2.788,481,4.089,482,2.788,483,2.788,484,4.089,485,2.788,486,2.788,487,2.788,488,2.788,489,2.788,490,1.312,491,1.749,492,2.788,493,2.788,494,2.788,495,4.843,496,6.293,497,2.788,498,2.788,499,2.788,500,2.788,501,2.788,502,2.788,503,2.788,504,2.788,505,2.788,506,2.788,507,2.788,508,2.788]],["title/interfaces/EventCreateModel.html",[342,0.273,509,2.232]],["body/interfaces/EventCreateModel.html",[3,0.202,4,0.202,8,0.202,22,0.262,23,0.419,30,0.022,32,0.418,33,0.809,38,0.904,43,0.298,51,0.72,84,0.016,85,0.016,90,1.559,284,1.871,338,2.9,342,0.419,344,1.119,349,2.411,350,0.892,509,3.423,510,3.205,511,4.519,512,4.995,513,5.442,514,4.519,515,3.614,516,2.017,517,2.741,518,2.656,519,3.423,520,3.915,521,4,522,4,523,3.204,524,4.827,525,2.279,526,3.614,527,3.205,528,3.614]],["title/interfaces/EventDetailModel.html",[342,0.273,525,1.916]],["body/interfaces/EventDetailModel.html",[3,0.187,4,0.187,8,0.187,22,0.243,23,0.399,30,0.022,32,0.433,33,0.805,38,0.862,43,0.284,51,0.703,84,0.015,85,0.015,90,1.523,105,1.3,284,2.848,297,2.162,338,4.245,342,0.399,344,1.04,349,2.739,350,1.306,509,2.468,510,2.978,511,4.415,512,4.879,513,3.358,514,4.415,515,3.358,516,2.292,517,3.115,518,2.468,519,3.263,520,3.837,521,3.889,522,3.889,523,3.115,524,4.692,525,2.8,526,5.29,527,4.692,528,3.358,529,5.826]],["title/pipes/EventPipe.html",[530,2.232,531,2.437]],["body/pipes/EventPipe.html",[3,0.217,4,0.217,8,0.217,10,1.59,14,1.59,15,1.421,25,1.203,27,1.138,29,1.203,30,0.022,32,0.281,33,0.681,34,1.138,38,0.947,39,0.96,43,0.249,44,1.016,51,0.681,63,2.356,84,0.017,85,0.017,90,1.076,104,1.421,105,1.138,125,2.451,127,2.309,140,4.325,165,3.076,177,2.566,256,2.451,407,2.376,523,2.871,525,3.526,530,4.108,531,3.913,532,3.447,533,3.886,534,4.877,535,3.447,536,5.714,537,6.245,538,4.553,539,2.638,540,4.877,541,3.447,542,4.553,543,4.553,544,4.553,545,5.714,546,4.553,547,4.553,548,3.886]],["title/injectables/EventService.html",[113,1.111,549,2.437]],["body/injectables/EventService.html",[3,0.134,4,0.134,8,0.134,13,1.324,22,0.174,23,0.316,25,1.088,27,1.692,29,1.701,30,0.022,31,1.285,32,0.415,33,0.79,34,1.217,35,1.339,38,0.888,39,0.593,43,0.154,44,0.628,51,0.713,63,0.983,84,0.012,85,0.012,99,0.983,104,2.07,105,1.635,112,1.63,113,1.285,114,1.243,122,1.63,124,1.414,127,2.38,148,1.414,150,2.821,151,2.291,152,2.993,161,2.821,177,2.1,182,1.414,185,2.621,312,2.632,339,4.509,347,4.08,350,1.255,365,1.765,370,2.583,376,1.765,382,3.117,383,2.865,385,1.765,386,3.117,388,2.692,404,1.63,407,2.476,408,3.07,409,1.765,412,3.117,427,2.13,428,1.765,429,1.765,430,1.765,431,1.765,432,1.765,470,4.509,509,3.054,525,2.217,539,1.63,541,2.13,549,2.82,550,2.402,551,4.117,552,4.117,553,2.583,554,2.583,555,4.117,556,4.117,557,4.117,558,4.117,559,4.117,560,2.814,561,4.117,562,2.814,563,2.13,564,2.814,565,2.13,566,2.814,567,2.814,568,2.13,569,2.814,570,4.117,571,2.814,572,4.117,573,2.814,574,2.814,575,2.814,576,2.814,577,2.814,578,4.117,579,2.814,580,2.814,581,4.117,582,2.814,583,2.814,584,2.402,585,2.402,586,2.814,587,2.814,588,2.814,589,2.814,590,2.814,591,2.814,592,2.13,593,2.814,594,1.515,595,2.814,596,2.814,597,2.13,598,2.402,599,2.814,600,2.814,601,2.13,602,2.814,603,2.814,604,2.814,605,3.514,606,2.814,607,2.814]],["title/components/FoodPageComponent.html",[0,0.627,64,1.243]],["body/components/FoodPageComponent.html",[0,1.14,1,1.387,2,1.935,3,0.249,4,0.189,5,1.556,6,1.556,7,1.556,8,0.189,10,1.387,11,2.84,12,2.84,14,1.828,15,1.634,16,2.051,18,2.051,20,2.817,30,0.022,38,0.867,39,0.837,43,0.217,44,0.887,45,1.556,46,2.051,47,2.051,48,1.556,49,2.054,50,1.556,51,0.571,52,1.556,53,1.387,54,1.468,55,1.173,56,2.602,57,1.387,58,1.556,59,2.3,60,2.293,61,2.438,62,1.468,63,1.387,64,2.173,65,2.293,66,1.387,67,1.556,68,1.387,69,1.387,70,1.387,71,1.556,72,1.387,73,1.556,74,1.387,75,1.387,76,1.387,77,1.935,78,1.387,79,1.387,80,1.468,81,2.258,82,1.556,83,1.556,84,0.015,85,0.015,90,0.938,212,1.869,226,2.629,227,2.629,608,3.39,609,3.39,610,4.466,611,3.584,612,6.221,613,3.971,614,3.39,615,3.39]],["title/components/HomePageComponent.html",[0,0.627,66,1.243]],["body/components/HomePageComponent.html",[0,0.54,1,0.486,2,0.871,3,0.112,4,0.066,5,0.546,6,0.546,7,0.546,8,0.066,10,0.486,11,2.345,12,2.345,14,0.823,15,0.957,16,0.924,18,0.924,20,1.269,22,0.189,23,0.181,25,0.623,26,2.089,27,1.643,29,1.602,30,0.022,31,1.65,32,0.365,33,0.633,34,1.226,35,1.226,38,0.813,39,0.293,40,0.515,43,0.076,44,0.311,45,0.546,46,0.924,47,0.924,48,0.546,49,1.619,50,0.546,51,0.621,52,0.546,53,0.486,54,0.515,55,0.411,56,1.716,57,0.486,58,0.546,59,0.515,60,0.546,61,1.413,62,0.515,63,1.409,64,0.486,65,0.546,66,1.259,67,2.002,68,0.486,69,0.486,70,0.486,71,0.546,72,0.486,73,0.546,74,0.486,75,0.486,76,0.486,77,0.871,78,0.486,79,0.486,80,0.515,81,1.409,82,0.546,83,0.546,84,0.007,85,0.007,90,0.724,102,1.54,104,1.698,105,1.36,121,1.188,126,2.125,127,1.725,130,0.954,175,0.75,177,1.58,183,0.655,212,0.655,226,1.184,227,1.184,237,1.188,247,0.954,248,1.354,249,1.054,251,1.054,252,1.054,260,0.954,284,1.041,295,2.927,297,2.262,322,0.75,339,4.118,350,0.497,364,1.784,365,2.927,402,1.054,407,1.94,433,1.941,441,3.077,465,1.188,512,1.784,514,0.954,523,1.54,524,1.054,525,2.751,527,1.784,531,1.614,541,1.054,548,3.077,549,2.47,592,1.054,594,2.512,610,2.012,616,5.638,617,5.638,618,4.379,619,3.606,620,2.357,621,2.357,622,1.614,623,2.357,624,3.606,625,2.357,626,2.357,627,3.606,628,3.606,629,2.357,630,2.357,631,2.357,632,3.606,633,2.357,634,2.357,635,3.064,636,2.357,637,2.357,638,3.064,639,2.357,640,2.357,641,2.357,642,2.357,643,1.392,644,1.392,645,5.287,646,1.392,647,4.033,648,1.392,649,1.392,650,1.392,651,1.392,652,1.392,653,2.357,654,5.11,655,1.392,656,1.392,657,1.392,658,1.392,659,2.357,660,1.392,661,1.392,662,1.392,663,1.392,664,1.392,665,1.392,666,1.392,667,1.392,668,1.392,669,1.392,670,4.379,671,1.392,672,1.392,673,2.357,674,1.392,675,1.392,676,1.392,677,1.392,678,1.392,679,1.392,680,1.392,681,1.054,682,1.392,683,1.614,684,2.357,685,1.054,686,2.357,687,2.357,688,2.357,689,1.188,690,1.392,691,1.392,692,1.392,693,1.392,694,0.954,695,1.392,696,1.392,697,1.392,698,1.392,699,1.392,700,1.392,701,1.392,702,1.392,703,1.392,704,1.392,705,2.357,706,1.392,707,2.357,708,1.054,709,1.392,710,1.392,711,1.392,712,1.392,713,1.392,714,1.392,715,1.392,716,1.392,717,1.392,718,1.392,719,2.357,720,1.392,721,1.392,722,1.392,723,2.357,724,1.392,725,1.392,726,1.392,727,1.392,728,1.392,729,3.064,730,1.392,731,4.22,732,4.033,733,1.392,734,2.357,735,3.064,736,1.392,737,1.392,738,1.392,739,1.392,740,1.392,741,1.392,742,2.357,743,2.357,744,1.392,745,1.392,746,1.392,747,1.392,748,1.392,749,1.392,750,1.392,751,1.392,752,1.392,753,1.392,754,2.357,755,1.392,756,1.392,757,1.392,758,2.357,759,1.392,760,1.392,761,2.357,762,1.392,763,1.392,764,1.392,765,1.392,766,1.392,767,1.392,768,2.357,769,2.357,770,1.392,771,1.392,772,1.392,773,2.357,774,1.392,775,1.392,776,2.357,777,1.188,778,1.392,779,1.392,780,1.392,781,2.357,782,1.392,783,1.392,784,1.392,785,1.392,786,1.392,787,1.392,788,1.392,789,2.357,790,1.392,791,1.392,792,1.392,793,1.392,794,1.392,795,1.392,796,1.392,797,2.357,798,2.357,799,2.357,800,2.357,801,3.606,802,3.606,803,2.357,804,4.002,805,3.606,806,2.357,807,2.357,808,3.606,809,2.357,810,2.357,811,2.729,812,2.357,813,3.606,814,2.357,815,3.606,816,2.357,817,2.357,818,2.357,819,2.357,820,3.606,821,3.606,822,2.357,823,3.606,824,2.357,825,4.379,826,2.357,827,2.357,828,2.012,829,2.357,830,2.357,831,2.357,832,2.357,833,2.357,834,2.357,835,2.357,836,1.812,837,2.357,838,2.357,839,2.357,840,2.357,841,2.357,842,2.357]],["title/interfaces/IngredientCreate.html",[342,0.273,843,2.232]],["body/interfaces/IngredientCreate.html",[3,0.247,4,0.247,8,0.247,22,0.321,23,0.475,30,0.021,32,0.383,33,0.764,43,0.338,51,0.764,84,0.018,85,0.018,297,2.849,342,0.475,344,1.372,350,1.094,843,3.884,844,3.929,845,5.3,846,3.256]],["title/interfaces/IngredientDetail.html",[342,0.273,846,2.232]],["body/interfaces/IngredientDetail.html",[3,0.243,4,0.243,8,0.243,22,0.315,23,0.47,30,0.021,32,0.406,33,0.781,43,0.335,51,0.76,84,0.018,85,0.018,297,2.833,342,0.47,344,1.349,350,1.436,843,3.201,844,3.862,845,5.275,846,3.844]],["title/interfaces/IngredientDishDetail.html",[342,0.273,355,1.788]],["body/interfaces/IngredientDishDetail.html",[3,0.218,4,0.218,8,0.218,22,0.283,23,0.44,30,0.022,32,0.426,33,0.788,43,0.369,51,0.752,84,0.017,85,0.017,90,1.083,297,2.867,342,0.519,343,2.303,344,1.211,345,2.655,348,4.741,349,2.025,350,1.384,351,3.599,352,2.875,353,2.303,354,2.875,355,2.883,356,2.875,357,3.929,358,2.875,359,2.875,360,3.599,361,2.875,362,2.303,364,4.741,845,4.741,847,6.263]],["title/injectables/IngredientService.html",[113,1.111,848,2.694]],["body/injectables/IngredientService.html",[3,0.165,4,0.165,8,0.165,13,1.633,22,0.214,23,0.367,25,1.263,27,1.69,29,1.632,30,0.022,31,1.083,32,0.404,33,0.696,34,1.366,35,1.472,38,0.976,39,0.731,43,0.19,44,0.775,51,0.674,84,0.014,85,0.014,99,1.212,104,1.993,105,1.543,112,2.01,113,1.492,114,1.533,122,2.01,124,1.743,126,2.272,127,2.177,148,1.743,150,3.166,151,2.571,152,3.207,165,1.868,177,1.872,182,1.743,185,2.942,312,2.415,350,1.007,363,5.447,365,2.997,370,2.997,376,2.177,382,3.617,383,3.103,385,2.177,386,3.617,388,2.958,404,2.01,407,2.567,408,3.17,409,2.997,410,2.961,411,4.078,412,2.626,425,2.961,427,2.626,428,2.177,429,2.177,430,2.177,431,2.177,432,2.177,605,2.961,843,3.428,846,2.177,848,3.617,849,2.961,850,4.778,851,4.778,852,4.778,853,5.888,854,4.778,855,3.47,856,3.47,857,3.47,858,3.47,859,3.47,860,4.778,861,3.47,862,3.47,863,4.778,864,3.47,865,3.47,866,4.778,867,3.47,868,3.47,869,3.47,870,3.47,871,3.47]],["title/interfaces/LoginModel.html",[163,2.062,342,0.273]],["body/interfaces/LoginModel.html",[3,0.246,4,0.246,8,0.246,22,0.319,23,0.474,30,0.021,32,0.382,33,0.774,43,0.361,55,2.02,84,0.018,85,0.018,159,2.781,163,3.577,169,3.102,215,2.02,342,0.507,344,1.365,872,3.537,873,2.993,874,3.91,875,2.993,876,2.993]],["title/components/LoginPageComponent.html",[0,0.627,68,1.243]],["body/components/LoginPageComponent.html",[0,0.734,1,0.759,2,1.253,3,0.161,4,0.104,5,0.852,6,0.852,7,0.852,8,0.104,10,0.759,11,2.595,12,2.595,14,1.183,15,1.82,16,1.328,18,1.328,20,1.824,22,0.134,23,0.26,25,0.895,27,1.584,29,1.1,30,0.022,31,1.467,32,0.134,34,1.457,35,1.457,38,0.894,39,0.458,40,0.804,43,0.119,44,0.485,45,0.852,46,1.328,47,1.328,48,0.852,49,1.552,50,0.852,51,0.37,52,0.852,53,0.759,54,0.804,55,1.768,56,2.115,57,0.759,58,0.852,59,0.804,60,0.852,61,1.842,62,0.804,63,0.759,64,0.759,65,0.852,66,0.759,67,0.852,68,1.642,69,2.178,70,0.759,71,0.852,72,0.759,73,0.852,74,0.759,75,0.759,76,0.759,77,1.253,78,0.759,79,0.759,80,0.804,81,1.454,82,0.852,83,0.852,84,0.01,85,0.01,90,0.514,92,2.565,95,2.892,101,2.077,102,2.362,111,1.963,120,1.171,141,3.489,151,2.981,165,1.171,175,1.824,177,2.115,183,1.023,195,1.26,212,1.023,215,1.871,223,2.611,224,2.611,226,1.702,227,1.702,229,3.558,234,1.856,242,2.412,243,2.125,247,1.489,249,1.646,254,2.611,255,1.26,258,1.646,268,2.565,284,2.705,306,2.892,307,3.151,312,3.066,322,1.171,407,0.904,594,1.171,681,1.646,685,1.646,877,5.481,878,5.481,879,3.388,880,3.388,881,3.388,882,3.388,883,4.163,884,4.163,885,4.163,886,4.163,887,3.388,888,2.723,889,4.7,890,4.163,891,4.7,892,2.174,893,2.174,894,2.174,895,3.388,896,2.174,897,4.7,898,5.635,899,5.397,900,2.174,901,3.388,902,2.174,903,2.174,904,2.565,905,2.174,906,2.174,907,1.646,908,2.174,909,2.174,910,2.174,911,4.7,912,2.174,913,3.388,914,2.174,915,2.174,916,2.174,917,3.388,918,3.388,919,2.892,920,3.388,921,4.7,922,3.696,923,4.7,924,3.558,925,3.558,926,3.388,927,5.828,928,3.388,929,3.388,930,4.7,931,3.388,932,3.388,933,1.856,934,3.388,935,2.892,936,3.388,937,3.388,938,3.388,939,3.388,940,3.388,941,1.856]],["title/components/NotFoundPageComponent.html",[0,0.627,70,1.243]],["body/components/NotFoundPageComponent.html",[0,1.023,1,1.364,2,1.914,3,0.247,4,0.186,5,1.53,6,1.53,7,1.53,8,0.186,10,1.364,11,2.835,12,2.835,14,1.808,15,1.616,16,2.028,18,2.028,20,2.786,30,0.021,38,0.858,39,0.823,40,1.444,43,0.213,44,0.872,45,1.53,46,2.028,47,2.028,48,1.53,49,2.04,50,1.53,51,0.565,52,1.53,53,1.364,54,1.444,55,1.153,56,2.589,57,1.364,58,1.53,59,1.444,60,1.53,61,2.422,62,1.444,63,1.364,64,1.364,65,1.53,66,1.364,67,2.275,68,1.364,69,1.364,70,2.159,71,1.53,72,1.364,73,1.53,74,1.364,75,1.364,76,1.364,77,1.914,78,1.364,79,1.364,80,1.444,81,2.246,82,1.53,83,1.53,84,0.015,85,0.015,90,0.923,141,3.545,212,1.838,226,2.6,227,2.6,254,3.641,290,3.545,942,3.333,943,5.971,944,3.333,945,5.176,946,5.176,947,5.176,948,5.176,949,5.176]],["title/interfaces/PasswordResetModel.html",[159,1.916,342,0.273]],["body/interfaces/PasswordResetModel.html",[3,0.249,4,0.249,8,0.249,22,0.323,23,0.477,30,0.021,32,0.323,33,0.749,43,0.363,55,2.028,84,0.018,85,0.018,159,3.348,163,3.03,169,3.335,215,1.544,342,0.509,344,1.382,872,3.581,873,3.03,874,3.958,875,3.603,876,3.03]],["title/components/PeoplePageComponent.html",[0,0.627,72,1.243]],["body/components/PeoplePageComponent.html",[0,0.954,1,1.19,2,1.745,3,0.225,4,0.162,5,1.335,6,1.335,7,1.335,8,0.162,10,1.19,11,2.788,12,2.788,14,1.19,15,1.064,16,1.849,18,1.849,22,0.211,23,0.362,27,1.18,30,0.022,32,0.211,34,0.852,35,0.852,38,1.017,39,0.718,43,0.186,44,0.761,45,1.335,46,1.849,47,1.849,48,1.335,49,1.929,50,1.335,51,0.59,52,1.335,53,1.19,54,1.26,55,1.006,56,2.487,57,1.19,58,1.335,59,1.26,60,1.335,61,2.29,62,1.26,63,1.19,64,1.19,65,1.335,66,1.19,67,1.335,68,1.19,69,1.19,70,1.19,71,1.335,72,2.041,73,2.599,74,2.041,75,1.19,76,1.19,77,2.587,78,1.891,79,1.19,80,1.26,81,2.143,82,1.335,83,1.335,84,0.014,85,0.014,90,0.805,99,1.19,100,2.909,101,2.582,104,1.064,105,0.852,120,1.835,209,2.138,212,1.604,222,2.138,225,2.96,226,2.72,227,2.371,244,3.572,256,1.835,308,3.232,312,2.392,321,4.028,322,1.835,329,3.232,404,1.975,611,4.347,615,4.028,836,2.371,950,4.62,951,4.62,952,4.719,953,4.719,954,4.719,955,4.719,956,3.408,957,2.58,958,3.408,959,2.58,960,3.408,961,3.408,962,4.719,963,4.719]],["title/interfaces/PersonCreateModel.html",[342,0.273,490,1.674]],["body/interfaces/PersonCreateModel.html",[3,0.151,4,0.151,8,0.151,22,0.196,23,0.344,30,0.022,32,0.433,33,0.813,43,0.309,84,0.013,85,0.013,105,1.761,215,1.764,248,2.927,284,3.249,342,0.399,344,0.837,350,0.668,490,2.11,516,1.171,517,2.253,519,1.987,520,2.598,521,2.813,522,2.813,523,1.592,875,1.836,964,1.987,965,4.09,966,4.521,967,4.521,968,4.521,969,4.521,970,4.521,971,4.521,972,4.09,973,4.521,974,3.94,975,4.521,976,4.521,977,4.521,978,4.09,979,3.747,980,3.394,981,2.398,982,1.836,983,2.398,984,2.813,985,2.813,986,2.813]],["title/interfaces/PersonDetailModel.html",[342,0.273,516,1.316]],["body/interfaces/PersonDetailModel.html",[3,0.168,4,0.168,8,0.168,22,0.217,23,0.37,30,0.022,32,0.406,33,0.81,43,0.324,84,0.014,85,0.014,105,1.745,215,1.424,248,2.741,284,3.256,342,0.422,344,0.929,350,0.741,490,1.654,516,1.783,517,2.765,519,2.205,520,2.794,521,3.025,522,3.025,523,1.767,875,2.794,964,2.205,965,3.302,966,3.65,967,4.696,968,4.696,969,3.65,970,4.696,971,4.696,972,3.302,973,3.65,975,3.65,976,4.696,977,4.696,978,4.249,979,3.892,980,3.65,981,2.661,982,2.037,983,2.661,984,3.025,985,3.025,986,3.025]],["title/pipes/PersonPipe.html",[530,2.232,622,2.437]],["body/pipes/PersonPipe.html",[3,0.221,4,0.221,8,0.221,10,1.622,14,1.622,15,1.45,25,1.227,27,1.161,29,1.227,30,0.022,32,0.287,33,0.687,34,1.161,38,0.958,39,0.979,43,0.254,44,1.037,51,0.687,75,2.02,84,0.017,85,0.017,90,1.097,104,1.45,105,1.161,125,2.5,127,2.139,140,3.515,256,2.5,491,2.913,516,2.33,517,3.166,520,3.651,530,4.137,532,3.515,534,4.937,535,3.515,539,2.69,540,4.937,622,3.962,836,3.166,987,3.963,988,4.937,989,5.784,990,4.643,991,4.643,992,4.643,993,4.643,994,4.379,995,4.643,996,3.963]],["title/injectables/PersonService.html",[113,1.111,997,2.232]],["body/injectables/PersonService.html",[3,0.158,4,0.158,8,0.158,13,1.556,15,1.032,22,0.204,23,0.355,25,1.221,27,1.672,29,1.604,30,0.022,31,1.032,32,0.407,33,0.662,34,1.442,35,1.517,38,0.956,39,0.697,43,0.181,44,0.738,49,1.526,51,0.686,75,2.196,84,0.014,85,0.014,99,1.155,104,2.015,105,1.571,112,2.678,113,1.443,114,1.461,122,1.916,124,1.662,126,2.215,127,2.325,148,1.662,150,3.086,151,2.507,152,3.159,161,3.516,177,2.378,182,1.662,185,2.868,248,2.042,312,2.354,350,0.974,370,2.899,376,2.074,383,3.049,385,2.074,388,3.049,404,1.916,407,1.921,408,1.78,409,2.074,428,2.074,429,2.074,430,2.074,431,2.074,432,2.074,474,2.822,490,2.507,491,2.074,516,1.223,553,2.899,554,2.899,563,2.503,565,2.503,568,2.503,592,3.498,594,1.78,597,2.503,598,2.822,601,2.503,997,2.899,998,2.822,999,4.621,1000,4.621,1001,3.307,1002,3.307,1003,3.944,1004,3.307,1005,3.307,1006,3.307,1007,3.307,1008,4.621,1009,4.621,1010,3.307,1011,3.307,1012,4.621,1013,3.307,1014,3.307,1015,3.307,1016,3.307,1017,3.307,1018,3.307,1019,3.307,1020,3.307,1021,3.307,1022,3.307,1023,3.307,1024,3.307,1025,3.307,1026,3.307,1027,2.822,1028,2.822,1029,2.822,1030,2.822]],["title/components/PersonsListComponent.html",[0,0.627,74,1.243]],["body/components/PersonsListComponent.html",[0,0.725,1,0.503,2,0.897,3,0.237,4,0.069,5,0.565,6,0.565,7,0.565,8,0.069,10,0.503,11,2.366,12,2.366,14,0.847,15,1.151,16,0.951,18,0.951,20,1.306,22,0.089,23,0.186,25,0.641,26,2.136,27,1.644,29,1.521,30,0.022,31,1.76,32,0.34,33,0.615,34,1.465,35,1.409,38,0.858,39,0.304,40,0.533,43,0.079,44,0.322,45,0.565,46,0.951,47,0.951,48,0.565,49,1.472,50,0.565,51,0.694,52,0.565,53,0.503,54,0.533,55,0.425,56,1.747,57,0.503,58,0.565,59,0.533,60,0.565,61,1.444,62,0.533,63,0.503,64,0.503,65,0.565,66,0.503,67,0.565,68,0.503,69,0.503,70,0.503,71,0.565,72,0.503,73,1.231,74,1.287,75,2.16,76,0.503,77,0.897,78,0.503,79,0.503,80,0.533,81,0.503,82,0.565,83,0.565,84,0.007,85,0.007,90,0.34,99,1.097,102,1.579,104,1.284,105,1.028,111,0.835,114,0.637,127,0.533,130,2.524,165,1.306,175,0.776,183,0.678,195,2.136,215,1.47,217,1.836,223,1.971,224,1.971,239,2.79,241,1.091,242,1.82,248,1.388,255,0.835,260,0.987,275,1.091,276,1.091,295,2.312,297,1.971,307,2.378,308,2.152,312,1.388,313,2.79,322,0.776,328,3.769,329,2.524,350,0.511,383,0.724,388,1.852,407,1.009,408,1.306,433,1.691,490,1.936,491,1.522,511,2.524,514,2.524,516,1.648,523,1.852,539,0.835,553,2.796,554,1.522,594,2.681,611,2.524,683,0.987,694,0.987,708,1.091,804,1.836,836,2.24,922,2.524,933,2.07,941,2.07,957,5.005,965,1.661,972,2.524,974,2.79,978,3.053,979,0.904,982,1.406,984,2.312,985,2.312,986,2.312,994,1.836,996,2.07,997,1.971,1031,5.643,1032,1.091,1033,1.836,1034,2.07,1035,2.07,1036,2.07,1037,2.07,1038,2.07,1039,3.146,1040,2.07,1041,2.07,1042,2.07,1043,3.146,1044,3.146,1045,2.426,1046,2.426,1047,2.426,1048,4.113,1049,2.426,1050,2.426,1051,3.146,1052,3.146,1053,2.426,1054,2.07,1055,1.836,1056,3.146,1057,2.07,1058,3.686,1059,3.686,1060,1.836,1061,2.426,1062,1.441,1063,1.23,1064,1.441,1065,2.426,1066,1.441,1067,1.441,1068,1.23,1069,1.441,1070,1.23,1071,1.836,1072,2.79,1073,1.441,1074,1.836,1075,1.441,1076,1.23,1077,1.441,1078,1.441,1079,1.441,1080,1.441,1081,1.836,1082,1.441,1083,1.23,1084,1.441,1085,3.142,1086,1.23,1087,1.441,1088,3.686,1089,1.23,1090,1.23,1091,2.07,1092,1.441,1093,1.23,1094,1.441,1095,1.23,1096,1.23,1097,1.23,1098,1.23,1099,1.441,1100,1.441,1101,1.23,1102,1.23,1103,1.441,1104,1.441,1105,1.441,1106,1.441,1107,1.441,1108,1.441,1109,1.441,1110,1.441,1111,1.441,1112,1.441,1113,1.441,1114,4.458,1115,3.142,1116,1.23,1117,1.441,1118,2.426,1119,1.441,1120,2.426,1121,2.426,1122,1.23,1123,1.441,1124,1.23,1125,1.23,1126,1.441,1127,1.23,1128,1.23,1129,1.23,1130,1.441,1131,1.23,1132,1.441,1133,1.441,1134,1.441,1135,1.441,1136,1.441,1137,3.686,1138,1.441,1139,2.79,1140,1.441,1141,1.091,1142,1.441,1143,2.426,1144,1.441,1145,1.441,1146,1.441,1147,1.441,1148,1.23,1149,1.23,1150,1.23,1151,1.23,1152,2.426,1153,2.426,1154,2.426,1155,2.426,1156,2.426,1157,2.426,1158,2.07,1159,2.426,1160,2.07,1161,2.07,1162,2.426,1163,2.426,1164,2.426,1165,2.426,1166,3.686,1167,2.426,1168,4.979,1169,3.686,1170,3.686,1171,3.686,1172,3.686,1173,4.979,1174,2.426,1175,3.142,1176,3.146,1177,2.426,1178,3.142,1179,2.426,1180,3.686,1181,2.426,1182,2.426,1183,2.426,1184,2.426,1185,2.426,1186,2.426,1187,3.142,1188,3.142]],["title/interfaces/SmallPersonDetailModel.html",[342,0.273,517,1.788]],["body/interfaces/SmallPersonDetailModel.html",[3,0.164,4,0.164,8,0.164,22,0.212,23,0.364,30,0.022,32,0.426,33,0.81,43,0.32,84,0.014,85,0.014,105,1.661,215,1.817,248,3.048,284,3.23,297,1.973,342,0.417,344,0.908,350,1.236,490,1.617,516,1.27,517,2.732,519,2.155,520,2.75,521,2.977,522,2.977,523,1.726,875,1.991,964,2.155,965,4.214,966,4.658,967,3.592,968,3.592,969,4.658,970,3.592,971,3.592,972,4.214,973,4.658,974,4.115,975,4.658,976,3.592,977,3.592,978,3.25,979,3.41,980,3.592,981,2.601,982,3.397,983,2.601,984,2.977,985,2.977,986,2.977,1158,4.64]],["title/interfaces/TokenModel.html",[169,1.788,342,0.273]],["body/interfaces/TokenModel.html",[3,0.246,4,0.246,8,0.246,22,0.319,23,0.474,30,0.021,32,0.382,33,0.774,43,0.361,55,1.525,84,0.018,85,0.018,159,2.781,163,2.993,169,3.317,215,2.02,342,0.507,344,1.365,872,3.537,873,2.993,874,3.91,875,2.993,876,2.993,1189,5.635]],["title/interfaces/UserCreate.html",[342,0.273,1190,1.916]],["body/interfaces/UserCreate.html",[3,0.229,4,0.229,8,0.229,22,0.297,23,0.453,30,0.022,32,0.413,33,0.8,38,0.795,43,0.35,51,0.698,55,1.889,84,0.017,85,0.017,187,2.259,215,2.023,342,0.491,344,1.269,350,1.012,470,4.842,516,2.184,518,3.012,836,2.412,873,2.782,876,2.782,1190,3.179,1191,3.288,1192,3.634,1193,3.634,1194,3.634,1195,4.47,1196,3.634,1197,3.634,1198,2.412]],["title/interfaces/UserDetail.html",[187,1.674,342,0.273]],["body/interfaces/UserDetail.html",[3,0.218,4,0.218,8,0.218,22,0.283,23,0.44,30,0.022,32,0.433,33,0.795,38,0.759,43,0.342,84,0.017,85,0.017,187,2.7,215,1.996,248,2.9,342,0.481,344,1.211,350,1.384,516,2.427,518,2.875,836,3.298,873,2.655,876,2.655,982,3.629,1190,2.467,1191,3.139,1192,3.469,1193,3.469,1194,3.469,1195,5.117,1196,3.469,1197,3.469,1198,2.303,1199,6.263,1200,4.741]],["title/components/UserInfoPageComponent.html",[0,0.627,76,1.243]],["body/components/UserInfoPageComponent.html",[0,0.805,1,0.881,2,1.403,3,0.345,4,0.12,5,0.988,6,0.988,7,0.988,8,0.12,10,0.881,11,2.665,12,2.665,14,0.881,15,0.787,16,0.988,18,1.487,22,0.156,23,0.291,25,1.003,26,2.942,27,1.617,29,1.342,30,0.022,31,1.585,32,0.235,33,0.624,34,1.43,35,1.43,38,0.984,39,0.532,40,0.932,43,0.138,44,0.563,45,0.988,46,1.487,47,1.487,48,0.988,49,1.677,50,0.988,51,0.624,52,0.988,53,0.881,54,0.932,55,0.745,56,2.242,57,0.881,58,0.988,59,0.932,60,0.988,61,1.99,62,0.932,63,0.881,64,0.881,65,0.988,66,0.881,67,0.988,68,0.881,69,0.881,70,0.881,71,0.988,72,0.881,73,0.988,74,0.881,75,0.881,76,1.774,77,2.573,78,0.881,79,0.881,80,0.932,81,1.902,82,0.988,83,0.988,84,0.011,85,0.011,90,0.596,99,1.594,101,2.244,102,2.552,104,1.185,105,0.949,120,1.358,125,2.043,175,2.043,183,1.187,187,2.563,188,1.727,195,1.461,209,1.582,212,1.187,215,1.5,222,2.863,223,2.381,224,2.381,225,2.381,226,2.293,227,1.907,243,2.381,244,1.909,245,2.152,246,2.152,247,2.6,248,2.017,251,1.909,252,1.909,255,1.461,256,1.358,326,2.152,383,1.267,388,2.293,407,1.048,433,2.734,539,1.461,594,1.358,681,1.909,683,2.6,689,2.152,694,1.727,888,2.942,904,2.873,907,1.909,919,3.239,922,2.6,924,2.873,925,2.873,988,3.239,1033,2.873,1055,2.873,1060,2.873,1071,2.873,1072,3.844,1074,2.873,1081,2.873,1139,3.844,1141,1.909,1198,1.267,1201,5.594,1202,5.594,1203,4.564,1204,4.334,1205,2.522,1206,2.522,1207,2.522,1208,2.522,1209,2.522,1210,2.152,1211,2.522,1212,2.522,1213,3.796,1214,2.522,1215,2.522,1216,3.239,1217,3.239,1218,3.239,1219,3.239,1220,3.239]],["title/components/UserListComponent.html",[0,0.627,78,1.243]],["body/components/UserListComponent.html",[0,0.703,1,0.477,2,0.858,3,0.111,4,0.065,5,0.535,6,0.535,7,0.535,8,0.065,10,0.477,11,2.333,12,2.333,14,0.477,15,0.724,16,0.535,18,0.909,22,0.084,23,0.178,25,0.613,27,1.675,29,1.573,30,0.022,31,1.831,32,0.357,33,0.617,34,1.466,35,1.466,38,0.84,39,0.288,40,0.505,43,0.075,44,0.305,45,0.535,46,0.909,47,0.909,48,0.535,49,1.176,50,0.535,51,0.589,52,0.535,53,0.477,54,0.505,55,0.403,56,1.699,57,0.477,58,0.535,59,0.505,60,0.535,61,1.396,62,0.505,63,0.477,64,0.477,65,0.535,66,0.477,67,0.535,68,0.477,69,0.477,70,0.477,71,0.535,72,0.477,73,0.535,74,0.477,75,1.514,76,0.477,77,2.447,78,1.244,79,0.477,80,0.505,81,0.477,82,0.535,83,0.535,84,0.007,85,0.007,90,0.323,99,1.056,102,1.518,104,1.245,105,0.997,126,2.303,127,0.505,152,0.686,165,1.249,175,0.736,182,0.686,183,0.643,187,2.175,188,0.936,195,2.064,209,0.857,215,1.55,217,1.756,221,3.877,222,0.857,223,1.455,224,1.455,225,1.455,231,2.579,232,3.04,239,2.696,241,1.034,242,2.512,248,2.043,255,0.792,256,0.736,260,0.936,275,1.034,276,1.034,277,1.166,281,1.166,287,2.696,295,2.72,308,1.588,312,2.24,313,2.696,322,0.736,328,2.696,329,2.439,334,1.98,335,1.98,337,1.034,350,0.489,383,0.686,388,1.518,407,0.568,433,1.627,535,1.756,539,0.792,553,2.72,554,2.72,594,2.826,611,2.439,683,0.936,694,0.936,708,1.034,731,1.034,804,1.756,811,2.288,836,1.79,888,1.751,904,1.034,907,1.034,922,2.439,924,2.696,925,2.696,959,5.094,982,1.344,994,1.756,997,1.896,1032,1.034,1033,1.756,1034,1.98,1035,1.98,1036,1.98,1037,1.98,1038,1.98,1039,3.04,1040,1.98,1041,1.98,1042,2.579,1043,3.04,1044,3.04,1051,3.04,1052,3.04,1054,1.98,1055,1.756,1056,3.04,1057,1.98,1060,1.756,1063,1.166,1068,1.166,1070,1.166,1071,1.756,1072,2.696,1074,1.756,1076,1.166,1081,1.756,1083,1.166,1086,1.98,1089,1.166,1090,1.166,1091,1.98,1093,1.166,1095,1.166,1096,1.166,1097,1.166,1098,1.166,1101,1.166,1102,1.166,1116,1.166,1122,1.166,1124,1.166,1125,1.166,1127,1.166,1128,1.166,1129,1.166,1131,1.166,1139,2.696,1141,1.034,1148,1.166,1149,1.166,1150,1.166,1151,1.166,1160,1.98,1161,1.98,1176,1.166,1190,2.334,1198,0.686,1200,3.282,1204,3.04,1210,1.166,1216,3.04,1217,3.04,1218,1.98,1219,1.98,1220,3.04,1221,5.743,1222,2.319,1223,2.319,1224,2.319,1225,3.022,1226,3.022,1227,3.022,1228,3.562,1229,3.562,1230,3.701,1231,2.319,1232,1.366,1233,1.366,1234,1.366,1235,1.366,1236,1.366,1237,1.366,1238,1.366,1239,1.366,1240,1.366,1241,1.366,1242,1.366,1243,1.366,1244,1.366,1245,1.366,1246,2.319,1247,1.366,1248,1.366,1249,1.366,1250,1.366,1251,1.366,1252,2.319,1253,1.366,1254,1.366,1255,1.366,1256,2.319,1257,1.366,1258,1.366,1259,1.366,1260,1.366,1261,1.366,1262,1.366,1263,1.366,1264,1.366,1265,1.366,1266,1.366,1267,3.562,1268,3.022,1269,1.366,1270,1.366,1271,1.366,1272,2.319,1273,2.319,1274,1.366,1275,3.022,1276,1.366,1277,1.366,1278,1.366,1279,1.366,1280,1.366,1281,1.366,1282,1.366,1283,1.366,1284,2.319,1285,1.366,1286,2.319,1287,2.319,1288,2.319,1289,2.319,1290,2.319,1291,2.319,1292,2.319,1293,2.319,1294,2.319,1295,2.319,1296,2.319,1297,2.319,1298,2.319,1299,2.319,1300,1.366,1301,2.319,1302,4.623,1303,2.319,1304,1.366,1305,1.366,1306,2.319,1307,3.022,1308,1.366,1309,1.366,1310,1.366,1311,4.336,1312,2.319,1313,2.319,1314,1.366,1315,1.366,1316,1.366,1317,1.366,1318,1.366,1319,1.366,1320,1.366,1321,1.366,1322,1.366,1323,1.366,1324,1.366,1325,1.366,1326,1.366,1327,1.366,1328,1.366,1329,1.366,1330,1.366,1331,1.366,1332,1.366,1333,2.319,1334,1.366,1335,1.366,1336,2.319,1337,1.366,1338,1.366,1339,1.366,1340,1.366,1341,2.319,1342,1.366,1343,1.366,1344,1.366,1345,2.319,1346,1.366,1347,1.366]],["title/interfaces/UserPatch.html",[342,0.273,1198,1.788]],["body/interfaces/UserPatch.html",[3,0.236,4,0.236,8,0.236,22,0.307,23,0.462,30,0.022,32,0.372,33,0.789,38,0.822,43,0.355,84,0.018,85,0.018,187,2.333,215,2.042,342,0.498,344,1.311,350,1.045,516,2.227,518,3.111,836,2.492,873,2.873,876,2.873,1190,2.67,1191,3.396,1192,3.754,1193,3.754,1194,3.754,1195,5.234,1196,3.754,1197,3.754,1198,3.027]],["title/injectables/UserService.html",[113,1.111,888,2.062]],["body/injectables/UserService.html",[3,0.147,4,0.147,8,0.147,13,1.447,22,0.19,23,0.337,25,1.16,27,1.72,29,1.739,30,0.022,31,0.96,32,0.417,33,0.761,34,1.28,35,1.396,38,1.017,39,0.648,43,0.168,44,0.687,49,1.015,51,0.718,84,0.013,85,0.013,99,1.074,104,2.083,105,1.644,113,1.371,114,1.359,122,1.782,124,1.545,126,2.129,127,2.39,148,1.545,150,2.967,151,2.41,152,3.086,154,3.324,161,3.422,177,1.72,182,1.545,185,2.757,187,1.447,188,2.107,215,0.908,221,4.206,312,2.263,350,1.245,370,2.754,376,1.93,383,2.967,385,1.93,388,2.967,404,1.782,407,1.826,408,1.656,409,1.93,428,1.93,429,1.93,430,1.93,431,1.93,432,1.93,490,1.447,491,1.93,553,2.754,554,2.754,563,2.328,565,2.328,568,2.328,584,2.625,585,2.625,597,2.328,601,2.328,888,2.544,1003,3.747,1027,2.625,1028,2.625,1029,2.625,1030,2.625,1190,2.757,1198,1.545,1200,3.324,1230,3.747,1348,2.625,1349,4.391,1350,4.391,1351,5.585,1352,4.391,1353,3.076,1354,3.076,1355,3.076,1356,3.076,1357,3.076,1358,3.076,1359,3.076,1360,3.076,1361,3.076,1362,3.076,1363,3.076,1364,3.076,1365,3.076,1366,4.391,1367,3.076,1368,3.076,1369,4.391,1370,3.076,1371,2.625,1372,3.076,1373,3.076,1374,3.076,1375,3.076,1376,3.076,1377,3.076,1378,3.076,1379,3.076,1380,3.076,1381,3.076,1382,3.076,1383,3.076,1384,3.076]],["title/components/ValidateEmailPageComponent.html",[0,0.627,79,1.243]],["body/components/ValidateEmailPageComponent.html",[0,0.904,1,1.076,2,1.625,3,0.209,4,0.147,5,1.207,6,1.207,7,1.207,8,0.147,10,1.076,11,2.749,12,2.749,14,1.076,15,0.962,16,1.207,18,1.722,22,0.19,23,0.337,25,1.162,26,3.238,27,1.477,29,0.814,30,0.022,31,0.962,32,0.19,34,1.099,35,1.099,38,0.926,39,0.649,40,1.139,43,0.168,44,0.688,45,1.207,46,1.722,47,1.722,48,1.207,49,1.845,50,1.207,51,0.479,52,1.207,53,1.076,54,1.139,55,0.91,56,2.408,57,1.076,58,1.207,59,1.139,60,1.207,61,2.19,62,1.139,63,1.076,64,1.076,65,1.207,66,1.076,67,1.207,68,1.076,69,2.209,70,1.076,71,1.207,72,1.076,73,1.207,74,1.076,75,1.076,76,1.076,77,1.625,78,1.076,79,1.952,80,1.895,81,2.209,82,1.207,83,1.207,84,0.013,85,0.013,90,0.728,99,1.79,101,2.469,111,1.785,120,1.658,125,2.366,126,2.131,151,2.411,169,1.548,181,2.332,183,1.449,209,1.932,212,1.449,214,5.043,215,2.127,216,4.769,221,3.01,222,3.215,225,2.757,226,2.575,227,2.209,229,4.23,243,2.757,250,2.629,253,2.629,254,2.757,256,1.658,258,2.332,259,2.629,262,2.629,265,2.629,266,2.629,267,2.629,268,2.332,284,1.942,287,3.327,288,3.751,290,3.827,298,3.751,685,2.332,1189,3.751,1385,5.244,1386,5.244,1387,4.395,1388,4.395,1389,4.395,1390,4.395,1391,3.08,1392,3.08,1393,3.08,1394,4.395]],["title/coverage.html",[1395,4.149]],["body/coverage.html",[0,1.229,1,1.113,3,0.215,8,0.152,9,2.72,30,0.022,32,0.197,53,1.113,55,1.33,57,1.113,59,1.178,62,1.178,64,1.113,66,1.113,68,1.113,70,1.113,72,1.113,74,1.113,76,1.113,78,1.113,79,1.113,84,0.013,85,0.013,86,2.183,87,2.413,89,2.72,101,1.408,113,1.994,149,2.72,159,1.716,163,1.847,169,1.601,177,1.249,187,1.5,210,2.72,211,2.72,212,3.069,215,1.33,293,2.72,302,2.72,342,0.546,343,1.601,345,3.468,349,1.408,353,1.601,355,1.601,362,1.601,366,2.413,367,2.72,433,1.716,434,2.72,490,1.5,509,1.999,510,3.409,516,1.178,517,1.601,525,1.716,530,2.825,531,2.183,533,2.72,549,2.183,550,2.72,608,2.72,609,2.72,614,2.72,616,2.72,617,2.72,622,2.183,731,5.518,811,3.953,843,1.999,844,3.409,846,1.999,848,2.413,849,2.72,872,3.576,877,2.72,878,2.72,888,1.847,942,2.72,943,3.843,944,2.72,950,2.72,951,2.72,957,2.413,959,2.413,964,3.276,987,2.72,997,1.999,998,2.72,1031,2.72,1032,4.295,1190,1.716,1191,3.576,1198,1.601,1201,2.72,1202,2.72,1221,2.72,1348,2.72,1385,2.72,1386,2.72,1395,2.72,1396,3.187,1397,3.187,1398,3.187,1399,6.387,1400,2.72,1401,3.187,1402,2.72,1403,3.187,1404,3.187,1405,3.843,1406,3.187,1407,3.187,1408,3.187,1409,3.187,1410,3.187,1411,3.187,1412,4.503,1413,4.503,1414,3.187,1415,3.187,1416,3.187,1417,4.503,1418,3.187,1419,4.503,1420,3.187,1421,3.187,1422,4.503,1423,4.503,1424,3.187,1425,3.843,1426,3.187,1427,5.675,1428,5.675,1429,3.187,1430,3.187,1431,3.187,1432,3.187,1433,3.187,1434,3.187,1435,3.187,1436,4.503,1437,4.503,1438,3.187,1439,3.187]],["title/dependencies.html",[1440,2.248,1441,3.654]],["body/dependencies.html",[30,0.022,39,1.078,40,1.891,42,3.872,84,0.018,85,0.018,114,2.26,255,2.964,322,2.754,1371,4.365,1441,4.365,1442,7.219,1443,5.115,1444,5.115,1445,5.115,1446,6.137,1447,6.137,1448,5.115,1449,5.115,1450,5.115,1451,5.115,1452,5.115,1453,5.115,1454,5.115,1455,5.115,1456,5.115,1457,5.115,1458,5.115]],["title/miscellaneous/enumerations.html",[1459,2.034,1460,3.654]],["body/miscellaneous/enumerations.html",[22,0.339,30,0.021,35,1.744,84,0.019,85,0.019,964,3.442,979,4.013,984,4.013,985,4.013,986,4.013,1459,3.758,1460,4.683,1461,5.487]],["title/index.html",[22,0.184,1462,2.969,1463,2.969]],["body/index.html",[0,1.099,4,0.216,30,0.017,51,0.494,54,1.676,81,1.583,84,0.017,85,0.017,125,2.441,130,3.105,177,1.776,213,5.581,290,3.105,337,3.432,402,4.718,511,4.71,777,3.869,828,3.869,935,3.869,1440,3.432,1464,4.534,1465,5.699,1466,4.534,1467,6.233,1468,6.233,1469,3.869,1470,4.534,1471,4.534,1472,5.699,1473,6.738,1474,6.98,1475,4.534,1476,4.534,1477,4.534,1478,4.534,1479,4.534,1480,4.534,1481,4.534,1482,4.534,1483,4.534,1484,6.233,1485,4.534,1486,6.539,1487,4.534,1488,4.534,1489,4.534,1490,4.534,1491,5.699,1492,5.699,1493,4.534,1494,5.699,1495,5.699,1496,4.534,1497,4.534,1498,4.534,1499,4.534,1500,5.699,1501,4.534,1502,4.534,1503,4.534,1504,4.534,1505,6.233,1506,4.534,1507,3.432,1508,4.534]],["title/modules.html",[1509,4.149]],["body/modules.html",[30,0.019,84,0.019,85,0.019,1509,4.939]],["title/overview.html",[1507,3.68]],["body/overview.html",[2,2.083,30,0.019,84,0.019,85,0.019,86,3.858,148,2.83,295,3.534,344,1.489,532,4.264,1405,4.807,1425,4.807,1507,4.264,1510,5.633,1511,5.633]],["title/properties.html",[23,0.328,1440,2.248]],["body/properties.html",[23,0.44,30,0.02,84,0.019,85,0.019,1469,4.899,1512,5.74]],["title/miscellaneous/variables.html",[1459,2.034,1513,3.654]],["body/miscellaneous/variables.html",[22,0.343,30,0.021,32,0.343,34,1.386,35,1.386,84,0.019,85,0.019,1400,4.732,1402,5.493,1459,3.797,1513,4.732,1514,5.544,1515,5.544,1516,5.544,1517,5.544]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":731,"title":{},"body":{"components/HomePageComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["0.14.10",{"_index":1458,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":1316,"title":{},"body":{"components/UserListComponent.html":{}}}],["0.5",{"_index":1337,"title":{},"body":{"components/UserListComponent.html":{}}}],["0.5rem",{"_index":1333,"title":{},"body":{"components/UserListComponent.html":{}}}],["0/1",{"_index":1403,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1437,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1420,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1423,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1435,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1436,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1421,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1416,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1434,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1399,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1417,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1424,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1418,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1419,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1422,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":295,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{},"overview.html":{}}}],["1,2,3,4].filter(x=>!rowsfull.includes(x))[0",{"_index":759,"title":{},"body":{"components/HomePageComponent.html":{}}}],["1.0.1",{"_index":1512,"title":{},"body":{"properties.html":{}}}],["1/1",{"_index":1428,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":1431,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":1430,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":1426,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1342,"title":{},"body":{"components/UserListComponent.html":{}}}],["1/27",{"_index":1410,"title":{},"body":{"coverage.html":{}}}],["1/28",{"_index":1429,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1413,"title":{},"body":{"coverage.html":{}}}],["1/33",{"_index":1411,"title":{},"body":{"coverage.html":{}}}],["1/37",{"_index":1406,"title":{},"body":{"coverage.html":{}}}],["1/49",{"_index":1409,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1433,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1415,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1427,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1414,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1510,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1432,"title":{},"body":{"coverage.html":{}}}],["17.3.11",{"_index":1470,"title":{},"body":{"index.html":{}}}],["18",{"_index":1511,"title":{},"body":{"overview.html":{}}}],["18.2.0",{"_index":1442,"title":{},"body":{"dependencies.html":{}}}],["18.2.12",{"_index":1444,"title":{},"body":{"dependencies.html":{}}}],["1][6",{"_index":785,"title":{},"body":{"components/HomePageComponent.html":{}}}],["1rem",{"_index":1334,"title":{},"body":{"components/UserListComponent.html":{}}}],["2",{"_index":1405,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["2.3.0",{"_index":1456,"title":{},"body":{"dependencies.html":{}}}],["2.5.2",{"_index":1451,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":811,"title":{},"body":{"components/HomePageComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["32",{"_index":1310,"title":{},"body":{"components/UserListComponent.html":{}}}],["33",{"_index":1412,"title":{},"body":{"coverage.html":{}}}],["4.0.12",{"_index":1450,"title":{},"body":{"dependencies.html":{}}}],["404",{"_index":949,"title":{},"body":{"components/NotFoundPageComponent.html":{}}}],["5",{"_index":1305,"title":{},"body":{"components/UserListComponent.html":{}}}],["56",{"_index":1308,"title":{},"body":{"components/UserListComponent.html":{}}}],["6",{"_index":735,"title":{},"body":{"components/HomePageComponent.html":{}}}],["7",{"_index":1425,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["7.8.0",{"_index":1454,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":293,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"coverage.html":{}}}],["8.5.3",{"_index":1453,"title":{},"body":{"dependencies.html":{}}}],["8601",{"_index":522,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["95",{"_index":1336,"title":{},"body":{"components/UserListComponent.html":{}}}],["a.key.gettime",{"_index":719,"title":{},"body":{"components/HomePageComponent.html":{}}}],["accesable",{"_index":880,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["accesed",{"_index":94,"title":{},"body":{"guards/AuthGuard.html":{}}}],["acountcreation",{"_index":228,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["acountcreation=false",{"_index":261,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["activatedroute",{"_index":253,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["activatedroutesnapshot",{"_index":107,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":965,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["active\":\"inactive",{"_index":1156,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["activecreatemodal",{"_index":1043,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["activecreatemodal:boolean",{"_index":1260,"title":{},"body":{"components/UserListComponent.html":{}}}],["activecreatemodal=false",{"_index":1106,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["activeeditmodal",{"_index":1044,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["activeeditmodal:boolean",{"_index":1261,"title":{},"body":{"components/UserListComponent.html":{}}}],["activeeditmodal=false",{"_index":1105,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["actual_component",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["add",{"_index":828,"title":{},"body":{"components/HomePageComponent.html":{},"index.html":{}}}],["adddishtoevent",{"_index":551,"title":{},"body":{"injectables/EventService.html":{}}}],["adddishtoevent(id",{"_index":559,"title":{},"body":{"injectables/EventService.html":{}}}],["addeventstodays",{"_index":628,"title":{},"body":{"components/HomePageComponent.html":{}}}],["addingredienttodish",{"_index":368,"title":{},"body":{"injectables/DishService.html":{}}}],["addingredienttodish(model",{"_index":378,"title":{},"body":{"injectables/DishService.html":{}}}],["addingredienttodish(model:dishaddingredientmodel",{"_index":414,"title":{},"body":{"injectables/DishService.html":{}}}],["addpersontoevent",{"_index":552,"title":{},"body":{"injectables/EventService.html":{}}}],["addpersontoevent(id",{"_index":561,"title":{},"body":{"injectables/EventService.html":{}}}],["address",{"_index":925,"title":{},"body":{"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["addrole",{"_index":1349,"title":{},"body":{"injectables/UserService.html":{}}}],["addrole(id",{"_index":1353,"title":{},"body":{"injectables/UserService.html":{}}}],["addrole(id:string,role:string",{"_index":1379,"title":{},"body":{"injectables/UserService.html":{}}}],["adds",{"_index":304,"title":{},"body":{"components/DefaultComponent.html":{}}}],["adjust",{"_index":121,"title":{},"body":{"guards/AuthGuard.html":{},"components/HomePageComponent.html":{}}}],["admin",{"_index":963,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["admin\",\"usermanger",{"_index":1252,"title":{},"body":{"components/UserListComponent.html":{}}}],["administrators",{"_index":955,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["again",{"_index":937,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["age",{"_index":1158,"title":{},"body":{"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["age?:number|null",{"_index":981,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["alert(x.error.message",{"_index":1145,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["amount",{"_index":847,"title":{},"body":{"interfaces/IngredientDishDetail.html":{}}}],["amount:number",{"_index":358,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["amout",{"_index":346,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{}}}],["amout:number",{"_index":361,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["angular",{"_index":1467,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1371,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1443,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":322,"title":{},"body":{"components/DefaultComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1445,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":255,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1446,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"dependencies.html":{}}}],["any)[field",{"_index":1139,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["any)[key",{"_index":432,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["any)[x",{"_index":1137,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["api/v1/auth",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["api/v1/dish",{"_index":397,"title":{},"body":{"injectables/DishService.html":{}}}],["api/v1/event",{"_index":578,"title":{},"body":{"injectables/EventService.html":{}}}],["api/v1/ingredient",{"_index":863,"title":{},"body":{"injectables/IngredientService.html":{}}}],["api/v1/person",{"_index":1009,"title":{},"body":{"injectables/PersonService.html":{}}}],["api/v1/user",{"_index":1366,"title":{},"body":{"injectables/UserService.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1402,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1479,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apply",{"_index":1302,"title":{},"body":{"components/UserListComponent.html":{}}}],["args",{"_index":537,"title":{},"body":{"pipes/EventPipe.html":{}}}],["artifacts",{"_index":1487,"title":{},"body":{"index.html":{}}}],["async",{"_index":329,"title":{},"body":{"components/DefaultComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["async;track",{"_index":1294,"title":{},"body":{"components/UserListComponent.html":{}}}],["asyncpipe",{"_index":308,"title":{},"body":{"components/DefaultComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["autentication",{"_index":96,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authenticated",{"_index":134,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authguard",{"_index":87,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["authservice",{"_index":101,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/LoginPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["authservice:authservice",{"_index":961,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["authservice=inject(authservice",{"_index":324,"title":{},"body":{"components/DefaultComponent.html":{}}}],["automatically",{"_index":1480,"title":{},"body":{"index.html":{}}}],["available",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{}}}],["back",{"_index":940,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["base",{"_index":945,"title":{},"body":{"components/NotFoundPageComponent.html":{}}}],["baseurl",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["before",{"_index":744,"title":{},"body":{"components/HomePageComponent.html":{}}}],["behaviorsubject",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["behaviorsubject(null",{"_index":476,"title":{},"body":{"injectables/EditService.html":{}}}],["being",{"_index":93,"title":{},"body":{"guards/AuthGuard.html":{}}}],["between",{"_index":1345,"title":{},"body":{"components/UserListComponent.html":{}}}],["birth",{"_index":1172,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["boolean",{"_index":248,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["border",{"_index":1303,"title":{},"body":{"components/UserListComponent.html":{}}}],["box",{"_index":1332,"title":{},"body":{"components/UserListComponent.html":{}}}],["break",{"_index":1319,"title":{},"body":{"components/UserListComponent.html":{}}}],["browser",{"_index":1447,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1486,"title":{},"body":{"index.html":{}}}],["button",{"_index":1325,"title":{},"body":{"components/UserListComponent.html":{}}}],["calendar",{"_index":618,"title":{},"body":{"components/HomePageComponent.html":{}}}],["calendar:keyvalue",{"_index":699,"title":{},"body":{"components/HomePageComponent.html":{}}}],["calendar[0",{"_index":803,"title":{},"body":{"components/HomePageComponent.html":{}}}],["calendarmonth",{"_index":435,"title":{},"body":{"injectables/EditService.html":{}}}],["calendarmonth:number=new",{"_index":492,"title":{},"body":{"injectables/EditService.html":{}}}],["calendaryear",{"_index":436,"title":{},"body":{"injectables/EditService.html":{}}}],["calendaryear:number=new",{"_index":493,"title":{},"body":{"injectables/EditService.html":{}}}],["can't",{"_index":933,"title":{},"body":{"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{}}}],["can\\'t",{"_index":941,"title":{},"body":{"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{}}}],["canactivate",{"_index":98,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":106,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capabilities",{"_index":1503,"title":{},"body":{"index.html":{}}}],["case",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{},"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{}}}],["case(2",{"_index":1174,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["case(3",{"_index":1177,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["catcherror",{"_index":116,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catcherror((err",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{}}}],["change",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"index.html":{}}}],["changepassword",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/UserService.html":{}}}],["changepassword(email",{"_index":1358,"title":{},"body":{"injectables/UserService.html":{}}}],["changepassword(email:string",{"_index":1383,"title":{},"body":{"injectables/UserService.html":{}}}],["changepassword(model",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["changepassword(model:passwordresetmodel",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["changepasswordpagecomponent",{"_index":53,"title":{"components/ChangePasswordPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["changerole",{"_index":1228,"title":{},"body":{"components/UserListComponent.html":{}}}],["characters",{"_index":294,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["check",{"_index":935,"title":{},"body":{"components/LoginPageComponent.html":{},"index.html":{}}}],["checkform",{"_index":1053,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["checkform(form",{"_index":1065,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["checking",{"_index":931,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["checkpasswords",{"_index":232,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserListComponent.html":{}}}],["child",{"_index":984,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"miscellaneous/enumerations.html":{}}}],["choice",{"_index":1499,"title":{},"body":{"index.html":{}}}],["class",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["cli",{"_index":1468,"title":{},"body":{"index.html":{}}}],["closecreatemodal",{"_index":1051,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["closedishedit",{"_index":444,"title":{},"body":{"injectables/EditService.html":{}}}],["closeeditmodal",{"_index":1052,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["closeeventedit",{"_index":445,"title":{},"body":{"injectables/EditService.html":{}}}],["closepersonedit",{"_index":446,"title":{},"body":{"injectables/EditService.html":{}}}],["code",{"_index":777,"title":{},"body":{"components/HomePageComponent.html":{},"index.html":{}}}],["col",{"_index":1312,"title":{},"body":{"components/UserListComponent.html":{}}}],["colormarking",{"_index":1035,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["combinelatest",{"_index":1100,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["command",{"_index":1500,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":307,"title":{},"body":{"components/DefaultComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{}}}],["commonmodule,routeroutlet,routerlink,asyncpipe",{"_index":323,"title":{},"body":{"components/DefaultComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"overview.html":{}}}],["components/dish",{"_index":613,"title":{},"body":{"components/FoodPageComponent.html":{}}}],["components/persons",{"_index":956,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["components/user",{"_index":958,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["confirm",{"_index":298,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["confirmed",{"_index":287,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["confirmed\":\"not",{"_index":1289,"title":{},"body":{"components/UserListComponent.html":{}}}],["confirmpassword.touched",{"_index":300,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["conntact",{"_index":938,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["console.error('authguard",{"_index":146,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.error('error",{"_index":421,"title":{},"body":{"injectables/DishService.html":{}}}],["console.error(error",{"_index":418,"title":{},"body":{"injectables/DishService.html":{}}}],["console.log(\"delll",{"_index":762,"title":{},"body":{"components/HomePageComponent.html":{}}}],["console.log(dish.price",{"_index":792,"title":{},"body":{"components/HomePageComponent.html":{}}}],["console.log(isvalid,field",{"_index":1215,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["console.log(patch",{"_index":1028,"title":{},"body":{"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["console.log(this.editingperson$,this.editingpersonbase",{"_index":1133,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["console.log(this.editinguser",{"_index":1279,"title":{},"body":{"components/UserListComponent.html":{}}}],["console.log(this.lasterror",{"_index":268,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/LoginPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["console.log(this.passwordmismatch",{"_index":1285,"title":{},"body":{"components/UserListComponent.html":{}}}],["console.log(url",{"_index":1119,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["console.log(x",{"_index":586,"title":{},"body":{"injectables/EventService.html":{}}}],["const",{"_index":407,"title":{},"body":{"injectables/DishService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":99,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"components/PeoplePageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["constructor(authservice",{"_index":100,"title":{},"body":{"guards/AuthGuard.html":{},"components/PeoplePageComponent.html":{}}}],["constructor(httpclient",{"_index":376,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":404,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"components/PeoplePageComponent.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["contains",{"_index":217,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["content",{"_index":1346,"title":{},"body":{"components/UserListComponent.html":{}}}],["control.markastouched",{"_index":276,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["coverage",{"_index":1395,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":553,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["create(model",{"_index":563,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["create(model:eventcreatemodel",{"_index":599,"title":{},"body":{"injectables/EventService.html":{}}}],["create(model:personcreatemodel):observable",{"_index":1025,"title":{},"body":{"injectables/PersonService.html":{}}}],["create(model:usercreate",{"_index":1374,"title":{},"body":{"injectables/UserService.html":{}}}],["created",{"_index":1034,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["createdish",{"_index":369,"title":{},"body":{"injectables/DishService.html":{}}}],["createdish(data",{"_index":380,"title":{},"body":{"injectables/DishService.html":{}}}],["createdish(data:dishcreate):observable",{"_index":424,"title":{},"body":{"injectables/DishService.html":{}}}],["createingredient",{"_index":850,"title":{},"body":{"injectables/IngredientService.html":{}}}],["createingredient(data",{"_index":855,"title":{},"body":{"injectables/IngredientService.html":{}}}],["createingredient(data:ingredientcreate",{"_index":871,"title":{},"body":{"injectables/IngredientService.html":{}}}],["creating",{"_index":1039,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["creatingperson",{"_index":1045,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["creatingperson:personcreatemodel",{"_index":1107,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["creatinguser",{"_index":1222,"title":{},"body":{"components/UserListComponent.html":{}}}],["creatinguser:usercreate",{"_index":1262,"title":{},"body":{"components/UserListComponent.html":{}}}],["currentmonth",{"_index":623,"title":{},"body":{"components/HomePageComponent.html":{}}}],["currentmonth+1",{"_index":797,"title":{},"body":{"components/HomePageComponent.html":{}}}],["currentmonth=this.editservice.calendarmonth",{"_index":700,"title":{},"body":{"components/HomePageComponent.html":{}}}],["currentweek",{"_index":741,"title":{},"body":{"components/HomePageComponent.html":{}}}],["currentweek.push({key:new",{"_index":747,"title":{},"body":{"components/HomePageComponent.html":{}}}],["currentyear",{"_index":624,"title":{},"body":{"components/HomePageComponent.html":{}}}],["currentyear=this.editservice.calendaryear",{"_index":701,"title":{},"body":{"components/HomePageComponent.html":{}}}],["cursor",{"_index":1330,"title":{},"body":{"components/UserListComponent.html":{}}}],["d",{"_index":707,"title":{},"body":{"components/HomePageComponent.html":{}}}],["data",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{},"pipes/EventPipe.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["data).pipe",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["date",{"_index":523,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"components/HomePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["date().getdate(),1",{"_index":688,"title":{},"body":{"components/HomePageComponent.html":{}}}],["date().getfullyear",{"_index":474,"title":{},"body":{"injectables/EditService.html":{},"injectables/PersonService.html":{}}}],["date().getmonth",{"_index":472,"title":{},"body":{"injectables/EditService.html":{}}}],["date(date.getfullyear(),date.getmonth(),date.getdate(),1",{"_index":545,"title":{},"body":{"pipes/EventPipe.html":{}}}],["date(event.end",{"_index":547,"title":{},"body":{"pipes/EventPipe.html":{}}}],["date(event.start",{"_index":544,"title":{},"body":{"pipes/EventPipe.html":{}}}],["date(this.currentyear",{"_index":686,"title":{},"body":{"components/HomePageComponent.html":{}}}],["date(y.dateofbirth).getfullyear",{"_index":1022,"title":{},"body":{"injectables/PersonService.html":{}}}],["date(y.dateofbirth).toisostring().split('t')[0",{"_index":1024,"title":{},"body":{"injectables/PersonService.html":{}}}],["date(y.end).toisostring().split('t')[0",{"_index":591,"title":{},"body":{"injectables/EventService.html":{}}}],["date(y.start).toisostring().split('t')[0",{"_index":589,"title":{},"body":{"injectables/EventService.html":{}}}],["date(year",{"_index":729,"title":{},"body":{"components/HomePageComponent.html":{}}}],["date:\"d",{"_index":809,"title":{},"body":{"components/HomePageComponent.html":{}}}],["date:\"e",{"_index":806,"title":{},"body":{"components/HomePageComponent.html":{}}}],["date:\"fulldate",{"_index":825,"title":{},"body":{"components/HomePageComponent.html":{}}}],["dateofbirth",{"_index":966,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["dateofbirth.touched",{"_index":1186,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["datepipe",{"_index":621,"title":{},"body":{"components/HomePageComponent.html":{}}}],["datepipe,personpipe,eventpipe",{"_index":695,"title":{},"body":{"components/HomePageComponent.html":{}}}],["day",{"_index":670,"title":{},"body":{"components/HomePageComponent.html":{}}}],["day.key",{"_index":808,"title":{},"body":{"components/HomePageComponent.html":{}}}],["day.value!.length",{"_index":812,"title":{},"body":{"components/HomePageComponent.html":{}}}],["day.value?.slice(0,3",{"_index":814,"title":{},"body":{"components/HomePageComponent.html":{}}}],["daybefore",{"_index":781,"title":{},"body":{"components/HomePageComponent.html":{}}}],["daybefore.value!.includes(event",{"_index":786,"title":{},"body":{"components/HomePageComponent.html":{}}}],["daybefore.value!.slice(0,3).includes(event",{"_index":787,"title":{},"body":{"components/HomePageComponent.html":{}}}],["daybefore:any",{"_index":779,"title":{},"body":{"components/HomePageComponent.html":{}}}],["daybeforebreak",{"_index":629,"title":{},"body":{"components/HomePageComponent.html":{}}}],["daybeforebreak(week",{"_index":644,"title":{},"body":{"components/HomePageComponent.html":{}}}],["days",{"_index":743,"title":{},"body":{"components/HomePageComponent.html":{}}}],["daysinmonth",{"_index":738,"title":{},"body":{"components/HomePageComponent.html":{}}}],["default",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"miscellaneous/variables.html":{}}}],["default'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["default.component.html",{"_index":309,"title":{},"body":{"components/DefaultComponent.html":{}}}],["default.component.scss",{"_index":310,"title":{},"body":{"components/DefaultComponent.html":{}}}],["defaultcomponent",{"_index":57,"title":{"components/DefaultComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["defined",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["delete",{"_index":554,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["delete(id",{"_index":565,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["delete(id:string",{"_index":597,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["deleted",{"_index":982,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/UserDetail.html":{},"components/UserListComponent.html":{}}}],["deleted:boolean",{"_index":1192,"title":{},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["dependencies",{"_index":1441,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":90,"title":{},"body":{"guards/AuthGuard.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientDishDetail.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["description:string",{"_index":354,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["detail",{"_index":799,"title":{},"body":{"components/HomePageComponent.html":{}}}],["details",{"_index":620,"title":{},"body":{"components/HomePageComponent.html":{}}}],["dev",{"_index":1476,"title":{},"body":{"index.html":{}}}],["development",{"_index":1471,"title":{},"body":{"index.html":{}}}],["directive",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["directives",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1485,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1490,"title":{},"body":{"index.html":{}}}],["dish",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["dish.interface",{"_index":515,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{}}}],["dishaddingredientmodel",{"_index":343,"title":{"interfaces/DishAddIngredientModel.html":{}},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"interfaces/IngredientDishDetail.html":{},"coverage.html":{}}}],["dishcreate",{"_index":353,"title":{"interfaces/DishCreate.html":{}},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"interfaces/IngredientDishDetail.html":{},"coverage.html":{}}}],["dishdetail",{"_index":349,"title":{"interfaces/DishDetail.html":{}},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/IngredientDishDetail.html":{},"coverage.html":{}}}],["dishes",{"_index":338,"title":{},"body":{"components/DefaultComponent.html":{},"injectables/DishService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{}}}],["dishid",{"_index":347,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishIngredientModel.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{}}}],["dishid:string",{"_index":360,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["dishingredientmodel",{"_index":362,"title":{"interfaces/DishIngredientModel.html":{}},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"interfaces/IngredientDishDetail.html":{},"coverage.html":{}}}],["dishlistcomponent",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["dishservice",{"_index":366,"title":{"injectables/DishService.html":{}},"body":{"injectables/DishService.html":{},"coverage.html":{}}}],["displayed",{"_index":954,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["displays",{"_index":610,"title":{},"body":{"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{}}}],["dist",{"_index":1489,"title":{},"body":{"index.html":{}}}],["dn",{"_index":1160,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["documentation",{"_index":1396,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["dropdownvisible",{"_index":311,"title":{},"body":{"components/DefaultComponent.html":{}}}],["dt",{"_index":678,"title":{},"body":{"components/HomePageComponent.html":{}}}],["dynamic",{"_index":1448,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{}}}],["e2e",{"_index":1497,"title":{},"body":{"index.html":{}}}],["ease",{"_index":1317,"title":{},"body":{"components/UserListComponent.html":{}}}],["editdishid",{"_index":437,"title":{},"body":{"injectables/EditService.html":{}}}],["editeventid",{"_index":438,"title":{},"body":{"injectables/EditService.html":{}}}],["editing",{"_index":1161,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["editing_inputs",{"_index":1341,"title":{},"body":{"components/UserListComponent.html":{}}}],["editingperson",{"_index":1046,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["editingperson$:persondetailmodel",{"_index":1108,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["editingpersonbase",{"_index":1047,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["editingpersonbase:persondetailmodel",{"_index":1109,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["editingpersonpage",{"_index":1048,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["editinguser",{"_index":1223,"title":{},"body":{"components/UserListComponent.html":{}}}],["editinguser:userdetail",{"_index":1263,"title":{},"body":{"components/UserListComponent.html":{}}}],["editinguserbase",{"_index":1224,"title":{},"body":{"components/UserListComponent.html":{}}}],["editinguserbase:userdetail",{"_index":1264,"title":{},"body":{"components/UserListComponent.html":{}}}],["editpersonid",{"_index":439,"title":{},"body":{"injectables/EditService.html":{}}}],["editservice",{"_index":433,"title":{"injectables/EditService.html":{}},"body":{"injectables/EditService.html":{},"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["editservice=inject(editservice",{"_index":1102,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["element",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["email",{"_index":215,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["email.touched",{"_index":1297,"title":{},"body":{"components/UserListComponent.html":{}}}],["email:string",{"_index":873,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["emailconfirmed",{"_index":1199,"title":{},"body":{"interfaces/UserDetail.html":{}}}],["emailconfirmed:boolean",{"_index":1193,"title":{},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["emailoffather",{"_index":967,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["emailofmother",{"_index":968,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["emailtoken",{"_index":218,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["emitted",{"_index":131,"title":{},"body":{"guards/AuthGuard.html":{}}}],["end",{"_index":511,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"components/PersonsListComponent.html":{},"index.html":{}}}],["enddate",{"_index":546,"title":{},"body":{"pipes/EventPipe.html":{}}}],["ends",{"_index":834,"title":{},"body":{"components/HomePageComponent.html":{}}}],["enum",{"_index":983,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["enumerations",{"_index":1460,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":147,"title":{},"body":{"guards/AuthGuard.html":{}}}],["error",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DishService.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{}}}],["error.error",{"_index":912,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["error:(err",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{}}}],["error:(error",{"_index":266,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["error:x",{"_index":1144,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["event",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["event.id",{"_index":815,"title":{},"body":{"components/HomePageComponent.html":{}}}],["event.name",{"_index":548,"title":{},"body":{"pipes/EventPipe.html":{},"components/HomePageComponent.html":{}}}],["eventcolor",{"_index":820,"title":{},"body":{"components/HomePageComponent.html":{}}}],["eventcreatemodel",{"_index":509,"title":{"interfaces/EventCreateModel.html":{}},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"injectables/EventService.html":{},"coverage.html":{}}}],["eventdetailmodel",{"_index":525,"title":{"interfaces/EventDetailModel.html":{}},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"coverage.html":{}}}],["eventend",{"_index":818,"title":{},"body":{"components/HomePageComponent.html":{}}}],["eventid",{"_index":465,"title":{},"body":{"injectables/EditService.html":{},"components/HomePageComponent.html":{}}}],["eventlistcomponent",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["eventondate",{"_index":630,"title":{},"body":{"components/HomePageComponent.html":{}}}],["eventondate(date",{"_index":648,"title":{},"body":{"components/HomePageComponent.html":{}}}],["eventpipe",{"_index":531,"title":{"pipes/EventPipe.html":{}},"body":{"pipes/EventPipe.html":{},"components/HomePageComponent.html":{},"coverage.html":{}}}],["events",{"_index":339,"title":{},"body":{"components/DefaultComponent.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{}}}],["events.filter(x=>x.rowingrid",{"_index":766,"title":{},"body":{"components/HomePageComponent.html":{}}}],["events.foreach(x",{"_index":753,"title":{},"body":{"components/HomePageComponent.html":{}}}],["events:eventdetailmodel",{"_index":696,"title":{},"body":{"components/HomePageComponent.html":{}}}],["events].map(x",{"_index":757,"title":{},"body":{"components/HomePageComponent.html":{}}}],["eventservice",{"_index":549,"title":{"injectables/EventService.html":{}},"body":{"injectables/EventService.html":{},"components/HomePageComponent.html":{},"coverage.html":{}}}],["eventstart",{"_index":816,"title":{},"body":{"components/HomePageComponent.html":{}}}],["event|event:\"enddate",{"_index":819,"title":{},"body":{"components/HomePageComponent.html":{}}}],["event|event:\"startdate",{"_index":817,"title":{},"body":{"components/HomePageComponent.html":{}}}],["execute",{"_index":1494,"title":{},"body":{"index.html":{}}}],["export",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["extends",{"_index":875,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{}}}],["false",{"_index":242,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/EditService.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["father's",{"_index":1178,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["father\\'s",{"_index":1188,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["fathers",{"_index":1164,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["fb",{"_index":883,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["female",{"_index":1171,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["field",{"_index":1074,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["files",{"_index":1482,"title":{},"body":{"index.html":{}}}],["fill",{"_index":742,"title":{},"body":{"components/HomePageComponent.html":{}}}],["filterevents",{"_index":631,"title":{},"body":{"components/HomePageComponent.html":{}}}],["filterevents(events",{"_index":650,"title":{},"body":{"components/HomePageComponent.html":{}}}],["filterevents(events:(eventdetailmodel",{"_index":765,"title":{},"body":{"components/HomePageComponent.html":{}}}],["find",{"_index":934,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["first",{"_index":130,"title":{},"body":{"guards/AuthGuard.html":{},"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"index.html":{}}}],["firstdayofmonth",{"_index":728,"title":{},"body":{"components/HomePageComponent.html":{}}}],["firstdayofmonth.getday",{"_index":733,"title":{},"body":{"components/HomePageComponent.html":{}}}],["firstempty",{"_index":758,"title":{},"body":{"components/HomePageComponent.html":{}}}],["firstname",{"_index":969,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["firstname.touched",{"_index":1179,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["firstname.touched){is",{"_index":1167,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["flex",{"_index":1311,"title":{},"body":{"components/UserListComponent.html":{}}}],["flowbite",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"dependencies.html":{}}}],["food",{"_index":612,"title":{},"body":{"components/FoodPageComponent.html":{}}}],["foodpagecomponent",{"_index":64,"title":{"components/FoodPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["for(day",{"_index":807,"title":{},"body":{"components/HomePageComponent.html":{}}}],["for(event",{"_index":813,"title":{},"body":{"components/HomePageComponent.html":{}}}],["for(person",{"_index":1293,"title":{},"body":{"components/UserListComponent.html":{}}}],["for(role",{"_index":1298,"title":{},"body":{"components/UserListComponent.html":{}}}],["for(week",{"_index":802,"title":{},"body":{"components/HomePageComponent.html":{}}}],["form",{"_index":241,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["form.invalid",{"_index":1128,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["form.invalid||this.passwordmismatch",{"_index":274,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["format",{"_index":520,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["formbuilder",{"_index":905,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["formcontrol",{"_index":898,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["formsmodule",{"_index":224,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["found",{"_index":943,"title":{},"body":{"components/NotFoundPageComponent.html":{},"coverage.html":{}}}],["found'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["full",{"_index":1176,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["fullname",{"_index":993,"title":{},"body":{"pipes/PersonPipe.html":{}}}],["fullnameoffather",{"_index":970,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["fullnameofmother",{"_index":971,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["function",{"_index":577,"title":{},"body":{"injectables/EventService.html":{}}}],["further",{"_index":1504,"title":{},"body":{"index.html":{}}}],["gender",{"_index":972,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["gender.touched",{"_index":1184,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["gender:true,status:'other",{"_index":1085,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["generate",{"_index":402,"title":{},"body":{"injectables/DishService.html":{},"components/HomePageComponent.html":{},"index.html":{}}}],["generatecalendar",{"_index":632,"title":{},"body":{"components/HomePageComponent.html":{}}}],["generated",{"_index":1466,"title":{},"body":{"index.html":{}}}],["generatepatch",{"_index":370,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["generatepatch(model",{"_index":1003,"title":{},"body":{"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["generatepatch(updated",{"_index":382,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{}}}],["get(`${this.baseurl",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcalendargrid",{"_index":633,"title":{},"body":{"components/HomePageComponent.html":{}}}],["getcalendargrid(year",{"_index":653,"title":{},"body":{"components/HomePageComponent.html":{}}}],["geteventprice",{"_index":634,"title":{},"body":{"components/HomePageComponent.html":{}}}],["geteventprice(perperson",{"_index":657,"title":{},"body":{"components/HomePageComponent.html":{}}}],["geteventprice(perperson:boolean",{"_index":788,"title":{},"body":{"components/HomePageComponent.html":{}}}],["geteventprice(true",{"_index":842,"title":{},"body":{"components/HomePageComponent.html":{}}}],["getting",{"_index":1462,"title":{"index.html":{}},"body":{}}],["go",{"_index":290,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ValidateEmailPageComponent.html":{},"index.html":{}}}],["guard",{"_index":86,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":88,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h",{"_index":1309,"title":{},"body":{"components/UserListComponent.html":{}}}],["hash",{"_index":776,"title":{},"body":{"components/HomePageComponent.html":{}}}],["help",{"_index":1505,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":1324,"title":{},"body":{"components/UserListComponent.html":{}}}],["home",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["homepagecomponent",{"_index":66,"title":{"components/HomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["html",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["http://localhost:4200",{"_index":1478,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["httpparams",{"_index":403,"title":{},"body":{"injectables/DishService.html":{}}}],["i,1),value:undefined",{"_index":748,"title":{},"body":{"components/HomePageComponent.html":{}}}],["id",{"_index":350,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{}}}],["id:string",{"_index":356,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["identifier",{"_index":1397,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":1220,"title":{},"body":{"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["if(!editinguser.emailconfirmed",{"_index":1295,"title":{},"body":{"components/UserListComponent.html":{}}}],["if(!resetingpassword",{"_index":917,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["if((this.editingpersonbase",{"_index":1136,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(acountcreation",{"_index":286,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["if(authservice.userinfomodel$|async",{"_index":918,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["if(d!=undefined",{"_index":711,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(dateofbirth.invalid",{"_index":1185,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(day.value!.length",{"_index":810,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(daybeforebreak(week,week.indexof(day),event",{"_index":822,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(editinguser.deleted",{"_index":1301,"title":{},"body":{"components/UserListComponent.html":{}}}],["if(email.invalid",{"_index":1296,"title":{},"body":{"components/UserListComponent.html":{}}}],["if(firstempty==undefined",{"_index":760,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(firstname.invalid",{"_index":1166,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(gender.invalid",{"_index":1183,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(index",{"_index":780,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(lasterror$?.errors.password",{"_index":926,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["if(lasterror$?.errors[\"email",{"_index":921,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["if(lastname.invalid",{"_index":1181,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(myfilter",{"_index":593,"title":{},"body":{"injectables/EventService.html":{}}}],["if(params.get(\"email\")&&params.get(\"token",{"_index":263,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["if(password.invalid",{"_index":291,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["if(passwordmismatch",{"_index":299,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["if(search",{"_index":1152,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(searchusers",{"_index":1286,"title":{},"body":{"components/UserListComponent.html":{}}}],["if(sentreset",{"_index":928,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["if(this.calendar.indexof(week",{"_index":783,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(this.editinguser.role",{"_index":1280,"title":{},"body":{"components/UserListComponent.html":{}}}],["if(this.editservice.openpersoncreate",{"_index":1111,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(url",{"_index":1120,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(user",{"_index":331,"title":{},"body":{"components/DefaultComponent.html":{}}}],["if(user?.role",{"_index":962,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["if(usermail.invalid",{"_index":1218,"title":{},"body":{"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["if(username.invalid",{"_index":1216,"title":{},"body":{"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["if(viewday",{"_index":823,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(viewday.value?.length",{"_index":827,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(viewday||vieweventdetail",{"_index":798,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(vieweventdetail",{"_index":801,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(x!=\"id",{"_index":1135,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(x.rowingrid",{"_index":754,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(y.dateofbirth==undefined",{"_index":1020,"title":{},"body":{"injectables/PersonService.html":{}}}],["implements",{"_index":125,"title":{},"body":{"guards/AuthGuard.html":{},"components/ChangePasswordPageComponent.html":{},"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{},"index.html":{}}}],["import",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["imports:[asyncpipe,reactiveformsmodule,formsmodule",{"_index":1258,"title":{},"body":{"components/UserListComponent.html":{}}}],["imports:[formsmodule,reactiveformsmodule",{"_index":1207,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["imports:[reactiveformsmodule,formsmodule",{"_index":257,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["imports:[routerlink",{"_index":1393,"title":{},"body":{"components/ValidateEmailPageComponent.html":{}}}],["inbox",{"_index":932,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["index:number,event:eventdetailmodel):boolean",{"_index":778,"title":{},"body":{"components/HomePageComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["information",{"_index":988,"title":{},"body":{"pipes/PersonPipe.html":{},"components/UserInfoPageComponent.html":{}}}],["ingredient",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["ingredientcreate",{"_index":843,"title":{"interfaces/IngredientCreate.html":{}},"body":{"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"injectables/IngredientService.html":{},"coverage.html":{}}}],["ingredientdetail",{"_index":846,"title":{"interfaces/IngredientDetail.html":{}},"body":{"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"injectables/IngredientService.html":{},"coverage.html":{}}}],["ingredientdishdetail",{"_index":355,"title":{"interfaces/IngredientDishDetail.html":{}},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"interfaces/IngredientDishDetail.html":{},"coverage.html":{}}}],["ingredientid",{"_index":348,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["ingredientid:string",{"_index":357,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["ingredients",{"_index":363,"title":{},"body":{"interfaces/DishDetail.html":{},"injectables/IngredientService.html":{}}}],["ingredients:ingredientdishdetail[]|undefined",{"_index":352,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["ingredientservice",{"_index":848,"title":{"injectables/IngredientService.html":{}},"body":{"injectables/IngredientService.html":{},"coverage.html":{}}}],["initflowbite",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["inject",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["inject(activatedroute",{"_index":250,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["inject(authservice",{"_index":243,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["inject(editservice",{"_index":683,"title":{},"body":{"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["inject(eventservice",{"_index":684,"title":{},"body":{"components/HomePageComponent.html":{}}}],["inject(formbuilder",{"_index":895,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["inject(httpclient",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject(personservice",{"_index":1093,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["inject(router",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["inject(userservice",{"_index":904,"title":{},"body":{"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["injectable",{"_index":113,"title":{"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":675,"title":{},"body":{"components/HomePageComponent.html":{}}}],["inputs",{"_index":1340,"title":{},"body":{"components/UserListComponent.html":{}}}],["inputs>input,.inputs>select",{"_index":1339,"title":{},"body":{"components/UserListComponent.html":{}}}],["instruktor",{"_index":985,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"miscellaneous/enumerations.html":{}}}],["interface",{"_index":342,"title":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{},"coverage.html":{}}}],["interfaces",{"_index":344,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{},"overview.html":{}}}],["invalid",{"_index":1168,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["iso",{"_index":521,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["isstandalone",{"_index":1099,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["issue",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{}}}],["isvalid",{"_index":1072,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["json.parse(json.stringify(this.editingperson",{"_index":1088,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["json.parse(json.stringify(this.editinguser",{"_index":1268,"title":{},"body":{"components/UserListComponent.html":{}}}],["justify",{"_index":1344,"title":{},"body":{"components/UserListComponent.html":{}}}],["karma",{"_index":1496,"title":{},"body":{"index.html":{}}}],["key",{"_index":431,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["keyvalue",{"_index":645,"title":{},"body":{"components/HomePageComponent.html":{}}}],["last",{"_index":1169,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["lastdayofmonth",{"_index":730,"title":{},"body":{"components/HomePageComponent.html":{}}}],["lastdayofmonth.getdate",{"_index":739,"title":{},"body":{"components/HomePageComponent.html":{}}}],["lasterror",{"_index":229,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/LoginPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["lasterror$.errors[\"errormessage\"][0",{"_index":285,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["lasterror$:any",{"_index":258,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/LoginPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["lasterror$?.errors[\"error",{"_index":920,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["lasterror$[\"errormessage\"].errors[0][\"errormessage",{"_index":1394,"title":{},"body":{"components/ValidateEmailPageComponent.html":{}}}],["lastname",{"_index":973,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["lastname.touched",{"_index":1182,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["layout",{"_index":303,"title":{},"body":{"components/DefaultComponent.html":{}}}],["leader",{"_index":986,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"miscellaneous/enumerations.html":{}}}],["legend",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["letter",{"_index":296,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["lg",{"_index":1314,"title":{},"body":{"components/UserListComponent.html":{}}}],["links",{"_index":947,"title":{},"body":{"components/NotFoundPageComponent.html":{}}}],["list",{"_index":611,"title":{},"body":{"components/FoodPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["list.component",{"_index":615,"title":{},"body":{"components/FoodPageComponent.html":{},"components/PeoplePageComponent.html":{}}}],["list.component.html",{"_index":1041,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.scss",{"_index":1042,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts",{"_index":1032,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["list.component.ts:100",{"_index":1234,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:101",{"_index":1080,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:111",{"_index":1235,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:121",{"_index":1244,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:122",{"_index":1082,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:131",{"_index":1236,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:133",{"_index":1073,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:137",{"_index":1245,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:139",{"_index":1079,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:148",{"_index":1239,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:154",{"_index":1238,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:156",{"_index":1064,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:158",{"_index":1237,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:168",{"_index":1069,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:24",{"_index":1257,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:25",{"_index":1251,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:26",{"_index":1250,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:27",{"_index":1254,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:29",{"_index":1253,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:30",{"_index":1094,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:31",{"_index":1090,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:32",{"_index":1095,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:33",{"_index":1092,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:34",{"_index":1255,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:35",{"_index":1096,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:36",{"_index":1097,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:38",{"_index":1089,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:39",{"_index":1248,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:40",{"_index":1084,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:41",{"_index":1083,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:42",{"_index":1249,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:43",{"_index":1086,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:45",{"_index":1087,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:46",{"_index":1061,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:48",{"_index":1242,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:51",{"_index":1067,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:52",{"_index":1243,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:57",{"_index":1063,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:61",{"_index":1240,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:66",{"_index":1232,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:68",{"_index":1077,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:72",{"_index":1241,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:75",{"_index":1062,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:81",{"_index":1066,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:82",{"_index":1233,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:88",{"_index":1247,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:92",{"_index":1075,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:97",{"_index":1078,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list/dish",{"_index":614,"title":{},"body":{"components/FoodPageComponent.html":{},"coverage.html":{}}}],["list/event",{"_index":1408,"title":{},"body":{"coverage.html":{}}}],["list/persons",{"_index":957,"title":{},"body":{"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"coverage.html":{}}}],["list/user",{"_index":959,"title":{},"body":{"components/PeoplePageComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["logged",{"_index":919,"title":{},"body":{"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["loggin",{"_index":881,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["logging",{"_index":882,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["login",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["login(data",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginform",{"_index":884,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginmodel",{"_index":163,"title":{"interfaces/LoginModel.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/TokenModel.html":{},"coverage.html":{}}}],["loginpagecomponent",{"_index":68,"title":{"components/LoginPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["logout",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"components/DefaultComponent.html":{}}}],["male",{"_index":1170,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["map",{"_index":115,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["mapedevents",{"_index":756,"title":{},"body":{"components/HomePageComponent.html":{}}}],["mapedevents.sort(x=>x.rowingrid",{"_index":764,"title":{},"body":{"components/HomePageComponent.html":{}}}],["match",{"_index":301,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["matching",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["md",{"_index":1328,"title":{},"body":{"components/UserListComponent.html":{}}}],["meaning",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{}}}],["menu",{"_index":333,"title":{},"body":{"components/DefaultComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"pipes/EventPipe.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["methods",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["miscellaneous",{"_index":1459,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["modals",{"_index":1038,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["model",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["models/auth.interface",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["models/dish.interface",{"_index":401,"title":{},"body":{"injectables/DishService.html":{}}}],["models/event.interface",{"_index":541,"title":{},"body":{"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{}}}],["models/ingredient.interface",{"_index":867,"title":{},"body":{"injectables/IngredientService.html":{}}}],["models/person.interface",{"_index":491,"title":{},"body":{"injectables/EditService.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"injectables/UserService.html":{}}}],["models/user.interface",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["modifying",{"_index":1040,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["modules",{"_index":1509,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monday",{"_index":737,"title":{},"body":{"components/HomePageComponent.html":{}}}],["month",{"_index":654,"title":{},"body":{"components/HomePageComponent.html":{}}}],["more",{"_index":1506,"title":{},"body":{"index.html":{}}}],["mother's",{"_index":1175,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["mother\\'s",{"_index":1187,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["mothers",{"_index":1163,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["mx",{"_index":1343,"title":{},"body":{"components/UserListComponent.html":{}}}],["myfilter",{"_index":576,"title":{},"body":{"injectables/EventService.html":{}}}],["name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/UserCreate.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"index.html":{}}}],["name:string",{"_index":1196,"title":{},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["navbar",{"_index":305,"title":{},"body":{"components/DefaultComponent.html":{}}}],["navigate",{"_index":1477,"title":{},"body":{"index.html":{}}}],["need",{"_index":1501,"title":{},"body":{"index.html":{}}}],["needed",{"_index":123,"title":{},"body":{"guards/AuthGuard.html":{}}}],["needs",{"_index":923,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["network",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{}}}],["new",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":111,"title":{},"body":{"guards/AuthGuard.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["next:(x",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["next:x",{"_index":1147,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["nextmonth",{"_index":635,"title":{},"body":{"components/HomePageComponent.html":{}}}],["ng",{"_index":1474,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":239,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["nickname",{"_index":974,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["nickname:string",{"_index":980,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["none",{"_index":1292,"title":{},"body":{"components/UserListComponent.html":{}}}],["nonnullable",{"_index":899,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["normalizestring",{"_index":1054,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["normalizestring(ob",{"_index":1068,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["normalizestring(ob:string",{"_index":1149,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["normalizestring(person.firstname).indexof(normalizestring(search",{"_index":1153,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["normalizestring(user.username).indexof(normalizestring(searchusers",{"_index":1287,"title":{},"body":{"components/UserListComponent.html":{}}}],["notfoundpagecomponent",{"_index":70,"title":{"components/NotFoundPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["null",{"_index":284,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{},"components/ValidateEmailPageComponent.html":{}}}],["number",{"_index":297,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishDetail.html":{},"injectables/EditService.html":{},"interfaces/EventDetailModel.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["ob",{"_index":1070,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["ob.normalize().touppercase().replaceall",{"_index":1150,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["object.keys(model).foreach((key",{"_index":1030,"title":{},"body":{"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["object.keys(this.editingpersonbase).foreach",{"_index":1134,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["object.keys(updated).foreach((key",{"_index":427,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{}}}],["object.values(form.controls).foreach(control",{"_index":275,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["observable",{"_index":112,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{}}}],["of(false",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{}}}],["of(true",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{}}}],["onblur",{"_index":1055,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["onblur(field",{"_index":1071,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["one",{"_index":879,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["ones",{"_index":1037,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["oninit",{"_index":222,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["onsubmit",{"_index":889,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["op",{"_index":429,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["open",{"_index":332,"title":{},"body":{"components/DefaultComponent.html":{}}}],["opencreatemodal",{"_index":1056,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["opendishcreate",{"_index":440,"title":{},"body":{"injectables/EditService.html":{}}}],["opendishcreatemodal",{"_index":447,"title":{},"body":{"injectables/EditService.html":{}}}],["opendishcreatemodal(url",{"_index":457,"title":{},"body":{"injectables/EditService.html":{}}}],["opendishcreatemodal(url:string",{"_index":505,"title":{},"body":{"injectables/EditService.html":{}}}],["opendisheditmodal",{"_index":448,"title":{},"body":{"injectables/EditService.html":{}}}],["opendisheditmodal(dishid",{"_index":459,"title":{},"body":{"injectables/EditService.html":{}}}],["openeditmodal",{"_index":1057,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["openeditmodal(id",{"_index":1076,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["openeditmodal(id:string",{"_index":1122,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["openeventcreate",{"_index":441,"title":{},"body":{"injectables/EditService.html":{},"components/HomePageComponent.html":{}}}],["openeventcreatemodal",{"_index":449,"title":{},"body":{"injectables/EditService.html":{}}}],["openeventcreatemodal(url",{"_index":461,"title":{},"body":{"injectables/EditService.html":{}}}],["openeventcreatemodal(url:string",{"_index":507,"title":{},"body":{"injectables/EditService.html":{}}}],["openeventedit",{"_index":636,"title":{},"body":{"components/HomePageComponent.html":{}}}],["openeventedit(id",{"_index":663,"title":{},"body":{"components/HomePageComponent.html":{}}}],["openeventedit(id:string",{"_index":774,"title":{},"body":{"components/HomePageComponent.html":{}}}],["openeventeditmodal",{"_index":450,"title":{},"body":{"injectables/EditService.html":{}}}],["openeventeditmodal(eventid",{"_index":463,"title":{},"body":{"injectables/EditService.html":{}}}],["openpersoncreate",{"_index":442,"title":{},"body":{"injectables/EditService.html":{}}}],["openpersoncreatemodal",{"_index":451,"title":{},"body":{"injectables/EditService.html":{}}}],["openpersoncreatemodal(url",{"_index":466,"title":{},"body":{"injectables/EditService.html":{}}}],["openpersoncreatemodal(url:string",{"_index":503,"title":{},"body":{"injectables/EditService.html":{}}}],["openpersonedit",{"_index":1204,"title":{},"body":{"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["openpersoneditmodal",{"_index":452,"title":{},"body":{"injectables/EditService.html":{}}}],["openpersoneditmodal(personid",{"_index":468,"title":{},"body":{"injectables/EditService.html":{}}}],["optional",{"_index":105,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["out",{"_index":337,"title":{},"body":{"components/DefaultComponent.html":{},"components/UserListComponent.html":{},"index.html":{}}}],["overflow",{"_index":1323,"title":{},"body":{"components/UserListComponent.html":{}}}],["overview",{"_index":1507,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":1304,"title":{},"body":{"components/UserListComponent.html":{}}}],["package",{"_index":1440,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["page.component.html",{"_index":227,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["page.component.scss",{"_index":226,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["page.component.ts",{"_index":212,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:114",{"_index":660,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:125",{"_index":667,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:136",{"_index":677,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:141",{"_index":649,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:17",{"_index":1392,"title":{},"body":{"components/ValidateEmailPageComponent.html":{}}}],["page.component.ts:172",{"_index":651,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:176",{"_index":669,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:18",{"_index":1391,"title":{},"body":{"components/ValidateEmailPageComponent.html":{}}}],["page.component.ts:181",{"_index":672,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:186",{"_index":662,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:19",{"_index":1390,"title":{},"body":{"components/ValidateEmailPageComponent.html":{}}}],["page.component.ts:191",{"_index":664,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:196",{"_index":674,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:20",{"_index":245,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:209",{"_index":646,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:21",{"_index":244,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:219",{"_index":658,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:22",{"_index":251,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:228",{"_index":666,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:23",{"_index":252,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:24",{"_index":685,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["page.component.ts:25",{"_index":246,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:26",{"_index":247,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:27",{"_index":249,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{}}}],["page.component.ts:28",{"_index":690,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:29",{"_index":234,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/LoginPageComponent.html":{}}}],["page.component.ts:30",{"_index":679,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:31",{"_index":896,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:32",{"_index":681,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:33",{"_index":237,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{}}}],["page.component.ts:34",{"_index":903,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:35",{"_index":689,"title":{},"body":{"components/HomePageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:36",{"_index":900,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:37",{"_index":661,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:40",{"_index":1206,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["page.component.ts:41",{"_index":902,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:45",{"_index":892,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:50",{"_index":652,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:51",{"_index":1205,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["page.component.ts:54",{"_index":240,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["page.component.ts:59",{"_index":894,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:62",{"_index":643,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:63",{"_index":893,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:66",{"_index":235,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["page.component.ts:74",{"_index":655,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:79",{"_index":236,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["page/change",{"_index":211,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"coverage.html":{}}}],["page/food",{"_index":609,"title":{},"body":{"components/FoodPageComponent.html":{},"coverage.html":{}}}],["page/home",{"_index":617,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["page/login",{"_index":878,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["page/not",{"_index":944,"title":{},"body":{"components/NotFoundPageComponent.html":{},"coverage.html":{}}}],["page/people",{"_index":951,"title":{},"body":{"components/PeoplePageComponent.html":{},"coverage.html":{}}}],["page/user",{"_index":1202,"title":{},"body":{"components/UserInfoPageComponent.html":{},"coverage.html":{}}}],["page/validate",{"_index":1386,"title":{},"body":{"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["pages",{"_index":92,"title":{},"body":{"guards/AuthGuard.html":{},"components/DefaultComponent.html":{},"components/LoginPageComponent.html":{}}}],["parameters",{"_index":104,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["params.get(\"email",{"_index":272,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["params.get(\"passwordtoken",{"_index":270,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["parses",{"_index":534,"title":{},"body":{"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{}}}],["partial",{"_index":383,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["participants",{"_index":527,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"components/HomePageComponent.html":{}}}],["password",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["password.touched",{"_index":292,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["password2",{"_index":1225,"title":{},"body":{"components/UserListComponent.html":{}}}],["password:string",{"_index":876,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["passwordcheck",{"_index":230,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["passwordmismatch",{"_index":231,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserListComponent.html":{}}}],["passwordresetmodel",{"_index":159,"title":{"interfaces/PasswordResetModel.html":{}},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/TokenModel.html":{},"coverage.html":{}}}],["passwordtoken",{"_index":220,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["patch",{"_index":388,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["patch(id",{"_index":568,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["patch(id:string,model:partial",{"_index":601,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["patch.push",{"_index":428,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["patch:partial",{"_index":1132,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["patchdish",{"_index":371,"title":{},"body":{"injectables/DishService.html":{}}}],["patchdish(id",{"_index":387,"title":{},"body":{"injectables/DishService.html":{}}}],["patchdish(id:string|undefined,patch:partial",{"_index":406,"title":{},"body":{"injectables/DishService.html":{}}}],["patchingredient",{"_index":851,"title":{},"body":{"injectables/IngredientService.html":{}}}],["patchingredient(id",{"_index":858,"title":{},"body":{"injectables/IngredientService.html":{}}}],["patchingredient(id:string|undefined,patch:partial",{"_index":869,"title":{},"body":{"injectables/IngredientService.html":{}}}],["patchingredientdish",{"_index":372,"title":{},"body":{"injectables/DishService.html":{}}}],["patchingredientdish(id",{"_index":390,"title":{},"body":{"injectables/DishService.html":{}}}],["patchingredientdish(id:string,patch:partial",{"_index":419,"title":{},"body":{"injectables/DishService.html":{}}}],["path",{"_index":122,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["people",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["peoplepagecomponent",{"_index":72,"title":{"components/PeoplePageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["per",{"_index":841,"title":{},"body":{"components/HomePageComponent.html":{}}}],["perperson",{"_index":659,"title":{},"body":{"components/HomePageComponent.html":{}}}],["person",{"_index":836,"title":{},"body":{"components/HomePageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"components/PersonsListComponent.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{}}}],["person.active",{"_index":1155,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["person.age",{"_index":1159,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["person.firstname",{"_index":994,"title":{},"body":{"pipes/PersonPipe.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["person.interface",{"_index":518,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["person.lastname",{"_index":996,"title":{},"body":{"pipes/PersonPipe.html":{},"components/PersonsListComponent.html":{}}}],["person.nickname",{"_index":1154,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["person.nickname!=null?person.nickname",{"_index":995,"title":{},"body":{"pipes/PersonPipe.html":{}}}],["person.status",{"_index":1157,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["person:\"fullname",{"_index":839,"title":{},"body":{"components/HomePageComponent.html":{}}}],["personal",{"_index":1162,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["personcreatemodel",{"_index":490,"title":{"interfaces/PersonCreateModel.html":{}},"body":{"injectables/EditService.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["persondetail",{"_index":637,"title":{},"body":{"components/HomePageComponent.html":{}}}],["persondetail(id",{"_index":665,"title":{},"body":{"components/HomePageComponent.html":{}}}],["persondetail(id:string",{"_index":794,"title":{},"body":{"components/HomePageComponent.html":{}}}],["persondetailmodel",{"_index":516,"title":{"interfaces/PersonDetailModel.html":{}},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{},"coverage.html":{}}}],["persondetailmodel|smallpersondetailmodel",{"_index":991,"title":{},"body":{"pipes/PersonPipe.html":{}}}],["personid",{"_index":470,"title":{},"body":{"injectables/EditService.html":{},"injectables/EventService.html":{},"interfaces/UserCreate.html":{}}}],["personid:string",{"_index":1197,"title":{},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["personpipe",{"_index":622,"title":{"pipes/PersonPipe.html":{}},"body":{"components/HomePageComponent.html":{},"pipes/PersonPipe.html":{},"coverage.html":{}}}],["persons",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["personservice",{"_index":997,"title":{"injectables/PersonService.html":{}},"body":{"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["personservice=inject(personservice",{"_index":1101,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["personslistcomponent",{"_index":74,"title":{"components/PersonsListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["personstatus",{"_index":979,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"miscellaneous/enumerations.html":{}}}],["phone",{"_index":1173,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["phonenumber",{"_index":975,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["phonenumberoffather",{"_index":976,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["phonenumberofmother",{"_index":977,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["pipe",{"_index":530,"title":{"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{}},"body":{"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{},"coverage.html":{}}}],["pipes",{"_index":532,"title":{},"body":{"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{},"overview.html":{}}}],["pipes/event.pipe",{"_index":693,"title":{},"body":{"components/HomePageComponent.html":{}}}],["pipes/person.pipe",{"_index":692,"title":{},"body":{"components/HomePageComponent.html":{}}}],["pipetransform",{"_index":540,"title":{},"body":{"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{}}}],["pl",{"_index":1326,"title":{},"body":{"components/UserListComponent.html":{}}}],["place",{"_index":512,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"components/HomePageComponent.html":{}}}],["placeholders",{"_index":745,"title":{},"body":{"components/HomePageComponent.html":{}}}],["platform",{"_index":1498,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":1331,"title":{},"body":{"components/UserListComponent.html":{}}}],["popreturnurl",{"_index":453,"title":{},"body":{"injectables/EditService.html":{}}}],["post(`${this.baseurl}/logout",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["postcss",{"_index":1452,"title":{},"body":{"dependencies.html":{}}}],["pr",{"_index":1327,"title":{},"body":{"components/UserListComponent.html":{}}}],["previous",{"_index":746,"title":{},"body":{"components/HomePageComponent.html":{}}}],["previusmonth",{"_index":638,"title":{},"body":{"components/HomePageComponent.html":{}}}],["price",{"_index":364,"title":{},"body":{"interfaces/DishDetail.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientDishDetail.html":{}}}],["price:number",{"_index":351,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["priceforunit",{"_index":845,"title":{},"body":{"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{}}}],["priceforunit:number",{"_index":359,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["priceofdishes",{"_index":789,"title":{},"body":{"components/HomePageComponent.html":{}}}],["priceofdishes+=dish.price",{"_index":791,"title":{},"body":{"components/HomePageComponent.html":{}}}],["private",{"_index":126,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["project",{"_index":1465,"title":{},"body":{"index.html":{}}}],["properties",{"_index":23,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"properties.html":{}}}],["protected",{"_index":312,"title":{},"body":{"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/PeoplePageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["protects",{"_index":91,"title":{},"body":{"guards/AuthGuard.html":{}}}],["provided",{"_index":1389,"title":{},"body":{"components/ValidateEmailPageComponent.html":{}}}],["providedin",{"_index":124,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["providerouter(routes),providehttpclient",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["putdaytoview",{"_index":639,"title":{},"body":{"components/HomePageComponent.html":{}}}],["putdaytoview(day",{"_index":668,"title":{},"body":{"components/HomePageComponent.html":{}}}],["putdaytoview(day:keyvalue",{"_index":767,"title":{},"body":{"components/HomePageComponent.html":{}}}],["puteventtoview",{"_index":640,"title":{},"body":{"components/HomePageComponent.html":{}}}],["puteventtoview(eventid",{"_index":671,"title":{},"body":{"components/HomePageComponent.html":{}}}],["puteventtoview(eventid:string",{"_index":770,"title":{},"body":{"components/HomePageComponent.html":{}}}],["puts",{"_index":952,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["přihlásit",{"_index":340,"title":{},"body":{"components/DefaultComponent.html":{}}}],["query",{"_index":1370,"title":{},"body":{"injectables/UserService.html":{}}}],["reactiveformsmodule",{"_index":223,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["readonly",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["redirect",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{}}}],["redirected",{"_index":948,"title":{},"body":{"components/NotFoundPageComponent.html":{}}}],["redirects",{"_index":97,"title":{},"body":{"guards/AuthGuard.html":{}}}],["reference",{"_index":1508,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":313,"title":{},"body":{"components/DefaultComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["refreshpersons",{"_index":1229,"title":{},"body":{"components/UserListComponent.html":{}}}],["reload",{"_index":1481,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1058,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["removedish",{"_index":373,"title":{},"body":{"injectables/DishService.html":{}}}],["removedish(id",{"_index":392,"title":{},"body":{"injectables/DishService.html":{}}}],["removedishfromevent",{"_index":555,"title":{},"body":{"injectables/EventService.html":{}}}],["removedishfromevent(id",{"_index":570,"title":{},"body":{"injectables/EventService.html":{}}}],["removeingredient",{"_index":852,"title":{},"body":{"injectables/IngredientService.html":{}}}],["removeingredient(id",{"_index":860,"title":{},"body":{"injectables/IngredientService.html":{}}}],["removeingredientfromdish",{"_index":374,"title":{},"body":{"injectables/DishService.html":{}}}],["removeingredientfromdish(model",{"_index":394,"title":{},"body":{"injectables/DishService.html":{}}}],["removeingredientfromdish(model:dishingredientmodel",{"_index":422,"title":{},"body":{"injectables/DishService.html":{}}}],["removepersonfromevent",{"_index":556,"title":{},"body":{"injectables/EventService.html":{}}}],["removepersonfromevent(id",{"_index":572,"title":{},"body":{"injectables/EventService.html":{}}}],["removerole",{"_index":1350,"title":{},"body":{"injectables/UserService.html":{}}}],["removerole(id",{"_index":1361,"title":{},"body":{"injectables/UserService.html":{}}}],["removerole(id:string",{"_index":1381,"title":{},"body":{"injectables/UserService.html":{}}}],["replace",{"_index":430,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["replaysubject",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{}}}],["replaysubject(1",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["request",{"_index":1015,"title":{},"body":{"injectables/PersonService.html":{}}}],["request.subscribe",{"_index":1018,"title":{},"body":{"injectables/PersonService.html":{}}}],["required",{"_index":922,"title":{},"body":{"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["res",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":927,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["resetemail",{"_index":901,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["resetform",{"_index":885,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["resetingpassword",{"_index":886,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["resetpassword",{"_index":890,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["resetpassword():void",{"_index":914,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["response",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{}}}],["responsible",{"_index":837,"title":{},"body":{"components/HomePageComponent.html":{}}}],["responsibleperson",{"_index":526,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{}}}],["responsiblepersonid",{"_index":513,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{}}}],["results",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":127,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["returnurl",{"_index":443,"title":{},"body":{"injectables/EditService.html":{}}}],["returnurl:any",{"_index":494,"title":{},"body":{"injectables/EditService.html":{}}}],["rgba(95",{"_index":1335,"title":{},"body":{"components/UserListComponent.html":{}}}],["role",{"_index":1200,"title":{},"body":{"interfaces/UserDetail.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["role:string",{"_index":1194,"title":{},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["role==\"\"?'none':role",{"_index":1300,"title":{},"body":{"components/UserListComponent.html":{}}}],["role==\"\"?\\'none\\':role",{"_index":1347,"title":{},"body":{"components/UserListComponent.html":{}}}],["roles",{"_index":1226,"title":{},"body":{"components/UserListComponent.html":{}}}],["roles;track",{"_index":1299,"title":{},"body":{"components/UserListComponent.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["rounded",{"_index":1313,"title":{},"body":{"components/UserListComponent.html":{}}}],["route",{"_index":216,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["route=inject(activatedroute",{"_index":259,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["router",{"_index":102,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["router=inject(router",{"_index":260,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["routerlink",{"_index":254,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["routeroutlet",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{}}}],["routerstatesnapshot",{"_index":109,"title":{},"body":{"guards/AuthGuard.html":{}}}],["rowingrid",{"_index":529,"title":{},"body":{"interfaces/EventDetailModel.html":{}}}],["rowingrid?:number|null",{"_index":528,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{}}}],["rowsfull.push(firstempty",{"_index":763,"title":{},"body":{"components/HomePageComponent.html":{}}}],["rowsfull.push(x.rowingrid",{"_index":755,"title":{},"body":{"components/HomePageComponent.html":{}}}],["rowsfull=[1",{"_index":752,"title":{},"body":{"components/HomePageComponent.html":{}}}],["run",{"_index":1473,"title":{},"body":{"index.html":{}}}],["running",{"_index":1491,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":114,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":119,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["saturday",{"_index":736,"title":{},"body":{"components/HomePageComponent.html":{}}}],["scaffolding",{"_index":1483,"title":{},"body":{"index.html":{}}}],["se",{"_index":341,"title":{},"body":{"components/DefaultComponent.html":{}}}],["search",{"_index":1049,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["search:string",{"_index":1103,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["searchingredients",{"_index":1050,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["searchingredients:string",{"_index":1104,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["searchusers",{"_index":1227,"title":{},"body":{"components/UserListComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["sent",{"_index":929,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["sentreset",{"_index":887,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["sentreset=false",{"_index":908,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["serve",{"_index":1475,"title":{},"body":{"index.html":{}}}],["server",{"_index":1472,"title":{},"body":{"index.html":{}}}],["services/auth.service",{"_index":120,"title":{},"body":{"guards/AuthGuard.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/LoginPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["services/edit.service",{"_index":694,"title":{},"body":{"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["services/event.service",{"_index":691,"title":{},"body":{"components/HomePageComponent.html":{}}}],["services/person.service",{"_index":1098,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["services/user.service",{"_index":907,"title":{},"body":{"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["seting",{"_index":289,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["shadow",{"_index":1306,"title":{},"body":{"components/UserListComponent.html":{}}}],["shows",{"_index":1033,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["sign",{"_index":336,"title":{},"body":{"components/DefaultComponent.html":{}}}],["skarabeus",{"_index":330,"title":{},"body":{"components/DefaultComponent.html":{}}}],["skarabeus_ui",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["skarabeusui",{"_index":1464,"title":{},"body":{"index.html":{}}}],["smallpersondetailmodel",{"_index":517,"title":{"interfaces/SmallPersonDetailModel.html":{}},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"interfaces/SmallPersonDetailModel.html":{},"coverage.html":{}}}],["soft",{"_index":1036,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["sort",{"_index":751,"title":{},"body":{"components/HomePageComponent.html":{}}}],["sort((a",{"_index":722,"title":{},"body":{"components/HomePageComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"index.html":{}}}],["spaces",{"_index":1180,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["spelling",{"_index":936,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/.../app.config.ts",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../person.interface.ts",{"_index":1461,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1400,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/dish",{"_index":1404,"title":{},"body":{"coverage.html":{}}}],["src/app/components/event",{"_index":1407,"title":{},"body":{"coverage.html":{}}}],["src/app/components/persons",{"_index":1031,"title":{},"body":{"components/PersonsListComponent.html":{},"coverage.html":{}}}],["src/app/components/user",{"_index":1221,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":89,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts:13",{"_index":103,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:20",{"_index":110,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/layouts/default/default.component.ts",{"_index":302,"title":{},"body":{"components/DefaultComponent.html":{},"coverage.html":{}}}],["src/app/layouts/default/default.component.ts:19",{"_index":319,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.component.ts:21",{"_index":315,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.component.ts:26",{"_index":320,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.component.ts:27",{"_index":318,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.component.ts:31",{"_index":317,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.component.ts:35",{"_index":316,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/models/auth.interface.ts",{"_index":872,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/TokenModel.html":{},"coverage.html":{}}}],["src/app/models/dish.interface.ts",{"_index":345,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{},"coverage.html":{}}}],["src/app/models/event.interface.ts",{"_index":510,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"coverage.html":{}}}],["src/app/models/ingredient.interface.ts",{"_index":844,"title":{},"body":{"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"coverage.html":{}}}],["src/app/models/person.interface.ts",{"_index":964,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/user.interface.ts",{"_index":1191,"title":{},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{},"coverage.html":{}}}],["src/app/pages/change",{"_index":210,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/errors/not",{"_index":942,"title":{},"body":{"components/NotFoundPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/food",{"_index":608,"title":{},"body":{"components/FoodPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/home",{"_index":616,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["src/app/pages/login",{"_index":877,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/people",{"_index":950,"title":{},"body":{"components/PeoplePageComponent.html":{},"coverage.html":{}}}],["src/app/pages/user",{"_index":1201,"title":{},"body":{"components/UserInfoPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/validate",{"_index":1385,"title":{},"body":{"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["src/app/pipes/event.pipe.ts",{"_index":533,"title":{},"body":{"pipes/EventPipe.html":{},"coverage.html":{}}}],["src/app/pipes/event.pipe.ts:13",{"_index":538,"title":{},"body":{"pipes/EventPipe.html":{}}}],["src/app/pipes/person.pipe.ts",{"_index":987,"title":{},"body":{"pipes/PersonPipe.html":{},"coverage.html":{}}}],["src/app/pipes/person.pipe.ts:14",{"_index":990,"title":{},"body":{"pipes/PersonPipe.html":{}}}],["src/app/services/auth.service.ts",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:13",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:14",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:15",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:16",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:17",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:23",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:39",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:49",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:62",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:66",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/dish.service.ts",{"_index":367,"title":{},"body":{"injectables/DishService.html":{},"coverage.html":{}}}],["src/app/services/dish.service.ts:11",{"_index":398,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:12",{"_index":399,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:13",{"_index":377,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:20",{"_index":389,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:26",{"_index":396,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:32",{"_index":379,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:40",{"_index":391,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:49",{"_index":395,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:57",{"_index":381,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:62",{"_index":393,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:70",{"_index":384,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/edit.service.ts",{"_index":434,"title":{},"body":{"injectables/EditService.html":{},"coverage.html":{}}}],["src/app/services/edit.service.ts:10",{"_index":475,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:12",{"_index":483,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:13",{"_index":485,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:15",{"_index":480,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:16",{"_index":482,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:18",{"_index":477,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:19",{"_index":479,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:21",{"_index":489,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:23",{"_index":488,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:24",{"_index":487,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:25",{"_index":486,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:27",{"_index":469,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:32",{"_index":460,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:37",{"_index":464,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:42",{"_index":456,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:46",{"_index":454,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:50",{"_index":455,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:54",{"_index":467,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:59",{"_index":458,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:64",{"_index":462,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:69",{"_index":471,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:9",{"_index":473,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/event.service.ts",{"_index":550,"title":{},"body":{"injectables/EventService.html":{},"coverage.html":{}}}],["src/app/services/event.service.ts:10",{"_index":579,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:11",{"_index":580,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:12",{"_index":558,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:18",{"_index":575,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:34",{"_index":566,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:38",{"_index":564,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:42",{"_index":569,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:48",{"_index":562,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:53",{"_index":573,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:58",{"_index":560,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:63",{"_index":571,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:72",{"_index":567,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/ingredient.service.ts",{"_index":849,"title":{},"body":{"injectables/IngredientService.html":{},"coverage.html":{}}}],["src/app/services/ingredient.service.ts:10",{"_index":864,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/ingredient.service.ts:11",{"_index":865,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/ingredient.service.ts:12",{"_index":854,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/ingredient.service.ts:19",{"_index":859,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/ingredient.service.ts:25",{"_index":862,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/ingredient.service.ts:31",{"_index":856,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/ingredient.service.ts:36",{"_index":861,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/ingredient.service.ts:41",{"_index":857,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/person.service.ts",{"_index":998,"title":{},"body":{"injectables/PersonService.html":{},"coverage.html":{}}}],["src/app/services/person.service.ts:10",{"_index":1010,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/person.service.ts:11",{"_index":1011,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/person.service.ts:12",{"_index":1000,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/person.service.ts:19",{"_index":1007,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/person.service.ts:42",{"_index":1002,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/person.service.ts:46",{"_index":1001,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/person.service.ts:50",{"_index":1005,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/person.service.ts:57",{"_index":1004,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/user.service.ts",{"_index":1348,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:12",{"_index":1367,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:13",{"_index":1368,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:14",{"_index":1352,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:21",{"_index":1365,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:26",{"_index":1355,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:30",{"_index":1360,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:37",{"_index":1356,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:41",{"_index":1364,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:45",{"_index":1354,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:49",{"_index":1362,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:53",{"_index":1357,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:69",{"_index":1359,"title":{},"body":{"injectables/UserService.html":{}}}],["standalone",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"pipes/EventPipe.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["standalone:true",{"_index":256,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"pipes/EventPipe.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["start",{"_index":514,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{}}}],["startdate",{"_index":543,"title":{},"body":{"pipes/EventPipe.html":{}}}],["started",{"_index":1463,"title":{"index.html":{}},"body":{}}],["starts",{"_index":832,"title":{},"body":{"components/HomePageComponent.html":{}}}],["startweekday",{"_index":732,"title":{},"body":{"components/HomePageComponent.html":{}}}],["state",{"_index":108,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":1398,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":978,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["stored",{"_index":1488,"title":{},"body":{"index.html":{}}}],["string",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{}}}],["stringtocolor",{"_index":641,"title":{},"body":{"components/HomePageComponent.html":{}}}],["stringtocolor((event.start+(event.rowingrid!/4",{"_index":821,"title":{},"body":{"components/HomePageComponent.html":{}}}],["stringtocolor(input",{"_index":673,"title":{},"body":{"components/HomePageComponent.html":{}}}],["stringtodate",{"_index":642,"title":{},"body":{"components/HomePageComponent.html":{}}}],["stringtodate(dt",{"_index":676,"title":{},"body":{"components/HomePageComponent.html":{}}}],["styles",{"_index":209,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["styleurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PersonsListComponent.html":{}}}],["styleurls",{"_index":225,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["subscribe",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["subscribe((res",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["subscribe(x",{"_index":585,"title":{},"body":{"injectables/EventService.html":{},"injectables/UserService.html":{}}}],["subscribe(x=>{this.dishes.next(x",{"_index":413,"title":{},"body":{"injectables/DishService.html":{}}}],["subscribe(x=>{this.ingredients.next(x",{"_index":870,"title":{},"body":{"injectables/IngredientService.html":{}}}],["succesfuly",{"_index":288,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["sunday",{"_index":734,"title":{},"body":{"components/HomePageComponent.html":{}}}],["support",{"_index":939,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["switch",{"_index":1165,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["switch(args",{"_index":542,"title":{},"body":{"pipes/EventPipe.html":{}}}],["switch(format",{"_index":992,"title":{},"body":{"pipes/PersonPipe.html":{}}}],["switchmap",{"_index":117,"title":{},"body":{"guards/AuthGuard.html":{}}}],["switchmap(user",{"_index":132,"title":{},"body":{"guards/AuthGuard.html":{}}}],["t",{"_index":385,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["table",{"_index":1439,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1438,"title":{},"body":{"coverage.html":{}}}],["tailwindcss/postcss",{"_index":1449,"title":{},"body":{"dependencies.html":{}}}],["take",{"_index":118,"title":{},"body":{"guards/AuthGuard.html":{}}}],["take(1",{"_index":129,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tap",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["tap((response",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["test",{"_index":1493,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1502,"title":{},"body":{"index.html":{}}}],["tests",{"_index":213,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"index.html":{}}}],["text",{"_index":1321,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.acountcreation",{"_index":264,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.activecreatemodal",{"_index":1130,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.activecreatemodal=false",{"_index":1127,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.activecreatemodal=true",{"_index":1271,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.activeeditmodal",{"_index":1125,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.activeeditmodal=false",{"_index":1116,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.addeventstodays",{"_index":724,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.authservice.changepassword(this.model).subscribe",{"_index":279,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.authservice.login(data).subscribe",{"_index":910,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.authservice.logout",{"_index":327,"title":{},"body":{"components/DefaultComponent.html":{}}}],["this.authservice.userinfo",{"_index":326,"title":{},"body":{"components/DefaultComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["this.authservice.userinfomodel",{"_index":321,"title":{},"body":{"components/DefaultComponent.html":{},"components/PeoplePageComponent.html":{}}}],["this.authservice.userinfomodel$.pipe",{"_index":128,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.userinfomodel$.subscribe(x=>this.user",{"_index":1208,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["this.authservice.validateemail({email:params.get(\"email\")!,token:params.get(\"token\")!}).subscribe",{"_index":265,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["this.baseurl",{"_index":411,"title":{},"body":{"injectables/DishService.html":{},"injectables/IngredientService.html":{}}}],["this.baseurl}/${id",{"_index":409,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["this.baseurl}/adddishtoevent/${id}/${dishid",{"_index":606,"title":{},"body":{"injectables/EventService.html":{}}}],["this.baseurl}/addingredienttodish",{"_index":415,"title":{},"body":{"injectables/DishService.html":{}}}],["this.baseurl}/addpersontoevent/${id}/${personid",{"_index":603,"title":{},"body":{"injectables/EventService.html":{}}}],["this.baseurl}/removedishfromevent/${id}/${dishid",{"_index":607,"title":{},"body":{"injectables/EventService.html":{}}}],["this.baseurl}/removeingredientfromdish",{"_index":423,"title":{},"body":{"injectables/DishService.html":{}}}],["this.baseurl}/removepersonfromevent/${id}/${personid",{"_index":604,"title":{},"body":{"injectables/EventService.html":{}}}],["this.baseurl}/updateingredientdish/${id",{"_index":420,"title":{},"body":{"injectables/DishService.html":{}}}],["this.calendar.foreach(x",{"_index":706,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.calendar.map",{"_index":725,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.calendar.some(z",{"_index":717,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.calendar=this.getcalendargrid(this.editservice.calendaryear,this.editservice.calendarmonth",{"_index":713,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.calendar[this.calendar.indexof(week",{"_index":784,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.changepassword",{"_index":278,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.checkpasswords",{"_index":277,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserListComponent.html":{}}}],["this.closecreatemodal",{"_index":1148,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.closeeditmodal",{"_index":1143,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.create",{"_index":1129,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.creatingperson",{"_index":1126,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.creatinguser",{"_index":1273,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.creatinguser.name",{"_index":1269,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.creatinguser.password",{"_index":1284,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.currentmonth,new",{"_index":687,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.dishes.asobservable",{"_index":400,"title":{},"body":{"injectables/DishService.html":{}}}],["this.dropdownvisible",{"_index":325,"title":{},"body":{"components/DefaultComponent.html":{}}}],["this.editdishid.asobservable",{"_index":478,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editdishid.next(dishid",{"_index":498,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editdishid.next(null",{"_index":501,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editeventid.asobservable",{"_index":481,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editeventid.next(eventid",{"_index":499,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editeventid.next(null",{"_index":502,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editingperson",{"_index":1114,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.editingpersonbase",{"_index":1115,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.editinguser",{"_index":1275,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.editinguserbase",{"_index":1267,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.editpersonid.asobservable",{"_index":484,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editpersonid.next(null",{"_index":500,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editpersonid.next(personid",{"_index":497,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editservice.calendarmonth",{"_index":680,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.editservice.calendaryear",{"_index":682,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.editservice.closepersonedit",{"_index":1117,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.editservice.editpersonid$.subscribe(x=>{if(x!=null)this.openeditmodal(x",{"_index":1110,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.editservice.openeventcreatemodal(this.router.url",{"_index":772,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.editservice.openeventeditmodal(id,this.router.url",{"_index":775,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.editservice.openpersoncreate",{"_index":1113,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.editservice.openpersoneditmodal(id,this.router.url",{"_index":795,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.editservice.openpersoneditmodal(this.editinguser.person.id",{"_index":1265,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.editservice.openpersoneditmodal(this.user.person.id",{"_index":1209,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["this.editservice.popreturnurl",{"_index":1118,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.events",{"_index":715,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.events.asobservable",{"_index":581,"title":{},"body":{"injectables/EventService.html":{}}}],["this.events.find(x=>x.id==eventid",{"_index":771,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.events.find(y=>y.id==x.id)!.rowingrid",{"_index":761,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.events.next(x",{"_index":596,"title":{},"body":{"injectables/EventService.html":{}}}],["this.eventservice.events$.subscribe",{"_index":714,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.eventservice.updateevents",{"_index":703,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.fb.group",{"_index":897,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.generatecalendar",{"_index":704,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.generatepatch(model",{"_index":1027,"title":{},"body":{"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["this.httpclient",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.delete(`${this.baseurl}/${id",{"_index":598,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{}}}],["this.httpclient.delete(`${this.baseurl}/softdelete/${id",{"_index":1376,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.delete(url",{"_index":605,"title":{},"body":{"injectables/EventService.html":{},"injectables/IngredientService.html":{}}}],["this.httpclient.delete(url).subscribe",{"_index":426,"title":{},"body":{"injectables/DishService.html":{}}}],["this.httpclient.get(`${this.baseurl",{"_index":1017,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.httpclient.get(`${this.baseurl}/addrole`,{params:{userid:id,role:role",{"_index":1380,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get(`${this.baseurl}/changepassword/${email",{"_index":1384,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get(`${this.baseurl}/removerole`,{params:{userid:id",{"_index":1382,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get(`${this.baseurl}/undeleteuser/${id",{"_index":1378,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get(`${this.baseurl}/unfiltred",{"_index":1016,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.httpclient.get(this.baseurl",{"_index":584,"title":{},"body":{"injectables/EventService.html":{},"injectables/UserService.html":{}}}],["this.httpclient.get(url",{"_index":412,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{}}}],["this.httpclient.patch(url,patch",{"_index":1029,"title":{},"body":{"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["this.httpclient.patch(url,this.generatepatch(model",{"_index":602,"title":{},"body":{"injectables/EventService.html":{}}}],["this.httpclient.patch(url,this.generatepatch(patch",{"_index":410,"title":{},"body":{"injectables/DishService.html":{},"injectables/IngredientService.html":{}}}],["this.httpclient.post(`${this.baseurl}/changepassword`,model",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${this.baseurl}/createuser`,model",{"_index":1375,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.post(`${this.baseurl}/login",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${this.baseurl}/validateemail`,model",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${this.baseurl}`,model",{"_index":600,"title":{},"body":{"injectables/EventService.html":{}}}],["this.httpclient.post(this.baseurl,model",{"_index":1026,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.httpclient.post(url,data",{"_index":425,"title":{},"body":{"injectables/DishService.html":{},"injectables/IngredientService.html":{}}}],["this.httpclient.post(url,model).subscribe",{"_index":416,"title":{},"body":{"injectables/DishService.html":{}}}],["this.ingredients.asobservable",{"_index":866,"title":{},"body":{"injectables/IngredientService.html":{}}}],["this.lasterror",{"_index":911,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.lasterror$=err.error",{"_index":280,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.lasterror$=error.error",{"_index":267,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["this.loginform.getrawvalue",{"_index":909,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.model.email",{"_index":271,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.model.password",{"_index":282,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.model.token",{"_index":269,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.opencreatemodal",{"_index":1112,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.opendishcreate",{"_index":506,"title":{},"body":{"injectables/EditService.html":{}}}],["this.openeventcreate",{"_index":508,"title":{},"body":{"injectables/EditService.html":{}}}],["this.openpersoncreate",{"_index":504,"title":{},"body":{"injectables/EditService.html":{}}}],["this.password2",{"_index":1272,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.passwordcheck",{"_index":283,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.passwordmismatch",{"_index":281,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserListComponent.html":{}}}],["this.persons$.subscribe(x",{"_index":1123,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.persons.asobservable",{"_index":1012,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.persons.next(x.map(y",{"_index":1019,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.personservice.create(this.creatingperson",{"_index":1146,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.personservice.delete(this.editingperson$.id",{"_index":1142,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.personservice.patch(this.editingperson$.id",{"_index":1140,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.personservice.patch(this.editingperson$.id,patch",{"_index":1138,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.personservice.persons",{"_index":1091,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.personservice.updatepersons",{"_index":1131,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.putdaytoview(todaypair",{"_index":712,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.refresh",{"_index":328,"title":{},"body":{"components/DefaultComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.resetingpassword",{"_index":913,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.returnurl",{"_index":496,"title":{},"body":{"injectables/EditService.html":{}}}],["this.route.queryparammap.subscribe(params",{"_index":262,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["this.router.navigate",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate(['/events",{"_index":773,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.router.navigate(['/login",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{}}}],["this.router.navigate(['/people",{"_index":1211,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["this.router.navigate(['people",{"_index":796,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.router.navigatebyurl(url",{"_index":1121,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.router.url",{"_index":1210,"title":{},"body":{"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["this.searchusers",{"_index":1270,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.sentreset=true",{"_index":916,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.stringtodate(a.start).gettime",{"_index":723,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.stringtodate(b.start).gettime",{"_index":750,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.stringtodate(event.start).gettime",{"_index":749,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.stringtodate(y.end).gettime",{"_index":721,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.stringtodate(y.start).gettime",{"_index":720,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.today.gettime",{"_index":710,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.updatedishes",{"_index":405,"title":{},"body":{"injectables/DishService.html":{}}}],["this.updatedishes(),console.log(response",{"_index":417,"title":{},"body":{"injectables/DishService.html":{}}}],["this.updateevents",{"_index":582,"title":{},"body":{"injectables/EventService.html":{}}}],["this.updatefield(field",{"_index":1141,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["this.updateingredients",{"_index":868,"title":{},"body":{"injectables/IngredientService.html":{}}}],["this.updatepersons",{"_index":1013,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.updateusers",{"_index":1372,"title":{},"body":{"injectables/UserService.html":{}}}],["this.user",{"_index":1213,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["this.userinfo",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userinfomodel.asobservable",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userinfomodel.next(null",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userinfomodel.next(x",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.users$.subscribe",{"_index":1274,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.users.asobservable",{"_index":1369,"title":{},"body":{"injectables/UserService.html":{}}}],["this.users.next(x);console.log(x",{"_index":1373,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.addrole(this.editinguser.id,this.editinguser.role).subscribe(x=>this.refresh",{"_index":1282,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.changepassword(this.resetform.getrawvalue().resetemail",{"_index":915,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.userservice.create(this.creatinguser",{"_index":1276,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.delete(this.editinguser.id",{"_index":1277,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.patch(this.editinguser.id",{"_index":1283,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.patch(this.user.id",{"_index":1214,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["this.userservice.removerole(this.editinguser.id).subscribe(x=>this.refresh",{"_index":1281,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.undelete(this.editinguser.id",{"_index":1278,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.updateusers",{"_index":1266,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.users",{"_index":1256,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userupdatebase",{"_index":1212,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["this.viewday",{"_index":769,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.vieweventdetail",{"_index":768,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.vieweventdetail!.dishes.foreach(dish",{"_index":790,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.vieweventdetail!.participants.length",{"_index":793,"title":{},"body":{"components/HomePageComponent.html":{}}}],["time",{"_index":524,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"components/HomePageComponent.html":{}}}],["title",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["today",{"_index":625,"title":{},"body":{"components/HomePageComponent.html":{}}}],["today=new",{"_index":702,"title":{},"body":{"components/HomePageComponent.html":{}}}],["todaypair",{"_index":705,"title":{},"body":{"components/HomePageComponent.html":{}}}],["together",{"_index":953,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["toggledropdown",{"_index":314,"title":{},"body":{"components/DefaultComponent.html":{}}}],["toggletoresetpassword",{"_index":891,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["token",{"_index":1189,"title":{},"body":{"interfaces/TokenModel.html":{},"components/ValidateEmailPageComponent.html":{}}}],["token:string",{"_index":874,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/TokenModel.html":{}}}],["tokenmodel",{"_index":169,"title":{"interfaces/TokenModel.html":{}},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/TokenModel.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["track",{"_index":804,"title":{},"body":{"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["transform",{"_index":535,"title":{},"body":{"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{},"components/UserListComponent.html":{}}}],["transform(event",{"_index":536,"title":{},"body":{"pipes/EventPipe.html":{}}}],["transform(person",{"_index":989,"title":{},"body":{"pipes/PersonPipe.html":{}}}],["transition",{"_index":1315,"title":{},"body":{"components/UserListComponent.html":{}}}],["translatey",{"_index":1338,"title":{},"body":{"components/UserListComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["trim",{"_index":1151,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["true",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["try",{"_index":930,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["tryvalidate",{"_index":233,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["tryvalidate(form",{"_index":238,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["tryvalidate(form:ngform",{"_index":273,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["tslib",{"_index":1455,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":365,"title":{},"body":{"interfaces/DishDetail.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{}}}],["undelete",{"_index":1230,"title":{},"body":{"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["undelete(id",{"_index":1363,"title":{},"body":{"injectables/UserService.html":{}}}],["undelete(id:string",{"_index":1377,"title":{},"body":{"injectables/UserService.html":{}}}],["unfiltred",{"_index":1008,"title":{},"body":{"injectables/PersonService.html":{}}}],["unit",{"_index":1492,"title":{},"body":{"index.html":{}}}],["upcoming",{"_index":619,"title":{},"body":{"components/HomePageComponent.html":{}}}],["update",{"_index":1059,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["updated",{"_index":386,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{}}}],["updatedishes",{"_index":375,"title":{},"body":{"injectables/DishService.html":{}}}],["updateevents",{"_index":557,"title":{},"body":{"injectables/EventService.html":{}}}],["updateevents(myfilter",{"_index":574,"title":{},"body":{"injectables/EventService.html":{}}}],["updateevents(myfilter?:(event:eventdetailmodel)=>boolean",{"_index":583,"title":{},"body":{"injectables/EventService.html":{}}}],["updatefield",{"_index":1060,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["updatefield(field",{"_index":1081,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["updateingredients",{"_index":853,"title":{},"body":{"injectables/IngredientService.html":{}}}],["updatepersons",{"_index":999,"title":{},"body":{"injectables/PersonService.html":{}}}],["updatepersons(unfiltred",{"_index":1006,"title":{},"body":{"injectables/PersonService.html":{}}}],["updatepersons(unfiltred:boolean=true",{"_index":1014,"title":{},"body":{"injectables/PersonService.html":{}}}],["updateusers",{"_index":1351,"title":{},"body":{"injectables/UserService.html":{}}}],["url",{"_index":408,"title":{},"body":{"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"injectables/UserService.html":{}}}],["url:string",{"_index":495,"title":{},"body":{"injectables/EditService.html":{}}}],["use",{"_index":1484,"title":{},"body":{"index.html":{}}}],["used",{"_index":306,"title":{},"body":{"components/DefaultComponent.html":{},"components/LoginPageComponent.html":{}}}],["user",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["user.email",{"_index":1290,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.emailconfirmed",{"_index":1288,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.role",{"_index":335,"title":{},"body":{"components/DefaultComponent.html":{},"components/UserListComponent.html":{}}}],["user.role:\"none",{"_index":1291,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.username",{"_index":334,"title":{},"body":{"components/DefaultComponent.html":{},"components/UserListComponent.html":{}}}],["user:hover",{"_index":1329,"title":{},"body":{"components/UserListComponent.html":{}}}],["user>p",{"_index":1318,"title":{},"body":{"components/UserListComponent.html":{}}}],["usercreate",{"_index":1190,"title":{"interfaces/UserCreate.html":{}},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userdetail",{"_index":187,"title":{"interfaces/UserDetail.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userinfo",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["userinfomodel",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["userinfopagecomponent",{"_index":76,"title":{"components/UserInfoPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["userlistcomponent",{"_index":78,"title":{"components/UserListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["userlistcomponent,asyncpipe",{"_index":960,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["usermail.touched",{"_index":1219,"title":{},"body":{"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["username",{"_index":1195,"title":{},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["username.touched",{"_index":1217,"title":{},"body":{"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["userpatch",{"_index":1198,"title":{"interfaces/UserPatch.html":{}},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["users",{"_index":221,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["userservice",{"_index":888,"title":{"injectables/UserService.html":{}},"body":{"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userservice=inject(userservice",{"_index":1259,"title":{},"body":{"components/UserListComponent.html":{}}}],["userupdatebase",{"_index":1203,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["uses",{"_index":219,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["using",{"_index":1388,"title":{},"body":{"components/ValidateEmailPageComponent.html":{}}}],["uuid",{"_index":519,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["valid",{"_index":924,"title":{},"body":{"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["validate",{"_index":214,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["validateandtrycreate",{"_index":1231,"title":{},"body":{"components/UserListComponent.html":{}}}],["validateandtrycreate(form",{"_index":1246,"title":{},"body":{"components/UserListComponent.html":{}}}],["validateemail",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["validateemail(model",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateemail(model:tokenmodel",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateemailpagecomponent",{"_index":79,"title":{"components/ValidateEmailPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["validates",{"_index":1387,"title":{},"body":{"components/ValidateEmailPageComponent.html":{}}}],["validators",{"_index":906,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["value",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/PeoplePageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/EditService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["variable",{"_index":1401,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1513,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1469,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1495,"title":{},"body":{"index.html":{}}}],["view",{"_index":800,"title":{},"body":{"components/HomePageComponent.html":{}}}],["viewday",{"_index":626,"title":{},"body":{"components/HomePageComponent.html":{}}}],["viewday.key",{"_index":824,"title":{},"body":{"components/HomePageComponent.html":{}}}],["viewday.value",{"_index":826,"title":{},"body":{"components/HomePageComponent.html":{}}}],["viewday:keyvalue|undefined",{"_index":698,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail",{"_index":627,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail.description",{"_index":831,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail.end",{"_index":835,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail.name",{"_index":829,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail.participants.length",{"_index":840,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail.place",{"_index":830,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail.responsibleperson",{"_index":838,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail.start",{"_index":833,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail:eventdetailmodel|undefined",{"_index":697,"title":{},"body":{"components/HomePageComponent.html":{}}}],["void",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["w",{"_index":1307,"title":{},"body":{"components/UserListComponent.html":{}}}],["week",{"_index":647,"title":{},"body":{"components/HomePageComponent.html":{}}}],["week.key",{"_index":805,"title":{},"body":{"components/HomePageComponent.html":{}}}],["week[index",{"_index":782,"title":{},"body":{"components/HomePageComponent.html":{}}}],["weeks",{"_index":740,"title":{},"body":{"components/HomePageComponent.html":{}}}],["without",{"_index":95,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginPageComponent.html":{}}}],["words",{"_index":1320,"title":{},"body":{"components/UserListComponent.html":{}}}],["wrap",{"_index":1322,"title":{},"body":{"components/UserListComponent.html":{}}}],["wrong",{"_index":946,"title":{},"body":{"components/NotFoundPageComponent.html":{}}}],["x",{"_index":594,"title":{},"body":{"injectables/EventService.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["x.filter(myfilter",{"_index":595,"title":{},"body":{"injectables/EventService.html":{}}}],["x.filter(y",{"_index":716,"title":{},"body":{"components/HomePageComponent.html":{}}}],["x.find(y",{"_index":708,"title":{},"body":{"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["x.map",{"_index":726,"title":{},"body":{"components/HomePageComponent.html":{}}}],["x.map(y",{"_index":587,"title":{},"body":{"injectables/EventService.html":{}}}],["y",{"_index":592,"title":{},"body":{"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/PersonService.html":{}}}],["y.age",{"_index":1021,"title":{},"body":{"injectables/PersonService.html":{}}}],["y.dateofbirth",{"_index":1023,"title":{},"body":{"injectables/PersonService.html":{}}}],["y.end",{"_index":590,"title":{},"body":{"injectables/EventService.html":{}}}],["y.id",{"_index":1124,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["y.key.gettime",{"_index":709,"title":{},"body":{"components/HomePageComponent.html":{}}}],["y.start",{"_index":588,"title":{},"body":{"injectables/EventService.html":{}}}],["y.value=this.eventondate(y.key",{"_index":727,"title":{},"body":{"components/HomePageComponent.html":{}}}],["year",{"_index":656,"title":{},"body":{"components/HomePageComponent.html":{}}}],["yes",{"_index":539,"title":{},"body":{"pipes/EventPipe.html":{},"injectables/EventService.html":{},"pipes/PersonPipe.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["z.some(a",{"_index":718,"title":{},"body":{"components/HomePageComponent.html":{}}}],["zone.js",{"_index":1457,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Skarabeus_Ui'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { initFlowbite } from 'flowbite';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'Skarabeus_Ui';\n\n  ngOnInit(): void {\n    initFlowbite();\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    This guard protects pages from being accesed without autentication and redirects to login page\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/guards/auth.guard.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                next\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, switchMap, take } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service'; // Adjust the import path if needed\n\n/**\n * This guard protects pages from being accesed without autentication and redirects to login page\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable {\n\n    return this.authService.userInfoModel$.pipe(\n      take(1),  // Only take the first emitted value from the observable\n      switchMap(user => {\n        if (user) {\n          // User info is available, user is authenticated\n          return of(true);\n        } else {\n          // User info is not available, meaning not authenticated\n          this.router.navigate(['/login']);\n          return of(false);\n        }\n      }),\n      catchError((err) => {\n        // In case of error (e.g., network error or other issue), redirect to login\n        console.error('AuthGuard Error: ', err);\n        this.router.navigate(['/login']);\n        return of(false);\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                httpClient\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                    Private\n                                userInfoModel\n                            \n                            \n                                userInfoModel$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                userInfo\n                            \n                            \n                                validateEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(model: PasswordResetModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            PasswordResetModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(data: LoginModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInfo\n                        \n                    \n                \n            \n            \n                \nuserInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateEmail\n                        \n                    \n                \n            \n            \n                \nvalidateEmail(model: TokenModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            TokenModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/api/v1/Auth'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        httpClient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userInfoModel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInfoModel$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.userInfoModel.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { LoginModel, PasswordResetModel, TokenModel } from '../models/auth.interface';\nimport { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ReplaySubject, Observable, BehaviorSubject } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { UserDetail } from '../models/user.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private baseUrl = '/api/v1/Auth';\n  private readonly router = inject(Router);\n  private readonly httpClient = inject(HttpClient);\n  private userInfoModel = new ReplaySubject(1);\n  userInfoModel$ = this.userInfoModel.asObservable();\n\n  constructor(){\n    this.userInfo()\n  }\n\n  login(data: LoginModel): Observable {\n    return this.httpClient.post(`${this.baseUrl}/Login`, data).pipe(\n      tap((response) => {\n        this.httpClient\n        .get(`${this.baseUrl}`,{})\n        .subscribe({\n          next:(x)=>{\n            this.userInfoModel.next(x)\n            this.router.navigate(['/']);\n          }\n        })\n        return response;\n      })\n    );\n  }\n\n  logout(): void {\n    this.httpClient\n      .post(`${this.baseUrl}/Logout`, {})\n      .subscribe((res) => {\n        this.userInfo()\n        this.router.navigate(['/login']);\n        return res;\n      });\n  }\n\n  userInfo(){\n    return this.httpClient\n    .get(`${this.baseUrl}`,{})\n    .subscribe({\n      next:(x)=>{\n        this.userInfoModel.next(x)\n      },\n      error:(err)=>{\n        this.userInfoModel.next(null);\n      }\n    });\n  }\n\n  validateEmail(model:TokenModel){\n    return this.httpClient.post(`${this.baseUrl}/validateEmail`,model)\n  }\n\n  changePassword(model:PasswordResetModel){\n    return this.httpClient.post(`${this.baseUrl}/ChangePassword`,model)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePasswordPageComponent.html":{"url":"components/ChangePasswordPageComponent.html","title":"component - ChangePasswordPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangePasswordPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/change-password-page/change-password-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        This page tests to validate email if the route contains emailToken, and then uses passwordToken to change users password\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-password-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./change-password-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-password-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                acountCreation\n                            \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                lastError$\n                            \n                            \n                                model\n                            \n                            \n                                passwordCheck\n                            \n                            \n                                passwordMismatch\n                            \n                            \n                                    Private\n                                    Readonly\n                                route\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                checkPasswords\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                tryValidate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:29\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/change-password-page/change-password-page.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswords\n                        \n                    \n                \n            \n            \n                \ncheckPasswords()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/change-password-page/change-password-page.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/change-password-page/change-password-page.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tryValidate\n                        \n                    \n                \n            \n            \n                \ntryValidate(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/change-password-page/change-password-page.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        acountCreation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastError$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {} as PasswordResetModel\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordCheck\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMismatch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { PasswordResetModel, TokenModel } from '../../models/auth.interface';\nimport { FormsModule, NgForm, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n\n/**\n * This page tests to validate email if the route contains emailToken, and then uses passwordToken to change users password\n */\n@Component({\n  selector: 'app-change-password-page',\n  standalone:true,\n  imports:[ReactiveFormsModule,FormsModule],\n  templateUrl: './change-password-page.component.html',\n  styleUrls: ['./change-password-page.component.scss']\n})\nexport class ChangePasswordPageComponent implements OnInit {\n  lastError$:any;\n  private readonly authService = inject(AuthService);\n  private readonly route=inject(ActivatedRoute);\n  private readonly router=inject(Router);\n\n  model = {} as PasswordResetModel\n  passwordCheck: string = '';\n  passwordMismatch: boolean = false;\n\n  acountCreation=false;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.route.queryParamMap.subscribe(params => {\n      if(params.get(\"Email\")&&params.get(\"Token\")){\n        this.acountCreation = true\n        this.authService.validateEmail({email:params.get(\"Email\")!,token:params.get(\"Token\")!}).subscribe(\n          {\n            next:()=>{\n\n            },\n            error:(error: any)=>{\n              this.lastError$=error.error\n              console.log(this.lastError$)\n            }\n          }\n        )\n      }\n        this.model.token = params.get(\"PasswordToken\")!\n        this.model.email = params.get(\"Email\")!\n    });\n  }\n\n  tryValidate(form:NgForm){\n    if (form.invalid||this.passwordMismatch) {\n      Object.values(form.controls).forEach(control => {\n        control.markAsTouched();\n      });\n      this.checkPasswords()\n    }\n    else{\n      this.changePassword()\n    }\n  }\n\n  changePassword(){\n    this.authService.changePassword(this.model).subscribe(\n      {\n        next:()=>{\n          this.router.navigate(['/login'])\n        },\n        error:(err)=>{\n          this.lastError$=err.error\n        }\n      }\n    )\n  }\n\n  checkPasswords() {\n    this.passwordMismatch = (this.model.password !== this.passwordCheck) || (this.model.password == \"\");\n  }\n}\n\n    \n\n    \n        \n  \n    Change Password\n    @if (lastError$ != null) {\n      \n        {{lastError$.errors[\"errorMessage\"][0]}}\n      \n    }\n    @else if(acountCreation){\n      \n        Email was confirmed succesfuly, after seting your password, you can go to the login page and login\n            \n    }\n\n    \n        \n        \n          \n            Password\n            @if(password.invalid && password.touched){\n            must be at least 8 characters, with at least 1 letter and 1 number.\n            }\n          \n\n          \n        \n        \n        \n          \n            Confirm Password\n            @if(passwordMismatch && confirmPassword.touched){\n            does not match\n            }\n          \n\n          \n        \n        \n          \n            Change Password\n          \n        \n      \n  \n\n    \n\n    \n                \n                    ./change-password-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Change Password    @if (lastError$ != null) {              {{lastError$.errors[\"errorMessage\"][0]}}          }    @else if(acountCreation){              Email was confirmed succesfuly, after seting your password, you can go to the login page and login                }                                          Password            @if(password.invalid && password.touched){            must be at least 8 characters, with at least 1 letter and 1 number.            }                                                                  Confirm Password            @if(passwordMismatch && confirmPassword.touched){            does not match            }                                                          Change Password                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangePasswordPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultComponent.html":{"url":"components/DefaultComponent.html","title":"component - DefaultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DefaultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/default/default.component.ts\n\n\n\n    \n        Description\n    \n    \n        This layout adds navbar and is used for most of the pages\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-default\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterOutlet\n                            RouterLink\n                            AsyncPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./default.component.html\n            \n\n\n\n            \n                styleUrl\n                ./default.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                dropdownVisible\n                            \n                            \n                                    Protected\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                refresh\n                            \n                            \n                                toggleDropdown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/default/default.component.ts:21\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/default/default.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/default/default.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/default/default.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/default/default.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dropdownVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/default/default.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.authService.userInfoModel$\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/default/default.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe, CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { RouterLink, RouterOutlet } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport 'flowbite';\n \n\n/**\n * This layout adds navbar and is used for most of the pages\n */\n@Component({\n  selector: 'app-default',\n  standalone: true,\n  imports: [CommonModule,RouterOutlet,RouterLink,AsyncPipe],\n  templateUrl: './default.component.html',\n  styleUrl: './default.component.scss',\n})\nexport class DefaultComponent {\n  authService=inject(AuthService)\n\n  protected user$ = this.authService.userInfoModel$;\n\n  constructor() {    \n  }\n\n  dropdownVisible = false;\n  toggleDropdown(): void {\n    this.dropdownVisible = !this.dropdownVisible;\n  }\n  \n  refresh(){\n    this.authService.userInfo();\n  }\n\n  logout() {\n    this.authService.logout()\n    this.dropdownVisible = false\n    this.refresh()\n  }\n}\n\n    \n\n    \n        \n  \n    @let user = user$ | async;\n    \n      \n      Skarabeus\n    \n    \n      @if(user) {\n      \n        \n          Open user menu\n          \n            \n          \n\n\n\n        \n\n        \n          \n            {{user.userName}}\n            {{user.role}}\n          \n          \n            \n              Sign out\n            \n          \n        \n      \n      }\n    \n    \n      \n        @if (user) {\n        Home\n        dishes\n        events\n        persons\n        } @else {\n        Přihlásit se\n        }\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @let user = user$ | async;                Skarabeus              @if(user) {                        Open user menu                                                                      {{user.userName}}            {{user.role}}                                              Sign out                                          }                      @if (user) {        Home        dishes        events        persons        } @else {        Přihlásit se        }            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DefaultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DishAddIngredientModel.html":{"url":"interfaces/DishAddIngredientModel.html","title":"interface - DishAddIngredientModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DishAddIngredientModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/dish.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amout\n                                        \n                                \n                                \n                                        \n                                            dishId\n                                        \n                                \n                                \n                                        \n                                            ingredientId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dishId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dishId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredientId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DishDetail {\n    id: string;\n    name: string;\n    description: string;\n    price:number;\n    ingredients:IngredientDishDetail[]|undefined;\n}\n\nexport interface DishCreate {\n    name: string;\n    description:string;\n}\n\nexport interface IngredientDishDetail {\n    id:string,\n    ingredientId:string;\n    name: string;\n    amount:number;\n    price:number;\n    priceForUnit:number;\n}\n\nexport interface DishAddIngredientModel{\n  dishId:string;\n  ingredientId:string;\n  amout:number;\n}\n\nexport interface DishIngredientModel{\n  dishId:string;\n  ingredientId:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DishCreate.html":{"url":"interfaces/DishCreate.html","title":"interface - DishCreate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DishCreate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/dish.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DishDetail {\n    id: string;\n    name: string;\n    description: string;\n    price:number;\n    ingredients:IngredientDishDetail[]|undefined;\n}\n\nexport interface DishCreate {\n    name: string;\n    description:string;\n}\n\nexport interface IngredientDishDetail {\n    id:string,\n    ingredientId:string;\n    name: string;\n    amount:number;\n    price:number;\n    priceForUnit:number;\n}\n\nexport interface DishAddIngredientModel{\n  dishId:string;\n  ingredientId:string;\n  amout:number;\n}\n\nexport interface DishIngredientModel{\n  dishId:string;\n  ingredientId:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DishDetail.html":{"url":"interfaces/DishDetail.html","title":"interface - DishDetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DishDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/dish.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ingredients\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredients:     IngredientDishDetail[] | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IngredientDishDetail[] | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DishDetail {\n    id: string;\n    name: string;\n    description: string;\n    price:number;\n    ingredients:IngredientDishDetail[]|undefined;\n}\n\nexport interface DishCreate {\n    name: string;\n    description:string;\n}\n\nexport interface IngredientDishDetail {\n    id:string,\n    ingredientId:string;\n    name: string;\n    amount:number;\n    price:number;\n    priceForUnit:number;\n}\n\nexport interface DishAddIngredientModel{\n  dishId:string;\n  ingredientId:string;\n  amout:number;\n}\n\nexport interface DishIngredientModel{\n  dishId:string;\n  ingredientId:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DishIngredientModel.html":{"url":"interfaces/DishIngredientModel.html","title":"interface - DishIngredientModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DishIngredientModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/dish.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dishId\n                                        \n                                \n                                \n                                        \n                                            ingredientId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dishId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dishId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredientId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DishDetail {\n    id: string;\n    name: string;\n    description: string;\n    price:number;\n    ingredients:IngredientDishDetail[]|undefined;\n}\n\nexport interface DishCreate {\n    name: string;\n    description:string;\n}\n\nexport interface IngredientDishDetail {\n    id:string,\n    ingredientId:string;\n    name: string;\n    amount:number;\n    price:number;\n    priceForUnit:number;\n}\n\nexport interface DishAddIngredientModel{\n  dishId:string;\n  ingredientId:string;\n  amout:number;\n}\n\nexport interface DishIngredientModel{\n  dishId:string;\n  ingredientId:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DishService.html":{"url":"injectables/DishService.html","title":"injectable - DishService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DishService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/dish.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Private\n                                dishes\n                            \n                            \n                                dishes$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddIngredientToDish\n                            \n                            \n                                CreateDish\n                            \n                            \n                                generatePatch\n                            \n                            \n                                PatchDish\n                            \n                            \n                                patchIngredientDish\n                            \n                            \n                                RemoveDish\n                            \n                            \n                                removeIngredientFromDish\n                            \n                            \n                                UpdateDishes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/dish.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        AddIngredientToDish\n                        \n                    \n                \n            \n            \n                \nAddIngredientToDish(model: DishAddIngredientModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            DishAddIngredientModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreateDish\n                        \n                    \n                \n            \n            \n                \nCreateDish(data: DishCreate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            DishCreate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatePatch\n                        \n                    \n                \n            \n            \n                \ngeneratePatch(updated: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:70\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updated\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatchDish\n                        \n                    \n                \n            \n            \n                \nPatchDish(id: string | undefined, patch: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patch\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patchIngredientDish\n                        \n                    \n                \n            \n            \n                \npatchIngredientDish(id: string, patch: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patch\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RemoveDish\n                        \n                    \n                \n            \n            \n                \nRemoveDish(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeIngredientFromDish\n                        \n                    \n                \n            \n            \n                \nremoveIngredientFromDish(model: DishIngredientModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            DishIngredientModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateDishes\n                        \n                    \n                \n            \n            \n                \nUpdateDishes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"/api/v1/Dish\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dish.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dishes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dish.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dishes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.dishes.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dish.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DishAddIngredientModel, DishIngredientModel, IngredientDishDetail } from './../models/dish.interface';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, generate, Observable, ReplaySubject } from 'rxjs';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { DishCreate, DishDetail } from '../models/dish.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DishService {\n  protected readonly baseUrl = \"/api/v1/Dish\"\n    private dishes = new BehaviorSubject([]);\n    dishes$ = this.dishes.asObservable();\n\n\n  constructor(private httpClient: HttpClient) {\n    this.UpdateDishes()\n   }\n\n   PatchDish(id:string|undefined,patch:Partial) {\n\n    const url = `${this.baseUrl}/${id}`;\n    return this.httpClient.patch(url,this.generatePatch(patch))\n  }\n\n  UpdateDishes(){\n    const url = this.baseUrl;\n    this.httpClient.get(url)\n    .subscribe(x=>{this.dishes.next(x)});\n  }\n\n  AddIngredientToDish(model:DishAddIngredientModel){\n    const url = `${this.baseUrl}/AddIngredientToDish`;\n    this.httpClient.post(url,model).subscribe({\n      next: (response) => {this.UpdateDishes(),console.log(response)},\n      error: (error) => console.error(error)\n    });\n  }\n\n  patchIngredientDish(id:string,patch:Partial){\n    const url = `${this.baseUrl}/UpdateIngredientDish/${id}`;\n    this.httpClient.patch(url,this.generatePatch(patch))\n    .subscribe({\n      next: (response) => {this.UpdateDishes()},\n      error: (error) => console.error('Error:', error)\n    })\n  }\n\n  removeIngredientFromDish(model:DishIngredientModel){\n    const url = `${this.baseUrl}/RemoveIngredientFromDish`;\n    this.httpClient.post(url,model).subscribe({\n      next: (response) => {this.UpdateDishes(),console.log(response)},\n      error: (error) => console.error(error)\n    });\n  }\n\n  CreateDish(data:DishCreate):Observable{\n    const url = this.baseUrl;\n    return this.httpClient.post(url,data)\n  }\n\n  RemoveDish(id: string): void {\n    const url = `${this.baseUrl}/${id}`;\n    this.httpClient.delete(url).subscribe({\n      next: (response) => {this.UpdateDishes(),console.log(response)},\n      error: (error) => console.error(error)\n    });\n  }\n\n  generatePatch(updated: Partial): any[] {\n    const patch: any[] = [];\n\n    Object.keys(updated).forEach((key) => {\n\n        patch.push({\n          op: 'replace',\n          path: `${key}`,\n          value: (updated as any)[key],\n        });\n\n    });\n\n    return patch;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EditService.html":{"url":"injectables/EditService.html","title":"injectable - EditService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EditService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/Edit.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendarMonth\n                            \n                            \n                                calendarYear\n                            \n                            \n                                    Private\n                                EditDishId\n                            \n                            \n                                EditDishId$\n                            \n                            \n                                    Private\n                                editEventId\n                            \n                            \n                                EditEventId$\n                            \n                            \n                                    Private\n                                editPersonId\n                            \n                            \n                                editPersonId$\n                            \n                            \n                                openDishCreate\n                            \n                            \n                                openEventCreate\n                            \n                            \n                                openPersonCreate\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDishEdit\n                            \n                            \n                                closeEventEdit\n                            \n                            \n                                closePersonEdit\n                            \n                            \n                                openDishCreateModal\n                            \n                            \n                                openDishEditModal\n                            \n                            \n                                openEventCreateModal\n                            \n                            \n                                openEventEditModal\n                            \n                            \n                                openPersonCreateModal\n                            \n                            \n                                openPersonEditModal\n                            \n                            \n                                popReturnUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDishEdit\n                        \n                    \n                \n            \n            \n                \ncloseDishEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeEventEdit\n                        \n                    \n                \n            \n            \n                \ncloseEventEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closePersonEdit\n                        \n                    \n                \n            \n            \n                \nclosePersonEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDishCreateModal\n                        \n                    \n                \n            \n            \n                \nopenDishCreateModal(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDishEditModal\n                        \n                    \n                \n            \n            \n                \nopenDishEditModal(dishId: string, url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dishId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEventCreateModal\n                        \n                    \n                \n            \n            \n                \nopenEventCreateModal(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEventEditModal\n                        \n                    \n                \n            \n            \n                \nopenEventEditModal(eventId: string, url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eventId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPersonCreateModal\n                        \n                    \n                \n            \n            \n                \nopenPersonCreateModal(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPersonEditModal\n                        \n                    \n                \n            \n            \n                \nopenPersonEditModal(personId: string, url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                personId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        popReturnUrl\n                        \n                    \n                \n            \n            \n                \npopReturnUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendarMonth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : new Date().getMonth()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calendarYear\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        EditDishId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EditDishId$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.EditDishId.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editEventId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EditEventId$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.editEventId.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editPersonId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editPersonId$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.editPersonId.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDishCreate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEventCreate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPersonCreate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { PersonCreateModel } from '../models/person.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditService {\n  calendarMonth:number=new Date().getMonth();\n  calendarYear:number=new Date().getFullYear();\n\n  private editPersonId= new BehaviorSubject(null);\n  editPersonId$ = this.editPersonId.asObservable();\n\n  private editEventId= new BehaviorSubject(null);\n  EditEventId$ = this.editEventId.asObservable();\n\n  private EditDishId= new BehaviorSubject(null);\n  EditDishId$ = this.EditDishId.asObservable();\n\n  private returnUrl:any;\n  \n  openPersonCreate = false\n  openEventCreate = false\n  openDishCreate = false\n\n  openPersonEditModal(personId: string, url:string) {\n    this.returnUrl = url\n    this.editPersonId.next(personId);\n  }\n\n  openDishEditModal(dishId: string, url:string) {\n    this.returnUrl = url\n    this.EditDishId.next(dishId);\n  }\n\n  openEventEditModal(eventId: string, url:string) {\n    this.returnUrl = url    \n    this.editEventId.next(eventId);\n  }\n\n  closePersonEdit(){\n    this.editPersonId.next(null)\n  }\n\n  closeDishEdit(){\n    this.EditDishId.next(null)\n  }\n\n  closeEventEdit(){\n    this.editEventId.next(null)\n  }\n\n  openPersonCreateModal(url:string){\n    this.openPersonCreate = true\n    this.returnUrl = url\n  }\n  \n  openDishCreateModal(url:string){\n    this.openDishCreate = true\n    this.returnUrl = url\n  }\n\n  openEventCreateModal(url:string){\n    this.openEventCreate = true\n    this.returnUrl = url\n  }\n\n  popReturnUrl(){\n    var url = this.returnUrl;\n    this.returnUrl = null\n    return url;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventCreateModel.html":{"url":"interfaces/EventCreateModel.html","title":"interface - EventCreateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventCreateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/event.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            end\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            place\n                                        \n                                \n                                \n                                        \n                                            responsiblePersonId\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        place\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        place:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        responsiblePersonId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        responsiblePersonId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DishDetail } from \"./dish.interface\";\nimport { PersonDetailModel, SmallPersonDetailModel } from \"./person.interface\";\n\nexport interface EventCreateModel {\n  name: string;\n  description: string;\n  place: string;\n  responsiblePersonId: string; // UUID format\n  start: string; // ISO 8601 date-time format\n  end: string; // ISO 8601 date-time format\n}\n\nexport interface EventDetailModel {\n  id: string; // UUID format\n  responsiblePerson: SmallPersonDetailModel | null;\n  participants: PersonDetailModel[];\n  dishes: DishDetail[];\n  name: string;\n  description: string;\n  place: string;\n  start: string; // ISO 8601 date-time format\n  end: string; // ISO 8601 date-time format\n  rowInGrid?:number|null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventDetailModel.html":{"url":"interfaces/EventDetailModel.html","title":"interface - EventDetailModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventDetailModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/event.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            dishes\n                                        \n                                \n                                \n                                        \n                                            end\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            participants\n                                        \n                                \n                                \n                                        \n                                            place\n                                        \n                                \n                                \n                                        \n                                            responsiblePerson\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rowInGrid\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dishes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dishes:         DishDetail[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DishDetail[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        participants\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        participants:         PersonDetailModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PersonDetailModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        place\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        place:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        responsiblePerson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        responsiblePerson:     SmallPersonDetailModel | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SmallPersonDetailModel | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowInGrid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rowInGrid:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DishDetail } from \"./dish.interface\";\nimport { PersonDetailModel, SmallPersonDetailModel } from \"./person.interface\";\n\nexport interface EventCreateModel {\n  name: string;\n  description: string;\n  place: string;\n  responsiblePersonId: string; // UUID format\n  start: string; // ISO 8601 date-time format\n  end: string; // ISO 8601 date-time format\n}\n\nexport interface EventDetailModel {\n  id: string; // UUID format\n  responsiblePerson: SmallPersonDetailModel | null;\n  participants: PersonDetailModel[];\n  dishes: DishDetail[];\n  name: string;\n  description: string;\n  place: string;\n  start: string; // ISO 8601 date-time format\n  end: string; // ISO 8601 date-time format\n  rowInGrid?:number|null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EventPipe.html":{"url":"pipes/EventPipe.html","title":"pipe - EventPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EventPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/event.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                this pipe parses data from event\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        event\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(event: EventDetailModel, args?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/event.pipe.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventDetailModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { EventDetailModel } from '../models/event.interface';\n\n/**\n * this pipe parses data from event\n */\n@Pipe({\n  name: 'event',\n  standalone:true\n})\nexport class EventPipe implements PipeTransform {\n\n  transform(event: EventDetailModel, args?: string): any {\n    switch(args){\n      case \"startDate\":{\n        const date = new Date(event.start)\n        return new Date(date.getFullYear(),date.getMonth(),date.getDate(),1);\n      }\n      case \"endDate\":{\n        const date = new Date(event.end)\n        return new Date(date.getFullYear(),date.getMonth(),date.getDate(),1);\n      }\n      default:{\n        return event.name\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventService.html":{"url":"injectables/EventService.html","title":"injectable - EventService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/event.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Protected\n                                events\n                            \n                            \n                                events$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDishToEvent\n                            \n                            \n                                addPersonToEvent\n                            \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                generatePatch\n                            \n                            \n                                Patch\n                            \n                            \n                                removeDishFromEvent\n                            \n                            \n                                removePersonFromEvent\n                            \n                            \n                                updateEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/event.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addDishToEvent\n                        \n                    \n                \n            \n            \n                \naddDishToEvent(id: string, dishId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dishId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addPersonToEvent\n                        \n                    \n                \n            \n            \n                \naddPersonToEvent(id: string, personId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                personId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(model: EventCreateModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            EventCreateModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatePatch\n                        \n                    \n                \n            \n            \n                \ngeneratePatch(updated: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:72\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updated\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Patch\n                        \n                    \n                \n            \n            \n                \nPatch(id: string, model: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                model\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeDishFromEvent\n                        \n                    \n                \n            \n            \n                \nremoveDishFromEvent(id: string, dishId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dishId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePersonFromEvent\n                        \n                    \n                \n            \n            \n                \nremovePersonFromEvent(id: string, personId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                personId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEvents\n                        \n                    \n                \n            \n            \n                \nupdateEvents(myFilter?: (event?: EventDetailModel) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                myFilter\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"/api/v1/Event\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/event.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        events\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/event.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        events$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.events.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/event.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EventCreateModel, EventDetailModel } from './../models/event.interface';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  protected readonly baseUrl = \"/api/v1/Event\"\n  protected events = new BehaviorSubject([])\n  events$ = this.events.asObservable()\n\n  constructor(private httpClient: HttpClient) {\n    this.updateEvents()\n  }\n\n  updateEvents(myFilter?:(event:EventDetailModel)=>boolean){\n    this.httpClient.get(this.baseUrl)\n    .subscribe(x =>{\n      console.log(x)\n      x.map(y => {\n        y.start = new Date(y.start).toISOString().split('T')[0]\n        y.end = new Date(y.end).toISOString().split('T')[0]\n        return y;\n      })\n      if(myFilter != undefined){\n        x = x.filter(myFilter);\n      }\n      this.events.next(x)\n    })\n  }\n\n  delete(id:string){\n    return this.httpClient.delete(`${this.baseUrl}/${id}`)\n  }\n\n  create(model:EventCreateModel){\n    return this.httpClient.post(`${this.baseUrl}`,model)\n  }\n\n  Patch(id:string,model:Partial){\n    const url = `${this.baseUrl}/${id}`;\n    return this.httpClient.patch(url,this.generatePatch(model))\n  }\n\n\n  addPersonToEvent(id: string, personId: string) {\n    const url = `${this.baseUrl}/AddPersonToEvent/${id}/${personId}`;\n    return this.httpClient.get(url)\n  }\n\n  removePersonFromEvent(id: string, personId: string) {\n    const url = `${this.baseUrl}/RemovePersonFromEvent/${id}/${personId}`;\n    return this.httpClient.delete(url)\n  }\n\n  addDishToEvent(id: string, dishId: string) {\n    const url = `${this.baseUrl}/AddDishToEvent/${id}/${dishId}`;\n    return this.httpClient.get(url)\n  }\n\n  removeDishFromEvent(id: string, dishId: string) {\n    const url = `${this.baseUrl}/RemoveDishFromEvent/${id}/${dishId}`;\n    return this.httpClient.delete(url)\n  }\n\n\n\n\n\n  generatePatch(updated: Partial): any[] {\n    const patch: any[] = [];\n\n    Object.keys(updated).forEach((key) => {\n\n        patch.push({\n          op: 'replace',\n          path: `${key}`,\n          value: (updated as any)[key],\n        });\n\n    });\n\n    return patch;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FoodPageComponent.html":{"url":"components/FoodPageComponent.html","title":"component - FoodPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FoodPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/food-page/food-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        this page displays the dish-list component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ingredient-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                DishListComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./food-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./food-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { DishListComponent } from '../../components/dish-list/dish-list.component';\n\n/**\n * this page displays the dish-list component\n */\n@Component({\n  selector: 'app-ingredient-page',\n  standalone: true,\n  imports: [\n    DishListComponent,\n  ],\n  templateUrl: './food-page.component.html',\n  styleUrl: './food-page.component.scss'\n})\nexport class FoodPageComponent {\n\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FoodPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePageComponent.html":{"url":"components/HomePageComponent.html","title":"component - HomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home-page/home-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        home page displays calendar with upcoming events and their details\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            DatePipe\n                            PersonPipe\n                            EventPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendar\n                            \n                            \n                                currentMonth\n                            \n                            \n                                currentYear\n                            \n                            \n                                    Private\n                                editService\n                            \n                            \n                                events\n                            \n                            \n                                    Private\n                                eventService\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                today\n                            \n                            \n                                viewDay\n                            \n                            \n                                viewEventDetail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEventsToDays\n                            \n                            \n                                dayBeforeBreak\n                            \n                            \n                                eventOnDate\n                            \n                            \n                                filterEvents\n                            \n                            \n                                generateCalendar\n                            \n                            \n                                getCalendarGrid\n                            \n                            \n                                getEventPrice\n                            \n                            \n                                nextMonth\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEventCreate\n                            \n                            \n                                openEventEdit\n                            \n                            \n                                personDetail\n                            \n                            \n                                previusMonth\n                            \n                            \n                                putDayToView\n                            \n                            \n                                putEventToView\n                            \n                            \n                                stringToColor\n                            \n                            \n                                stringToDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEventsToDays\n                        \n                    \n                \n            \n            \n                \naddEventsToDays()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dayBeforeBreak\n                        \n                    \n                \n            \n            \n                \ndayBeforeBreak(week: KeyValue[], index: number, event: EventDetailModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:209\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                week\n                                            \n                                                        KeyValue[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            EventDetailModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventOnDate\n                        \n                    \n                \n            \n            \n                \neventOnDate(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterEvents\n                        \n                    \n                \n            \n            \n                \nfilterEvents(events: (EventDetailModel)[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                events\n                                            \n                                                            (EventDetailModel)[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateCalendar\n                        \n                    \n                \n            \n            \n                \ngenerateCalendar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCalendarGrid\n                        \n                    \n                \n            \n            \n                \ngetCalendarGrid(year: number, month: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                year\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                month\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [][]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEventPrice\n                        \n                    \n                \n            \n            \n                \ngetEventPrice(perPerson: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:219\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                perPerson\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextMonth\n                        \n                    \n                \n            \n            \n                \nnextMonth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEventCreate\n                        \n                    \n                \n            \n            \n                \nopenEventCreate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:186\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEventEdit\n                        \n                    \n                \n            \n            \n                \nopenEventEdit(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:191\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        personDetail\n                        \n                    \n                \n            \n            \n                \npersonDetail(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:228\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previusMonth\n                        \n                    \n                \n            \n            \n                \npreviusMonth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putDayToView\n                        \n                    \n                \n            \n            \n                \nputDayToView(day: KeyValue)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                day\n                                            \n                                                        KeyValue\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putEventToView\n                        \n                    \n                \n            \n            \n                \nputEventToView(eventId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:181\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eventId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColor\n                        \n                    \n                \n            \n            \n                \nstringToColor(input: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:196\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToDate\n                        \n                    \n                \n            \n            \n                \nstringToDate(dt: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     KeyValue[][]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentMonth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.editService.calendarMonth\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentYear\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.editService.calendarYear\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EditService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        events\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventDetailModel[]\n\n                    \n                \n                \n                    \n                        Default value : [{} as EventDetailModel]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        eventService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EventService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(this.currentYear, this.currentMonth,new Date().getDate(),1)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     KeyValue | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewEventDetail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventDetailModel | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { EventService } from '../../services/event.service';\nimport { DatePipe, KeyValue } from '@angular/common';\nimport { EventDetailModel } from '../../models/event.interface';\nimport { PersonPipe } from '../../pipes/person.pipe';\nimport { EventPipe } from '../../pipes/event.pipe';\nimport { EditService } from '../../services/Edit.service';\nimport { Router } from '@angular/router';\n\n/**\n * home page displays calendar with upcoming events and their details\n */\n@Component({\n  selector: 'app-home-page',\n  standalone: true,\n  imports: [DatePipe,PersonPipe,EventPipe],\n  templateUrl: './home-page.component.html',\n  styleUrl: './home-page.component.scss'\n})\n\nexport class HomePageComponent {\n  private eventService = inject(EventService)\n  private editService = inject(EditService)\n  private router=inject(Router)\n\n  events:EventDetailModel[] = [{} as EventDetailModel];\n  viewEventDetail:EventDetailModel|undefined;\n  viewDay:KeyValue|undefined;\n\n  calendar:KeyValue[][] = [];\n\n  currentMonth=this.editService.calendarMonth\n  currentYear=this.editService.calendarYear\n  \n  today=new Date(this.currentYear, this.currentMonth,new Date().getDate(),1);\n\n  ngOnInit(){\n    this.eventService.updateEvents()\n    this.generateCalendar()\n    \n    var todayPair\n    this.calendar.forEach(x =>\n      {\n        var d = x.find(y => y.key.getTime() == this.today.getTime())\n        if(d!=undefined) todayPair = d\n      });\n    this.putDayToView(todayPair!);\n  }\n\n  generateCalendar(){\n    this.calendar=this.getCalendarGrid(this.editService.calendarYear,this.editService.calendarMonth)\n    this.eventService.events$.subscribe(\n      x => \n      {\n        this.events = x.filter(y => this.calendar.some(z => z.some(a => a.key.getTime() == this.stringToDate(y.start).getTime()|| a.key.getTime() == this.stringToDate(y.end).getTime())))\n        .sort((a) => this.stringToDate(a.start).getTime());\n        this.addEventsToDays()\n      }\n    )\n  }\n\n  addEventsToDays(){\n    this.calendar.map(\n      x => {\n        x.map( \n          y => {\n            y.value=this.eventOnDate(y.key)\n          }\n        )\n      }\n    )\n  }\n\n  getCalendarGrid(year: number, month: number): KeyValue[][] {\n    const firstDayOfMonth = new Date(year, month, 1);\n    const lastDayOfMonth = new Date(year, month + 1, 0);\n    \n    let startWeekday = firstDayOfMonth.getDay(); // 0 (Sunday) - 6 (Saturday)\n\n    // Adjust so Monday = 0, ..., Sunday = 6\n    startWeekday = (startWeekday === 0) ? 6 : startWeekday - 1;\n\n    const daysInMonth = lastDayOfMonth.getDate();\n    const weeks: KeyValue[][] = [];\n    let currentWeek: KeyValue[] = [];\n\n    // Fill days before the first of the month with placeholders from the previous month\n    for (let i = startWeekday; i > 0; i--) {\n      currentWeek.push({key:new Date(year, month, 1 - i,1),value:undefined});\n    }\n\n    // Fill in the days of the month\n    for (let day = 1; day  {\n          return this.stringToDate(event.start).getTime()  this.stringToDate(a.start).getTime() - this.stringToDate(b.start).getTime()); // Sort by start time\n    \n    const rowsFull=[1];\n    events.forEach(x=>{\n      if(x.rowInGrid) rowsFull.push(x.rowInGrid)\n    })  \n  \n    const mapedEvents = [...events].map(x=>{\n        if(x.rowInGrid == undefined) {\n          const firstEmpty = [1,2,3,4].filter(x=>!rowsFull.includes(x))[0];\n          if(firstEmpty==undefined){\n            this.events.find(y=>y.id==x.id)!.rowInGrid = null\n            console.log(\"delll\")\n          }\n          else{\n            this.events.find(y=>y.id==x.id)!.rowInGrid = firstEmpty\n            rowsFull.push(firstEmpty)\n          }\n        }\n        return x\n    });\n    return mapedEvents.sort(x=>x.rowInGrid!);\n  }\n\n  filterEvents(events:(EventDetailModel)[]){\n    return events.filter(x=>x.rowInGrid != null)\n  }\n\n  putDayToView(day:KeyValue){\n    this.viewEventDetail = undefined;\n    this.viewDay = day\n  }\n\n  putEventToView(eventId:string){\n    this.viewDay = undefined;\n    this.viewEventDetail = this.events.find(x=>x.id==eventId)!;\n  }\n\n  openEventCreate(){\n    this.editService.openEventCreateModal(this.router.url);\n    this.router.navigate(['/events'])\n  }\n  \n  openEventEdit(id:string){\n    this.editService.openEventEditModal(id,this.router.url);\n    this.router.navigate(['/events'])\n  }\n\n  stringToColor(input: string): string {\n  let hash = 0;\n  \n  // Generate a hash code from the string\n  for (let i = 0; i [],index:number,event:EventDetailModel):boolean{\n\n    var dayBefore:any\n    if(index != 0) dayBefore = week[index-1]\n    else if(this.calendar.indexOf(week) == 0) return true\n    else dayBefore = this.calendar[this.calendar.indexOf(week)-1][6]\n\n    return dayBefore.value!.includes(event) && !dayBefore.value!.slice(0,3).includes(event);\n  }\n\n  getEventPrice(perPerson:boolean){\n    var priceOfDishes = 0;\n    this.viewEventDetail!.dishes.forEach(dish => {\n      priceOfDishes+=dish.price\n      console.log(dish.price)\n    });\n    return priceOfDishes * (perPerson ? 1 : this.viewEventDetail!.participants.length);\n  }\n\n  personDetail(id:string){\n    this.editService.openPersonEditModal(id,this.router.url)\n    this.router.navigate(['people'])\n  }\n}\n\n    \n\n    \n        \n  \n    Upcoming events on {{currentMonth+1}}. {{currentYear}}\n    @if(viewDay||viewEventDetail){\n      Detail view\n    }\n    @if(viewEventDetail){\n      \n        \n      \n    }\n  \n  \n  \n  \n    \n      \n      \n        \n        @for(week of calendar[0]; track week.key){\n          {{ week.key| date:\"E\" }}\n        }\n      \n      >\n    \n        \n      \n      @for(week of calendar; track week){\n        @for(day of week; track day.key){\n           \n            \n              {{ day.key | date:\"d.\" }}\n              @if(day.value!.length > 3){\n                +{{day.value!.length-3}}\n              }\n            \n          \n            \n            @for(event of day.value?.slice(0,3); track event.id){\n              @let eventStart = event|event:\"startDate\";\n              @let eventEnd = event|event:\"endDate\";\n              @let eventColor = stringToColor((event.start+(event.rowInGrid!/4)));\n              \n                @if(dayBeforeBreak(week,week.indexOf(day),event)){\n                  \n                }\n                \n                    {{ event.name }}\n                \n              \n            }\n          \n        }\n      }\n    \n  \n  @if(viewDay || viewEventDetail){\n  \n    @if(viewDay){\n      \n        Events on {{viewDay.key | date:\"fullDate\"}} \n        x\n      \n        \n          @for(event of viewDay.value; track event.id){\n              @let eventColor = stringToColor((event.start+(event.rowInGrid!/4)));\n              \n                \n                    {{ event.name }}\n                \n              \n          }\n          @if(viewDay.value?.length == 0){\n            No events on this day\n          }\n           \n                \n                    Add new Event\n                \n              \n      \n    }\n    @if(viewEventDetail != undefined){\n      \n        {{viewEventDetail.name}}\n        x\n      \n      \n        place: \n        {{(viewEventDetail.place)}}\n      \n      \n        Description:\n        {{viewEventDetail.description}}\n      \n      \n        Starts on: \n        {{viewEventDetail.start | date:\"fullDate\"}}\n      \n      \n        Ends on: \n        {{viewEventDetail.end | date:\"fullDate\"}}\n      \n      \n        Person responsible: \n        {{(viewEventDetail.responsiblePerson! | person:\"fullName\")}}\n      \n      \n        Number of Participants: \n        {{(viewEventDetail.participants.length)}}\n      \n      \n        Price per person:\n        {{getEventPrice(true)}},-\n      \n    }\n  \n}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Upcoming events on {{currentMonth+1}}. {{currentYear}}    @if(viewDay||viewEventDetail){      Detail view    }    @if(viewEventDetail){                        }                                        @for(week of calendar[0]; track week.key){          {{ week.key| date:\"E\" }}        }            >                        @for(week of calendar; track week){        @for(day of week; track day.key){                                     {{ day.key | date:\"d.\" }}              @if(day.value!.length > 3){                +{{day.value!.length-3}}              }                                              @for(event of day.value?.slice(0,3); track event.id){              @let eventStart = event|event:\"startDate\";              @let eventEnd = event|event:\"endDate\";              @let eventColor = stringToColor((event.start+(event.rowInGrid!/4)));                              @if(dayBeforeBreak(week,week.indexOf(day),event)){                                  }                                    {{ event.name }}                                          }                  }      }        @if(viewDay || viewEventDetail){      @if(viewDay){              Events on {{viewDay.key | date:\"fullDate\"}}         x                        @for(event of viewDay.value; track event.id){              @let eventColor = stringToColor((event.start+(event.rowInGrid!/4)));                                                  {{ event.name }}                                        }          @if(viewDay.value?.length == 0){            No events on this day          }                                               Add new Event                                        }    @if(viewEventDetail != undefined){              {{viewEventDetail.name}}        x                    place:         {{(viewEventDetail.place)}}                    Description:        {{viewEventDetail.description}}                    Starts on:         {{viewEventDetail.start | date:\"fullDate\"}}                    Ends on:         {{viewEventDetail.end | date:\"fullDate\"}}                    Person responsible:         {{(viewEventDetail.responsiblePerson! | person:\"fullName\")}}                    Number of Participants:         {{(viewEventDetail.participants.length)}}                    Price per person:        {{getEventPrice(true)}},-          }  }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IngredientCreate.html":{"url":"interfaces/IngredientCreate.html","title":"interface - IngredientCreate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IngredientCreate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ingredient.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            priceforunit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priceforunit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priceforunit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IngredientCreate {\n    name: string;\n    priceforunit: number\n}\n\nexport interface IngredientDetail {\n    id: string;\n    name: string;\n    priceForUnit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IngredientDetail.html":{"url":"interfaces/IngredientDetail.html","title":"interface - IngredientDetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IngredientDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ingredient.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            priceForUnit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priceForUnit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priceForUnit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IngredientCreate {\n    name: string;\n    priceforunit: number\n}\n\nexport interface IngredientDetail {\n    id: string;\n    name: string;\n    priceForUnit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IngredientDishDetail.html":{"url":"interfaces/IngredientDishDetail.html","title":"interface - IngredientDishDetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IngredientDishDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/dish.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ingredientId\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            priceForUnit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredientId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priceForUnit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priceForUnit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DishDetail {\n    id: string;\n    name: string;\n    description: string;\n    price:number;\n    ingredients:IngredientDishDetail[]|undefined;\n}\n\nexport interface DishCreate {\n    name: string;\n    description:string;\n}\n\nexport interface IngredientDishDetail {\n    id:string,\n    ingredientId:string;\n    name: string;\n    amount:number;\n    price:number;\n    priceForUnit:number;\n}\n\nexport interface DishAddIngredientModel{\n  dishId:string;\n  ingredientId:string;\n  amout:number;\n}\n\nexport interface DishIngredientModel{\n  dishId:string;\n  ingredientId:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IngredientService.html":{"url":"injectables/IngredientService.html","title":"injectable - IngredientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IngredientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/ingredient.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Private\n                                ingredients\n                            \n                            \n                                ingredients$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createIngredient\n                            \n                            \n                                generatePatch\n                            \n                            \n                                PatchIngredient\n                            \n                            \n                                removeIngredient\n                            \n                            \n                                UpdateIngredients\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/ingredient.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createIngredient\n                        \n                    \n                \n            \n            \n                \ncreateIngredient(data: IngredientCreate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ingredient.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            IngredientCreate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatePatch\n                        \n                    \n                \n            \n            \n                \ngeneratePatch(updated: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ingredient.service.ts:41\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updated\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatchIngredient\n                        \n                    \n                \n            \n            \n                \nPatchIngredient(id: string | undefined, patch: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ingredient.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patch\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeIngredient\n                        \n                    \n                \n            \n            \n                \nremoveIngredient(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ingredient.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateIngredients\n                        \n                    \n                \n            \n            \n                \nUpdateIngredients()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ingredient.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"/api/v1/ingredient\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/ingredient.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/ingredient.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredients$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.ingredients.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/ingredient.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { IngredientCreate, IngredientDetail } from '../models/ingredient.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IngredientService {\n  protected readonly baseUrl = \"/api/v1/ingredient\"\n    private ingredients = new BehaviorSubject([]);\n    ingredients$ = this.ingredients.asObservable();\n\n\n  constructor(private httpClient: HttpClient) {\n    this.UpdateIngredients()\n   }\n\n   PatchIngredient(id:string|undefined,patch:Partial) {\n\n    const url = `${this.baseUrl}/${id}`;\n    return this.httpClient.patch(url,this.generatePatch(patch))\n  }\n\n  UpdateIngredients(){\n    const url = this.baseUrl;\n    this.httpClient.get(url)\n    .subscribe(x=>{this.ingredients.next(x)})\n  }\n\n  createIngredient(data:IngredientCreate){\n    const url = this.baseUrl;\n    return this.httpClient.post(url,data)\n  }\n\n  removeIngredient(id: string) {\n    const url = `${this.baseUrl}/${id}`;\n    return this.httpClient.delete(url)\n  }\n\n  generatePatch(updated: Partial): any[] {\n    const patch: any[] = [];\n\n    Object.keys(updated).forEach((key) => {\n\n        patch.push({\n          op: 'replace',\n          path: `${key}`,\n          value: (updated as any)[key],\n        });\n\n    });\n\n    return patch;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginModel.html":{"url":"interfaces/LoginModel.html","title":"interface - LoginModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginModel {\n  email: string;\n  password: string;\n}\n\nexport interface TokenModel{\n  email:string;\n  token:string;\n}\n\nexport interface PasswordResetModel extends TokenModel{\n  password:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/login-page/login-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        one of the only accesable pages without loggin, used for logging in.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            RouterLink\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                authService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                fb\n                            \n                            \n                                    Protected\n                                lastError$\n                            \n                            \n                                    Protected\n                                loginForm\n                            \n                            \n                                    Protected\n                                resetForm\n                            \n                            \n                                resetingPassword\n                            \n                            \n                                    Protected\n                                    Readonly\n                                router\n                            \n                            \n                                    Protected\n                                sentReset\n                            \n                            \n                                    Protected\n                                    Readonly\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                            \n                                resetPassword\n                            \n                            \n                                toggleToResetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login-page/login-page.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login-page/login-page.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleToResetPassword\n                        \n                    \n                \n            \n            \n                \ntoggleToResetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login-page/login-page.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        lastError$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    email: new FormControl('', { nonNullable: true}),\n    password: new FormControl('', { nonNullable: true})\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        resetForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    resetEmail: new FormControl('', { nonNullable: true})\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetingPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        sentReset\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { FormBuilder, FormControl, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router, RouterLink } from '@angular/router';\nimport { UserService } from '../../services/user.service';\n\n/**\n * one of the only accesable pages without loggin, used for logging in.\n */\n@Component({\n  selector: 'app-login-page',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterLink,\n    ReactiveFormsModule,\n  ],\n  templateUrl: './login-page.component.html',\n  styleUrl: './login-page.component.scss'\n})\nexport class LoginPageComponent {\n  protected readonly fb = inject(FormBuilder);\n\n  protected readonly authService = inject(AuthService);\n  protected readonly userService = inject(UserService);\n\n  protected readonly router = inject(Router);\n\n  protected lastError$:any;\n  protected sentReset=false;\n\n  resetingPassword = false;\n\n  protected loginForm = this.fb.group({\n    email: new FormControl('', { nonNullable: true}),\n    password: new FormControl('', { nonNullable: true})\n  });\n  \n  protected resetForm = this.fb.group({\n    resetEmail: new FormControl('', { nonNullable: true})\n  });\n\n  onSubmit(): void {\n    const data = this.loginForm.getRawValue();\n\n    this.authService.login(data).subscribe({\n      next: () => {\n        this.lastError$ = null\n      },\n      error: (error) => {\n        this.lastError$ = error.error\n        console.log(this.lastError$)\n      }\n    });\n  }\n  \n  toggleToResetPassword(){\n    this.resetingPassword = !this.resetingPassword;\n  }\n\n  resetPassword():void{\n    this.userService.changePassword(this.resetForm.getRawValue().resetEmail)\n    .subscribe(\n      {\n        next: (x) => {\n          this.lastError$ = null\n          this.sentReset=true          \n        },\n        error: (error) => {\n          this.lastError$ = error\n          console.log(this.lastError$)\n        }\n      }\n    )\n  }\n}\n\n    \n\n    \n        \n  \n    @if(!resetingPassword){\n      \n        Login\n        @if(authService.userInfoModel$|async;){\n          logged in \n            \n              \n            \n          \n        }\n      \n      \n         \n          @if (lastError$ != null) {\n            \n              {{lastError$?.errors[\"error\"]}}\n            \n          }\n          \n            Your email\n              @if(lastError$?.errors[\"Email\"] != null){\n                is required and needs to be a valid email address\n              }\n            \n            \n          \n          \n            Your password\n              @if(lastError$?.errors.Password != null){\n                is required\n              }\n            \n            \n          \n          Login\n          \n          Reset Password\n        \n      \n    }\n    @else {\n      \n        Reset password\n      \n        \n          \n          @if(sentReset){\n            Reset email sent, try checking your inbox and if you can't find it, check spelling and try again or conntact support\n          }\n          \n            Your email\n              @if(lastError$?.errors[\"Email\"] != null){\n                is required and needs to be a valid email address\n              }\n            \n            \n          \n          reset\n          Back\n        \n      }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if(!resetingPassword){              Login        @if(authService.userInfoModel$|async;){          logged in                                                         }                               @if (lastError$ != null) {                          {{lastError$?.errors[\"error\"]}}                      }                      Your email              @if(lastError$?.errors[\"Email\"] != null){                is required and needs to be a valid email address              }                                                        Your password              @if(lastError$?.errors.Password != null){                is required              }                                            Login                    Reset Password                  }    @else {              Reset password                                  @if(sentReset){            Reset email sent, try checking your inbox and if you can\\'t find it, check spelling and try again or conntact support          }                      Your email              @if(lastError$?.errors[\"Email\"] != null){                is required and needs to be a valid email address              }                                            reset          Back              }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundPageComponent.html":{"url":"components/NotFoundPageComponent.html","title":"component - NotFoundPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/errors/not-found-page/not-found-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        this is base error page where wrong links are redirected\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./not-found-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./not-found-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n/**\n * this is base error page where wrong links are redirected\n */\n@Component({\n  selector: 'app-not-found',\n  imports: [RouterLink],\n  standalone: true,\n  templateUrl: './not-found-page.component.html',\n  styleUrl: './not-found-page.component.scss'\n})\nexport class NotFoundPageComponent {\n\n}\n\n    \n\n    \n        \n    404\n    Page Not Found\n    \n      Go Home\n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    404    Page Not Found          Go Home        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PasswordResetModel.html":{"url":"interfaces/PasswordResetModel.html","title":"interface - PasswordResetModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PasswordResetModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/auth.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            TokenModel\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginModel {\n  email: string;\n  password: string;\n}\n\nexport interface TokenModel{\n  email:string;\n  token:string;\n}\n\nexport interface PasswordResetModel extends TokenModel{\n  password:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PeoplePageComponent.html":{"url":"components/PeoplePageComponent.html","title":"component - PeoplePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PeoplePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/people-page/people-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        this page puts together person-list and user-list.\nuser-list is displayed only to administrators\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-people-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                PersonsListComponent\n                                UserListComponent\n                            AsyncPipe\n                \n            \n\n            \n                styleUrls\n                ./people-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./people-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                user$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/people-page/people-page.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.authService.userInfoModel$\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/people-page/people-page.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PersonsListComponent } from \"../../components/persons-list/persons-list.component\";\nimport { UserListComponent } from \"../../components/user-list/user-list.component\";\nimport { AuthService } from '../../services/auth.service';\nimport { AsyncPipe } from '@angular/common';\n\n/**\n * this page puts together person-list and user-list. \n * \n * user-list is displayed only to administrators\n */\n@Component({\n  selector: 'app-people-page',\n  standalone:true,\n  templateUrl: './people-page.component.html',\n  styleUrls: ['./people-page.component.scss'],\n  imports: [PersonsListComponent, UserListComponent,AsyncPipe]\n})\nexport class PeoplePageComponent{\n\n  protected user$ = this.authService.userInfoModel$;\n\n  constructor(private authService:AuthService) { }\n}\n\n    \n\n    \n        @let user = user$ | async;\n\n  \n    \n  \n  @if(user?.role == \"Admin\"){\n    \n      \n    \n  }\n\n\n\n    \n\n    \n                \n                    ./people-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let user = user$ | async;          @if(user?.role == \"Admin\"){                }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PeoplePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PersonCreateModel.html":{"url":"interfaces/PersonCreateModel.html","title":"interface - PersonCreateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PersonCreateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/person.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            dateOfBirth\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            emailOfFather\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            emailOfMother\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fullNameOfFather\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fullNameOfMother\n                                        \n                                \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            nickname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phoneNumberOfFather\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phoneNumberOfMother\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateOfBirth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateOfBirth:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emailOfFather\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emailOfFather:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emailOfMother\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emailOfMother:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullNameOfFather\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullNameOfFather:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullNameOfMother\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullNameOfMother:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nickname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nickname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumberOfFather\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumberOfFather:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumberOfMother\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumberOfMother:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         PersonStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PersonStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PersonCreateModel {\n  firstName: string;\n  nickname:string;\n  lastName: string;\n  gender: boolean;\n  dateOfBirth: string; // ISO 8601 date format\n  active: boolean;\n  email?: string | null;\n  emailOfMother?: string | null;\n  emailOfFather?: string | null;\n  phoneNumberOfMother?: string | null;\n  phoneNumberOfFather?: string | null;\n  phoneNumber?: string | null;\n  fullNameOfMother?: string | null;\n  fullNameOfFather?: string | null;\n  status: PersonStatus;\n}\n\nexport interface SmallPersonDetailModel {\n  id: string; // UUID as a string\n  firstName: string;\n  nickname:string;\n  lastName: string;\n  gender: boolean;\n  dateOfBirth?: string | null; // ISO 8601 format\n  age?:number|null;\n  email?: string | null;\n  phoneNumber?: string | null;\n  active: boolean;\n  deleted: boolean;\n}\n\nexport interface PersonDetailModel extends SmallPersonDetailModel {\n  emailOfMother?: string | null;\n  emailOfFather?: string | null;\n  phoneNumberOfMother?: string | null;\n  phoneNumberOfFather?: string | null;\n  fullNameOfMother?: string | null;\n  fullNameOfFather?: string | null;\n  status: PersonStatus;\n}\n\nexport enum PersonStatus {\n  Other = 'other',\n  Child = 'child',\n  Instruktor = 'instruktor',\n  Leader = 'leader',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PersonDetailModel.html":{"url":"interfaces/PersonDetailModel.html","title":"interface - PersonDetailModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PersonDetailModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/person.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            SmallPersonDetailModel\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            emailOfFather\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            emailOfMother\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fullNameOfFather\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fullNameOfMother\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phoneNumberOfFather\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phoneNumberOfMother\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        emailOfFather\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emailOfFather:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emailOfMother\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emailOfMother:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullNameOfFather\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullNameOfFather:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullNameOfMother\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullNameOfMother:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumberOfFather\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumberOfFather:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumberOfMother\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumberOfMother:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         PersonStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PersonStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PersonCreateModel {\n  firstName: string;\n  nickname:string;\n  lastName: string;\n  gender: boolean;\n  dateOfBirth: string; // ISO 8601 date format\n  active: boolean;\n  email?: string | null;\n  emailOfMother?: string | null;\n  emailOfFather?: string | null;\n  phoneNumberOfMother?: string | null;\n  phoneNumberOfFather?: string | null;\n  phoneNumber?: string | null;\n  fullNameOfMother?: string | null;\n  fullNameOfFather?: string | null;\n  status: PersonStatus;\n}\n\nexport interface SmallPersonDetailModel {\n  id: string; // UUID as a string\n  firstName: string;\n  nickname:string;\n  lastName: string;\n  gender: boolean;\n  dateOfBirth?: string | null; // ISO 8601 format\n  age?:number|null;\n  email?: string | null;\n  phoneNumber?: string | null;\n  active: boolean;\n  deleted: boolean;\n}\n\nexport interface PersonDetailModel extends SmallPersonDetailModel {\n  emailOfMother?: string | null;\n  emailOfFather?: string | null;\n  phoneNumberOfMother?: string | null;\n  phoneNumberOfFather?: string | null;\n  fullNameOfMother?: string | null;\n  fullNameOfFather?: string | null;\n  status: PersonStatus;\n}\n\nexport enum PersonStatus {\n  Other = 'other',\n  Child = 'child',\n  Instruktor = 'instruktor',\n  Leader = 'leader',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PersonPipe.html":{"url":"pipes/PersonPipe.html","title":"pipe - PersonPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PersonPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/person.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                this pipe parses persons information\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        person\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(person: PersonDetailModel | SmallPersonDetailModel, format?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/person.pipe.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                person\n                                            \n                                                        PersonDetailModel | SmallPersonDetailModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                format\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { PersonDetailModel, SmallPersonDetailModel } from '../models/person.interface';\n\n\n/**\n * this pipe parses persons information\n */\n@Pipe({\n  name: 'person',\n  standalone:true\n})\nexport class PersonPipe implements PipeTransform {\n\n  transform(person: PersonDetailModel|SmallPersonDetailModel, format?: string): any {\n    switch(format){\n      case \"fullName\":{\n         return `${person.firstName} ${person.nickname!=null?person.nickname:\"\"} ${person.lastName}`;\n      }\n      default :{\n        return person.firstName\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonService.html":{"url":"injectables/PersonService.html","title":"injectable - PersonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PersonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/person.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Private\n                                persons\n                            \n                            \n                                persons$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Create\n                            \n                            \n                                Delete\n                            \n                            \n                                generatePatch\n                            \n                            \n                                Patch\n                            \n                            \n                                updatePersons\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/person.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Create\n                        \n                    \n                \n            \n            \n                \nCreate(model: PersonCreateModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/person.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            PersonCreateModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Delete\n                        \n                    \n                \n            \n            \n                \nDelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/person.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatePatch\n                        \n                    \n                \n            \n            \n                \ngeneratePatch(model: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/person.service.ts:57\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Patch\n                        \n                    \n                \n            \n            \n                \nPatch(id: string, model: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/person.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                model\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePersons\n                        \n                    \n                \n            \n            \n                \nupdatePersons(unfiltred: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/person.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                unfiltred\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"/api/v1/Person\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/person.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        persons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/person.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persons$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.persons.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/person.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { PersonCreateModel, PersonDetailModel } from '../models/person.interface';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonService {\n  protected readonly baseUrl = \"/api/v1/Person\"\n  private persons = new BehaviorSubject([]);\n  persons$ = this.persons.asObservable();\n\n\n  constructor(private httpClient: HttpClient) {\n    this.updatePersons()\n   }\n\n  updatePersons(unfiltred:boolean=true){\n    var request =\n    unfiltred ?\n    this.httpClient.get(`${this.baseUrl}/unfiltred`):\n    this.httpClient.get(`${this.baseUrl}`);\n\n\n    request.subscribe(\n      x =>\n        {\n          this.persons.next(x.map(y =>\n            {\n              if(y.dateOfBirth==undefined) return y;\n              y.age =  new Date().getFullYear() - new Date(y.dateOfBirth).getFullYear();\n              y.dateOfBirth = new Date(y.dateOfBirth).toISOString().split('T')[0]\n              return y;\n            }\n          )\n          )\n        }\n    )\n  }\n\n  Delete(id:string){\n    return this.httpClient.delete(`${this.baseUrl}/${id}`)\n  }\n\n  Create(model:PersonCreateModel):Observable{\n    return this.httpClient.post(this.baseUrl,model);\n  }\n\n  Patch(id:string,model:Partial){\n    const url = `${this.baseUrl}/${id}`\n    var patch = this.generatePatch(model);\n    console.log(patch)\n    return this.httpClient.patch(url,patch)\n  }\n\n  generatePatch(model: Partial): any[] {\n    const patch: any[] = [];\n\n    Object.keys(model).forEach((key) => {\n\n        patch.push({\n          op: 'replace',\n          path: `${key}`,\n          value: (model as any)[key],\n        });\n\n    });\n\n    return patch;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PersonsListComponent.html":{"url":"components/PersonsListComponent.html","title":"component - PersonsListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PersonsListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/persons-list/persons-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component shows list of all created person colormarking the soft-deleted-ones\nother then that it contains modals for creating and modifying the persons.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-persons-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            AsyncPipe\n                            FormsModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./persons-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./persons-list.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeCreateModal\n                            \n                            \n                                activeEditModal\n                            \n                            \n                                CreatingPerson\n                            \n                            \n                                editingPerson$\n                            \n                            \n                                editingPersonBase\n                            \n                            \n                                editingPersonPage\n                            \n                            \n                                editService\n                            \n                            \n                                    Protected\n                                persons$\n                            \n                            \n                                personService\n                            \n                            \n                                router\n                            \n                            \n                                search\n                            \n                            \n                                searchIngredients\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeCreateModal\n                            \n                            \n                                closeEditModal\n                            \n                            \n                                create\n                            \n                            \n                                checkForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                normalizeString\n                            \n                            \n                                onBlur\n                            \n                            \n                                openCreateModal\n                            \n                            \n                                openEditModal\n                            \n                            \n                                refresh\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                            \n                                updateField\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/persons-list/persons-list.component.ts:46\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeCreateModal\n                        \n                    \n                \n            \n            \n                \ncloseCreateModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeEditModal\n                        \n                    \n                \n            \n            \n                \ncloseEditModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkForm\n                        \n                    \n                \n            \n            \n                \ncheckForm(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        normalizeString\n                        \n                    \n                \n            \n            \n                \nnormalizeString(ob: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ob\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBlur\n                        \n                    \n                \n            \n            \n                \nonBlur(field: string, isValid?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isValid\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openCreateModal\n                        \n                    \n                \n            \n            \n                \nopenCreateModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditModal\n                        \n                    \n                \n            \n            \n                \nopenEditModal(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:139\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateField\n                        \n                    \n                \n            \n            \n                \nupdateField(field: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeCreateModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activeEditModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreatingPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PersonCreateModel\n\n                    \n                \n                \n                    \n                        Default value : {gender:true,status:'other'} as PersonCreateModel\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingPerson$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PersonDetailModel\n\n                    \n                \n                \n                    \n                        Default value : {} as PersonDetailModel\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingPersonBase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PersonDetailModel\n\n                    \n                \n                \n                    \n                        Default value : JSON.parse(JSON.stringify(this.editingPerson$))\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingPersonPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EditService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        persons$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.personService.persons$\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        personService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PersonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchIngredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { PersonStatus } from './../../models/person.interface';\nimport { PersonService } from './../../services/person.service';\nimport { Component, inject, isStandalone } from '@angular/core';\nimport { PersonCreateModel, PersonDetailModel } from '../../models/person.interface';\nimport { AsyncPipe, CommonModule } from '@angular/common';\nimport { FormsModule, NgForm, ReactiveFormsModule } from '@angular/forms';\nimport { combineLatest } from 'rxjs';\nimport { EditService } from '../../services/Edit.service';\nimport { Router } from '@angular/router';\n\n\n/**\n * This component shows list of all created person colormarking the soft-deleted-ones\n * \n * other then that it contains modals for creating and modifying the persons.\n */\n@Component({\n  selector: 'app-persons-list',\n  standalone: true,\n  imports: [\n      CommonModule,\n      AsyncPipe,\n      FormsModule,\n    ReactiveFormsModule\n  ],\n  templateUrl: './persons-list.component.html',\n  styleUrl: './persons-list.component.scss'\n})\nexport class PersonsListComponent {\n  personService=inject(PersonService);\n  editService=inject(EditService)\n  router=inject(Router)\n  protected persons$= this.personService.persons$;\n\n  search:string = \"\";\n  searchIngredients:string = \"\";\n\n  editingPersonPage = 1;\n\n  activeEditModal=false\n  activeCreateModal=false\n\n  CreatingPerson:PersonCreateModel = {gender:true,status:'other'} as PersonCreateModel;\n\n  editingPerson$:PersonDetailModel = {} as PersonDetailModel;\n  editingPersonBase:PersonDetailModel  = JSON.parse(JSON.stringify(this.editingPerson$));\n\n  constructor() { \n  }\n\n  ngOnInit() {\n    this.editService.editPersonId$.subscribe(x=>{if(x!=null)this.openEditModal(x!)});\n    if(this.editService.openPersonCreate) this.openCreateModal();\n    this.editService.openPersonCreate = false\n  }\n\n  closeEditModal(){\n    this.editingPerson$= {} as PersonDetailModel\n    this.editingPersonBase = JSON.parse(JSON.stringify(this.editingPerson$))\n    this.activeEditModal=false;\n    this.refresh()\n    this.editService.closePersonEdit()\n    var url = this.editService.popReturnUrl()\n    console.log(url)\n    if(url) this.router.navigateByUrl(url);\n  }\n\n  openEditModal(id:string){\n    this.persons$.subscribe(x => this.editingPerson$ = x.find(y => y.id == id)!)\n    this.editingPersonBase = JSON.parse(JSON.stringify(this.editingPerson$))\n    this.activeEditModal = true\n    this.refresh()\n  }\n\n  closeCreateModal(){\n    this.CreatingPerson = {gender:true,status:'other'} as PersonCreateModel\n    this.activeCreateModal=false;\n    this.refresh()\n  }\n\n  checkForm(form: NgForm) {\n    if (form.invalid) {\n      Object.values(form.controls).forEach(control => {\n        control.markAsTouched();\n      });\n    }\n    else{\n      this.create()\n    }\n  }\n\n  openCreateModal(){\n    this.activeCreateModal = true\n    this.refresh()\n  }\n\n  refresh(){\n    this.personService.updatePersons()\n  }\n\n  update() {\n    const patch:Partial={};\n\n    console.log(this.editingPerson$,this.editingPersonBase)\n\n    Object.keys(this.editingPersonBase).forEach(\n      x =>\n        {\n          if(x!=\"id\")\n          {\n            if((this.editingPersonBase as any)[x] != (this.editingPerson$ as any)[x]){\n              (patch as any)[x] = (this.editingPerson$ as any)[x]\n            }\n          }\n        })\n    this.personService.Patch(this.editingPerson$.id,patch)\n    .subscribe(\n      x => this.refresh()\n    )\n  }\n\n  updateField(field: string) {\n    const patch: Partial = {};\n\n    if ((this.editingPersonBase as any)[field] !== (this.editingPerson$ as any)[field]) {\n      (patch as any)[field] = (this.editingPerson$ as any)[field];\n\n      this.personService.Patch(this.editingPerson$.id, patch)\n        .subscribe(() => this.refresh());\n    }\n  }\n\n  onBlur(field: string, isValid?: boolean) {\n    if (isValid) {\n      this.updateField(field);\n    }\n  }\n\n  remove(){\n    this.personService.Delete(this.editingPerson$.id)\n    .subscribe({\n      next:() =>\n        {\n          this.refresh()\n          this.closeEditModal()\n        },\n      error:x => {\n        alert(x.error.message)\n        this.refresh()\n        this.closeEditModal()\n      }\n      }\n    )\n  }\n\n  create() {\n    this.personService.Create(this.CreatingPerson)\n    .subscribe(\n      {\n        next:x=>{\n          var url = this.editService.popReturnUrl()\n          if(url) this.router.navigateByUrl(url);\n          this.closeCreateModal()\n        }\n      })\n  }\n\n  normalizeString(ob:string){\n    return ob.normalize().toUpperCase().replaceAll(' ', \"\").trim()\n  }\n\n}\n\n    \n\n    \n        \n  People\n  \n    \n      @if(search != \"\"){\n        x\n      }\n    \n      +\n    \n  \n\n  \n    @if (persons$ | async; as persons) {\n    @for (person of persons$ | async; track person) {\n    @if (normalizeString(person.firstName).indexOf(normalizeString(search)) != -1) {\n    \n      \n        {{ person.firstName}} {{ person.nickname }} {{person.lastName}}\n        {{person.active? \"Active\":\"Inactive\"}}        \n      \n      Status: {{person.status}}\n      Age: {{person.age}}\n    \n    }\n    }\n    }\n    @else {\n    Žádná data 😦\n    }\n  \n\n\n  @if (activeEditModal) {\n  \n    \n      \n        Editing\n        x\n      \n      \n        Personal Info\n        Mothers Info\n        Fathers Info\n      \n      \n\n      @switch (editingPersonPage) {\n        @default{\n          \n            First name @if(firstName.invalid && firstName.touched){is invalid}\n            \n          \n\n          \n            nickname\n            \n          \n\n          \n            Last name\n            \n            Invalid name\n          \n\n          \n          \n            Gender\n            \n              Male\n              Female\n            \n          \n\n          \n            Date of Birth\n            \n          \n          \n\n          \n            Email\n            \n            Invalid email\n          \n\n          \n            Phone Number\n            \n            Invalid phone\n          \n\n          \n          \n            Active\n            \n          \n\n          Delete\n\n          \n            Status\n            \n              Other\n              Child\n              Instruktor\n              Leader\n            \n          \n          \n        }\n        @case(2){\n        \n          \n            Mother's Full Name\n            \n          \n\n          \n            Mother's Email\n            \n          \n\n          \n            Mother's Phone Number\n            \n          \n        \n        }\n        @case(3){\n          \n          \n            Father's Full Name\n            \n          \n          \n            Father's Email\n            \n          \n\n          \n            Father's Phone Number\n            \n          \n          \n        }\n      }\n      \n    \n  \n  }\n\n  @if (activeCreateModal) {\n  \n    \n      \n        Creating\n        x\n      \n      \n        \n          First name \n            @if(firstName.invalid && firstName.touched){\n              can't start or end with spaces\n            }\n            @else{\n              *\n            }\n          \n        \n      \n        \n          Nickname\n          \n        \n      \n        \n          Last name \n            @if(lastName.invalid && lastName.touched){\n              can't start or end with spaces\n            }\n            @else{\n              *\n            }\n          \n        \n      \n        \n          \n            Gender \n              @if(gender.invalid && gender.touched){\n                  is required.\n              }\n              @else{\n                *\n              }\n            \n              Male\n              Female\n            \n          \n        \n          \n            Date of birth \n              @if(dateOfBirth.invalid && dateOfBirth.touched){\n                  is required.\n              }\n              @else{\n                *\n              }\n            \n          \n        \n      \n        \n          Status \n            *\n          \n            Other\n            Child\n            Instruktor\n            Leader\n          \n        \n        \n          \n            Create\n          \n        \n      \n    \n  \n  }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  People            @if(search != \"\"){        x      }          +            @if (persons$ | async; as persons) {    @for (person of persons$ | async; track person) {    @if (normalizeString(person.firstName).indexOf(normalizeString(search)) != -1) {                  {{ person.firstName}} {{ person.nickname }} {{person.lastName}}        {{person.active? \"Active\":\"Inactive\"}}                    Status: {{person.status}}      Age: {{person.age}}        }    }    }    @else {    Žádná data 😦    }    @if (activeEditModal) {                    Editing        x                    Personal Info        Mothers Info        Fathers Info                  @switch (editingPersonPage) {        @default{                      First name @if(firstName.invalid && firstName.touched){is invalid}                                            nickname                                            Last name                        Invalid name                                          Gender                          Male              Female                                            Date of Birth                                                      Email                        Invalid email                                Phone Number                        Invalid phone                                          Active                                Delete                      Status                          Other              Child              Instruktor              Leader                                        }        @case(2){                              Mother\\'s Full Name                                            Mother\\'s Email                                            Mother\\'s Phone Number                                      }        @case(3){                                Father\\'s Full Name                                            Father\\'s Email                                            Father\\'s Phone Number                                        }      }              }  @if (activeCreateModal) {                    Creating        x                              First name             @if(firstName.invalid && firstName.touched){              can\\'t start or end with spaces            }            @else{              *            }                                          Nickname                                          Last name             @if(lastName.invalid && lastName.touched){              can\\'t start or end with spaces            }            @else{              *            }                                                      Gender               @if(gender.invalid && gender.touched){                  is required.              }              @else{                *              }                          Male              Female                                                    Date of birth               @if(dateOfBirth.invalid && dateOfBirth.touched){                  is required.              }              @else{                *              }                                                      Status             *                      Other            Child            Instruktor            Leader                                                Create                                }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PersonsListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SmallPersonDetailModel.html":{"url":"interfaces/SmallPersonDetailModel.html","title":"interface - SmallPersonDetailModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SmallPersonDetailModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/person.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            age\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dateOfBirth\n                                        \n                                \n                                \n                                        \n                                            deleted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            nickname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phoneNumber\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateOfBirth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateOfBirth:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nickname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nickname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PersonCreateModel {\n  firstName: string;\n  nickname:string;\n  lastName: string;\n  gender: boolean;\n  dateOfBirth: string; // ISO 8601 date format\n  active: boolean;\n  email?: string | null;\n  emailOfMother?: string | null;\n  emailOfFather?: string | null;\n  phoneNumberOfMother?: string | null;\n  phoneNumberOfFather?: string | null;\n  phoneNumber?: string | null;\n  fullNameOfMother?: string | null;\n  fullNameOfFather?: string | null;\n  status: PersonStatus;\n}\n\nexport interface SmallPersonDetailModel {\n  id: string; // UUID as a string\n  firstName: string;\n  nickname:string;\n  lastName: string;\n  gender: boolean;\n  dateOfBirth?: string | null; // ISO 8601 format\n  age?:number|null;\n  email?: string | null;\n  phoneNumber?: string | null;\n  active: boolean;\n  deleted: boolean;\n}\n\nexport interface PersonDetailModel extends SmallPersonDetailModel {\n  emailOfMother?: string | null;\n  emailOfFather?: string | null;\n  phoneNumberOfMother?: string | null;\n  phoneNumberOfFather?: string | null;\n  fullNameOfMother?: string | null;\n  fullNameOfFather?: string | null;\n  status: PersonStatus;\n}\n\nexport enum PersonStatus {\n  Other = 'other',\n  Child = 'child',\n  Instruktor = 'instruktor',\n  Leader = 'leader',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenModel.html":{"url":"interfaces/TokenModel.html","title":"interface - TokenModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginModel {\n  email: string;\n  password: string;\n}\n\nexport interface TokenModel{\n  email:string;\n  token:string;\n}\n\nexport interface PasswordResetModel extends TokenModel{\n  password:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCreate.html":{"url":"interfaces/UserCreate.html","title":"interface - UserCreate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserCreate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            personId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        personId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        personId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PersonDetailModel } from \"./person.interface\";\n\nexport interface UserDetail {\n  deleted:boolean;\n  emailConfirmed:boolean;\n  role:string;\n  id: string;\n  userName: string;\n  email: string;\n  person: PersonDetailModel;\n}\n\nexport interface UserCreate {\n  name:string;\n  email:string;\n  personId:string;\n  password:string;\n}\n\nexport interface UserPatch {\n  userName: string;\n  email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDetail.html":{"url":"interfaces/UserDetail.html","title":"interface - UserDetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            deleted\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            emailConfirmed\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            person\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            userName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deleted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emailConfirmed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emailConfirmed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        person\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        person:         PersonDetailModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PersonDetailModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PersonDetailModel } from \"./person.interface\";\n\nexport interface UserDetail {\n  deleted:boolean;\n  emailConfirmed:boolean;\n  role:string;\n  id: string;\n  userName: string;\n  email: string;\n  person: PersonDetailModel;\n}\n\nexport interface UserCreate {\n  name:string;\n  email:string;\n  personId:string;\n  password:string;\n}\n\nexport interface UserPatch {\n  userName: string;\n  email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInfoPageComponent.html":{"url":"components/UserInfoPageComponent.html","title":"component - UserInfoPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserInfoPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/user-info-page/user-info-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        this page shows info about logged in user\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-info-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./user-info-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-info-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                editService\n                            \n                            \n                                router\n                            \n                            \n                                user\n                            \n                            \n                                userService\n                            \n                            \n                                userUpdateBase\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                openPersonEdit\n                            \n                            \n                                updateField\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/user-info-page/user-info-page.component.ts:26\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-info-page/user-info-page.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBlur\n                        \n                    \n                \n            \n            \n                \nonBlur(field: string, isValid?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-info-page/user-info-page.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isValid\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPersonEdit\n                        \n                    \n                \n            \n            \n                \nopenPersonEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-info-page/user-info-page.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateField\n                        \n                    \n                \n            \n            \n                \nupdateField(field: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-info-page/user-info-page.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-info-page/user-info-page.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EditService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-info-page/user-info-page.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-info-page/user-info-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {} as UserDetail\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-info-page/user-info-page.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-info-page/user-info-page.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userUpdateBase\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {} as UserDetail\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-info-page/user-info-page.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { UserDetail, UserPatch } from '../../models/user.interface';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EditService } from '../../services/Edit.service';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../services/user.service';\n\n/**\n * this page shows info about logged in user\n */\n@Component({\n  selector: 'app-user-info-page',\n  standalone:true,\n  templateUrl: './user-info-page.component.html',\n  imports:[FormsModule,ReactiveFormsModule],\n  styleUrls: ['./user-info-page.component.scss']\n})\nexport class UserInfoPageComponent implements OnInit {\n  userService = inject(UserService)\n  authService = inject(AuthService);\n  editService = inject(EditService);\n  router = inject(Router);\n\n  user = {} as UserDetail;\n  userUpdateBase = {} as UserDetail;\n\n  constructor() {\n    this.authService.userInfoModel$.subscribe(x=>this.user = x!)\n  }\n\n  ngOnInit() {\n  }\n\n  openPersonEdit(){\n    this.editService.openPersonEditModal(this.user.person.id, this.router.url)\n    this.router.navigate(['/people'])\n  }\n\n    updateField(field: string) {\n      const patch: Partial = {};\n      \n      if ((this.userUpdateBase as any)[field] !== (this.user as any)[field]) {\n        (patch as any)[field] = (this.user as any)[field];\n        this.userService.Patch(this.user.id, patch)\n        .subscribe(() => this.authService.userInfo())\n      }\n    }\n        \n    \n    onBlur(field: string, isValid?: boolean) {\n      console.log(isValid,field)\n      if (isValid) {\n        this.updateField(field);\n      }\n    }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n            User Information\n          \n          \n          \n            \n              User name\n              @if(userName.invalid && userName.touched){\n                is required\n              }\n            \n            \n          \n          \n          \n            \n              User email\n              @if(userMail.invalid && userMail.touched){\n                   must be a valid email address\n              }\n            \n            \n          \n          \n            \n              Identity\n            \n          \n        \n      \n    \n    \n\n    \n                \n                    ./user-info-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        User Information                                                        User name              @if(userName.invalid && userName.touched){                is required              }                                                                                User email              @if(userMail.invalid && userMail.touched){                   must be a valid email address              }                                                                      Identity                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInfoPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserListComponent.html":{"url":"components/UserListComponent.html","title":"component - UserListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user-list/user-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component shows list of all created person colormarking the soft-deleted-ones\nother then that it contains modals for creating and modifying the users.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            AsyncPipe\n                            ReactiveFormsModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./user-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeCreateModal\n                            \n                            \n                                activeEditModal\n                            \n                            \n                                creatingUser\n                            \n                            \n                                editingUser\n                            \n                            \n                                editingUserBase\n                            \n                            \n                                    Private\n                                editService\n                            \n                            \n                                password2\n                            \n                            \n                                passwordMismatch\n                            \n                            \n                                    Protected\n                                persons$\n                            \n                            \n                                    Private\n                                personService\n                            \n                            \n                                roles\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Protected\n                                searchUsers\n                            \n                            \n                                    Protected\n                                users$\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeCreateModal\n                            \n                            \n                                closeEditModal\n                            \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                changeRole\n                            \n                            \n                                checkPasswords\n                            \n                            \n                                normalizeString\n                            \n                            \n                                onBlur\n                            \n                            \n                                openCreateModal\n                            \n                            \n                                openEditModal\n                            \n                            \n                                openPersonEdit\n                            \n                            \n                                refresh\n                            \n                            \n                                refreshPersons\n                            \n                            \n                                unDelete\n                            \n                            \n                                updateField\n                            \n                            \n                                validateAndTryCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/user-list/user-list.component.ts:43\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeCreateModal\n                        \n                    \n                \n            \n            \n                \ncloseCreateModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeEditModal\n                        \n                    \n                \n            \n            \n                \ncloseEditModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeRole\n                        \n                    \n                \n            \n            \n                \nchangeRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswords\n                        \n                    \n                \n            \n            \n                \ncheckPasswords()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        normalizeString\n                        \n                    \n                \n            \n            \n                \nnormalizeString(ob: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ob\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBlur\n                        \n                    \n                \n            \n            \n                \nonBlur(field: string, isValid?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isValid\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openCreateModal\n                        \n                    \n                \n            \n            \n                \nopenCreateModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditModal\n                        \n                    \n                \n            \n            \n                \nopenEditModal(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPersonEdit\n                        \n                    \n                \n            \n            \n                \nopenPersonEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshPersons\n                        \n                    \n                \n            \n            \n                \nrefreshPersons()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unDelete\n                        \n                    \n                \n            \n            \n                \nunDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateField\n                        \n                    \n                \n            \n            \n                \nupdateField(field: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateAndTryCreate\n                        \n                    \n                \n            \n            \n                \nvalidateAndTryCreate(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeCreateModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activeEditModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatingUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserCreate\n\n                    \n                \n                \n                    \n                        Default value : {} as UserCreate\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDetail\n\n                    \n                \n                \n                    \n                        Default value : {} as UserDetail\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingUserBase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDetail\n\n                    \n                \n                \n                    \n                        Default value : {} as UserDetail\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EditService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMismatch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        persons$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.personService.persons$\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        personService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PersonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"\",\"Admin\",\"UserManger\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        searchUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.userService.users$\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { AsyncPipe } from '@angular/common';\nimport { FormsModule, NgForm, ReactiveFormsModule } from '@angular/forms';\nimport { UserCreate, UserDetail, UserPatch } from '../../models/user.interface';\nimport { PersonService } from '../../services/person.service';\nimport { EditService } from '../../services/Edit.service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * This component shows list of all created person colormarking the soft-deleted-ones\n * \n * other then that it contains modals for creating and modifying the users.\n */\n@Component({\n  selector: 'app-user-list',\n  standalone:true,\n  imports:[AsyncPipe,ReactiveFormsModule,FormsModule],\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent{\n  private userService=inject(UserService)\n  private personService=inject(PersonService)\n  private editService=inject(EditService)\n  private router=inject(Router)\n\n  roles = [\"\",\"Admin\",\"UserManger\"]\n\n  protected users$ = this.userService.users$;\n  protected persons$ = this.personService.persons$;\n\n  protected searchUsers = \"\"\n  password2: string = '';\n  passwordMismatch: boolean = false;\n\n  activeCreateModal:boolean = false;\n  activeEditModal:boolean = false;\n\n  creatingUser:UserCreate = {} as UserCreate;\n  editingUser:UserDetail = {} as UserDetail;\n  editingUserBase:UserDetail = {} as UserDetail;\n\n  constructor() {\n  }\n\n  openPersonEdit(){\n    this.editService.openPersonEditModal(this.editingUser.person.id, this.router.url)\n  }\n\n  refresh(){\n    this.userService.updateUsers()\n    this.editingUserBase  = JSON.parse(JSON.stringify(this.editingUser))\n  }\n\n  refreshPersons(){\n    this.personService.updatePersons()\n  }\n\n  openCreateModal(){\n    this.creatingUser.name = this.searchUsers;\n    this.activeCreateModal=true\n  }\n\n  closeCreateModal(){\n    this.activeCreateModal=false\n    this.password2 = \"\"\n    this.creatingUser = {} as UserCreate\n  }\n\n  openEditModal(id:string){\n    this.users$.subscribe(\n      x => {\n        this.editingUser = x.find(y => y.id == id)!;\n      }\n    )\n    this.editingUserBase  = JSON.parse(JSON.stringify(this.editingUser))\n    this.activeEditModal = true\n  }\n\n  closeEditModal(){\n    this.activeEditModal=false\n    this.creatingUser = {} as UserCreate  \n    this.editingUserBase  = JSON.parse(JSON.stringify(this.editingUser))\n  }\n\n  validateAndTryCreate(form: NgForm){\n    if (form.invalid) {\n      Object.values(form.controls).forEach(control => {\n        control.markAsTouched();\n      });\n      this.checkPasswords()\n    }\n    else{\n      this.create()\n    }\n  }\n\n  create(){\n    this.userService.create(this.creatingUser)\n    .subscribe(\n      x => {\n        this.refresh()\n        this.closeCreateModal()\n      }\n    )\n  }\n\n\n  delete(){\n    this.userService.delete(this.editingUser.id)\n    .subscribe(\n      x =>\n      {\n        this.refresh()\n      }\n    )\n  }\n\n  unDelete(){\n    this.userService.unDelete(this.editingUser.id)\n    .subscribe(\n      x =>\n      {\n        this.refresh()\n      }\n    )\n  }\n\n  changeRole(){\n    console.log(this.editingUser)\n    if(this.editingUser.role == \"\") this.userService.removeRole(this.editingUser.id).subscribe(x=>this.refresh());\n    else  this.userService.addRole(this.editingUser.id,this.editingUser.role).subscribe(x=>this.refresh());\n  }\n  \n  updateField(field: string) {\n    const patch: Partial = {};\n    \n    if ((this.editingUserBase as any)[field] !== (this.editingUser as any)[field]) {\n      (patch as any)[field] = (this.editingUser as any)[field];\n      this.userService.Patch(this.editingUser.id, patch)\n      .subscribe(() => this.refresh());\n    }\n  }\n      \n  \n    onBlur(field: string, isValid?: boolean) {\n      if (isValid) {\n        this.updateField(field);\n      }\n    }\n\n  normalizeString(ob:string){\n    return ob.normalize().toUpperCase().replaceAll(' ', \"\").trim()\n  }\n\n  checkPasswords() {\n    this.passwordMismatch = (this.creatingUser.password !== this.password2) || (this.creatingUser.password == \"\");\n    console.log(this.passwordMismatch)\n  }\n}\n\n    \n\n    \n        \n  Users\n  \n    \n      @if(searchUsers != \"\"){\n        x\n      }\n    \n      +\n    \n  \n\n  \n    @if (users$ | async; as users) {\n    @for (user of users$ | async; track user) {\n    @if (normalizeString(user.userName).indexOf(normalizeString(searchUsers)) != -1) {\n    \n      \n        {{ user.userName }}\n        {{ user.emailConfirmed ? \"confirmed\":\"not confirmed\"}}\n      \n      Email: {{ user.email }}\n      Role: {{ user.role ? user.role:\"none\"}}\n    \n    }\n    }\n    }\n    @else {\n    Žádná data 😦\n    }\n  \n\n\n  @if (activeCreateModal) {\n  \n    \n      \n        Creating\n        x\n      \n      \n        \n        \n          \n            User name\n            @if(userName.invalid && userName.touched){\n            is required\n            }\n          \n          \n        \n        \n        \n          \n            User email\n            @if(userMail.invalid && userMail.touched){\n            must be a valid email address\n            }\n          \n          \n        \n        \n          Identity of user\n          \n            none\n            @for(person of persons$ | async;track person){\n            {{person.firstName}}\n            }\n          \n        \n        \n          \n            Create\n          \n        \n      \n\n    \n  \n  }\n\n  @if (activeEditModal) {\n  \n    \n      \n        Editing User\n        x\n      \n      \n        \n        \n          \n            User name\n            @if(userName.invalid && userName.touched){\n            is required\n            }\n            \n              @if(!editingUser.emailConfirmed){\n                not\n              }\n              confirmed\n          \n          \n        \n        \n        \n          \n            User email\n            @if(email.invalid && email.touched){\n            must be a valid email address\n            }\n          \n          \n        \n        \n        \n          \n            User Role\n          \n          \n            @for(role of roles;track role){\n              {{role==\"\"?'None':role}}\n            }\n          \n        \n        \n          \n            Identity\n          \n            @if(editingUser.deleted){\n              Undelete\n            }\n            @else {\n              Delete\n            }\n        \n      \n    \n  \n  }\n\n    \n\n    \n                \n                    ./user-list.component.scss\n                \n                .user{\n    @apply border p-5 shadow my-3 w-56 h-32 flex flex-col rounded-lg ;\n    transition: transform 0.3s ease-in-out;\n  }\n  .user>p{\n    @apply flex-1 break-words text-wrap overflow-hidden\n  }\n  \n  .user button{\n    @apply border pl-3 pr-3 rounded-md\n  }\n  \n  .user:hover{\n    cursor: pointer;\n    box-shadow: 0 0.5rem 1rem rgba(95, 95, 95, 0.5);\n    transform: translateY(-0.5rem);\n  }\n  \n  .inputs>input,.inputs>select{\n    @apply w-full\n  }\n  .inputs>*{\n    @apply my-1\n  }\n  \n  .editing_inputs>*{\n    @apply w-1/2 flex flex-col flex-1 mx-1\n  }\n  .editing_inputs{\n    @apply justify-between content-between\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Users            @if(searchUsers != \"\"){        x      }          +            @if (users$ | async; as users) {    @for (user of users$ | async; track user) {    @if (normalizeString(user.userName).indexOf(normalizeString(searchUsers)) != -1) {                  {{ user.userName }}        {{ user.emailConfirmed ? \"confirmed\":\"not confirmed\"}}            Email: {{ user.email }}      Role: {{ user.role ? user.role:\"none\"}}        }    }    }    @else {    Žádná data 😦    }    @if (activeCreateModal) {                    Creating        x                                                  User name            @if(userName.invalid && userName.touched){            is required            }                                                                  User email            @if(userMail.invalid && userMail.touched){            must be a valid email address            }                                              Identity of user                      none            @for(person of persons$ | async;track person){            {{person.firstName}}            }                                                Create                                }  @if (activeEditModal) {                    Editing User        x                                                  User name            @if(userName.invalid && userName.touched){            is required            }                          @if(!editingUser.emailConfirmed){                not              }              confirmed                                                                  User email            @if(email.invalid && email.touched){            must be a valid email address            }                                                                  User Role                                @for(role of roles;track role){              {{role==\"\"?\\'None\\':role}}            }                                                Identity                      @if(editingUser.deleted){              Undelete            }            @else {              Delete            }                      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPatch.html":{"url":"interfaces/UserPatch.html","title":"interface - UserPatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserPatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            userName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PersonDetailModel } from \"./person.interface\";\n\nexport interface UserDetail {\n  deleted:boolean;\n  emailConfirmed:boolean;\n  role:string;\n  id: string;\n  userName: string;\n  email: string;\n  person: PersonDetailModel;\n}\n\nexport interface UserCreate {\n  name:string;\n  email:string;\n  personId:string;\n  password:string;\n}\n\nexport interface UserPatch {\n  userName: string;\n  email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Private\n                                users\n                            \n                            \n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRole\n                            \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                generatePatch\n                            \n                            \n                                changePassword\n                            \n                            \n                                Patch\n                            \n                            \n                                removeRole\n                            \n                            \n                                unDelete\n                            \n                            \n                                updateUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRole\n                        \n                    \n                \n            \n            \n                \naddRole(id: string, role: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                role\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(model: UserCreate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            UserCreate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatePatch\n                        \n                    \n                \n            \n            \n                \ngeneratePatch(model: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:53\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Patch\n                        \n                    \n                \n            \n            \n                \nPatch(id: string, model: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                model\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRole\n                        \n                    \n                \n            \n            \n                \nremoveRole(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unDelete\n                        \n                    \n                \n            \n            \n                \nunDelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUsers\n                        \n                    \n                \n            \n            \n                \nupdateUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"/api/v1/User\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.users.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { UserCreate, UserDetail, UserPatch } from '../models/user.interface';\nimport { PersonCreateModel } from '../models/person.interface';\nimport { query } from '@angular/animations';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  protected readonly baseUrl = \"/api/v1/User\"\n  private users = new BehaviorSubject([]);\n  users$ = this.users.asObservable();\n\n\n  constructor(private httpClient: HttpClient) {\n    this.updateUsers()\n   }\n\n   updateUsers(){\n    this.httpClient.get(this.baseUrl)\n    .subscribe(x => {this.users.next(x);console.log(x)})\n   }\n\n   create(model:UserCreate){\n    return this.httpClient.post(`${this.baseUrl}/CreateUser`,model)\n   }\n   \n  Patch(id:string,model:Partial){\n    const url = `${this.baseUrl}/${id}`\n    var patch = this.generatePatch(model);\n    console.log(patch)\n    return this.httpClient.patch(url,patch)\n  }\n  \n  delete(id:string){\n    return this.httpClient.delete(`${this.baseUrl}/SoftDelete/${id}`)\n  }\n\n  unDelete(id:string){\n    return this.httpClient.get(`${this.baseUrl}/UndeleteUser/${id}`)\n  }\n  \n  addRole(id:string,role:string){\n    return this.httpClient.get(`${this.baseUrl}/AddRole`,{params:{userId:id,role:role}})\n  }\n  \n  removeRole(id:string){\n    return this.httpClient.get(`${this.baseUrl}/RemoveRole`,{params:{userId:id}})\n  }\n\n  generatePatch(model: Partial): any[] {\n    const patch: any[] = [];\n\n    Object.keys(model).forEach((key) => {\n\n        patch.push({\n          op: 'replace',\n          path: `${key}`,\n          value: (model as any)[key],\n        });\n\n    });\n\n    return patch;\n  }\n\n  changePassword(email:string){\n    return this.httpClient.get(`${this.baseUrl}/ChangePassword/${email}`)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ValidateEmailPageComponent.html":{"url":"components/ValidateEmailPageComponent.html","title":"component - ValidateEmailPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ValidateEmailPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/validate-email-page/validate-email-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        this page validates users email using token provided in route\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-validateEmail-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n            \n                styleUrls\n                ./validate-email-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./validate-email-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                lastError$\n                            \n                            \n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/validate-email-page/validate-email-page.component.ts:19\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/validate-email-page/validate-email-page.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/validate-email-page/validate-email-page.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastError$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/validate-email-page/validate-email-page.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/validate-email-page/validate-email-page.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { ActivatedRoute, RouterLink } from '@angular/router';\nimport { TokenModel } from '../../models/auth.interface';\n\n/**\n * this page validates users email using token provided in route\n */\n@Component({\n  selector: 'app-validateEmail-page',\n  standalone:true,\n  imports:[RouterLink],\n  templateUrl: './validate-email-page.component.html',\n  styleUrls: ['./validate-email-page.component.scss']\n})\nexport class ValidateEmailPageComponent implements OnInit {\n  lastError$:any;\n  private readonly authService = inject(AuthService);\n  route=inject(ActivatedRoute);\n\n\n  constructor() { }\n\n  ngOnInit() {\n    this.route.queryParamMap.subscribe(params => {\n\n      this.authService.validateEmail({email:params.get(\"Email\")!,token:params.get(\"Token\")!}).subscribe(\n      {\n        next:()=>{\n\n        },\n        error:(error: any)=>{\n          this.lastError$=error.error\n          console.log(this.lastError$)\n        }\n      }\n    )\n  });\n    \n  }\n\n}\n\n    \n\n    \n        \n  \n    Confirm email\n    @if (lastError$ != null) {\n      \n        {{lastError$[\"errorMessage\"].errors[0][\"errorMessage\"]}}\n      \n    }\n    @else{\n      \n        Email was confirmed succesfuly, you can go to the login page and login\n            \n    }\n    \n      Go to Login\n    \n  \n\n    \n\n    \n                \n                    ./validate-email-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Confirm email    @if (lastError$ != null) {              {{lastError$[\"errorMessage\"].errors[0][\"errorMessage\"]}}          }    @else{              Email was confirmed succesfuly, you can go to the login page and login                }          Go to Login      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ValidateEmailPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/dish-list/dish-list.component.ts\n            \n            component\n            DishListComponent\n            \n                2 %\n                (1/37)\n            \n        \n        \n            \n                \n                src/app/components/event-list/event-list.component.ts\n            \n            component\n            EventListComponent\n            \n                2 %\n                (1/49)\n            \n        \n        \n            \n                \n                src/app/components/persons-list/persons-list.component.ts\n            \n            component\n            PersonsListComponent\n            \n                3 %\n                (1/27)\n            \n        \n        \n            \n                \n                src/app/components/user-list/user-list.component.ts\n            \n            component\n            UserListComponent\n            \n                3 %\n                (1/33)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/layouts/default/default.component.ts\n            \n            component\n            DefaultComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/models/auth.interface.ts\n            \n            interface\n            LoginModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/auth.interface.ts\n            \n            interface\n            PasswordResetModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/models/auth.interface.ts\n            \n            interface\n            TokenModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/dish.interface.ts\n            \n            interface\n            DishAddIngredientModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/dish.interface.ts\n            \n            interface\n            DishCreate\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/dish.interface.ts\n            \n            interface\n            DishDetail\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/dish.interface.ts\n            \n            interface\n            DishIngredientModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/dish.interface.ts\n            \n            interface\n            IngredientDishDetail\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/event.interface.ts\n            \n            interface\n            EventCreateModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/event.interface.ts\n            \n            interface\n            EventDetailModel\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/models/ingredient.interface.ts\n            \n            interface\n            IngredientCreate\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/ingredient.interface.ts\n            \n            interface\n            IngredientDetail\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/person.interface.ts\n            \n            interface\n            PersonCreateModel\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/models/person.interface.ts\n            \n            interface\n            PersonDetailModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/person.interface.ts\n            \n            interface\n            SmallPersonDetailModel\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/models/user.interface.ts\n            \n            interface\n            UserCreate\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/user.interface.ts\n            \n            interface\n            UserDetail\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/user.interface.ts\n            \n            interface\n            UserPatch\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/change-password-page/change-password-page.component.ts\n            \n            component\n            ChangePasswordPageComponent\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/pages/errors/not-found-page/not-found-page.component.ts\n            \n            component\n            NotFoundPageComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pages/food-page/food-page.component.ts\n            \n            component\n            FoodPageComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pages/home-page/home-page.component.ts\n            \n            component\n            HomePageComponent\n            \n                3 %\n                (1/28)\n            \n        \n        \n            \n                \n                src/app/pages/login-page/login-page.component.ts\n            \n            component\n            LoginPageComponent\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/pages/people-page/people-page.component.ts\n            \n            component\n            PeoplePageComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/pages/user-info-page/user-info-page.component.ts\n            \n            component\n            UserInfoPageComponent\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/app/pages/validate-email-page/validate-email-page.component.ts\n            \n            component\n            ValidateEmailPageComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/pipes/event.pipe.ts\n            \n            pipe\n            EventPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/person.pipe.ts\n            \n            pipe\n            PersonPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/Edit.service.ts\n            \n            injectable\n            EditService\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/dish.service.ts\n            \n            injectable\n            DishService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/event.service.ts\n            \n            injectable\n            EventService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/services/ingredient.service.ts\n            \n            injectable\n            IngredientService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/person.service.ts\n            \n            injectable\n            PersonService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/14)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/cdk : ^18.2.12\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            @tailwindcss/postcss : ^4.0.12\n        \n            flowbite : ^2.5.2\n        \n            postcss : ^8.5.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PersonStatus   (src/.../person.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/person.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        PersonStatus\n                    \n                \n                        \n                            \n                                 Other\n                            \n                        \n                        \n                            \n                                Value : other\n                            \n                        \n                        \n                            \n                                 Child\n                            \n                        \n                        \n                            \n                                Value : child\n                            \n                        \n                        \n                            \n                                 Instruktor\n                            \n                        \n                        \n                            \n                                Value : instruktor\n                            \n                        \n                        \n                            \n                                 Leader\n                            \n                        \n                        \n                            \n                                Value : leader\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSkarabeusUi\nThis project was generated with Angular CLI version 17.3.11.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    18 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideRouter(routes),provideHttpClient()]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
