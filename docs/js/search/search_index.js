var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.646,1,1.295]],["body/components/AppComponent.html",[0,1.044,1,2.233,2,1.86,3,0.249,4,0.16,5,1.48,6,1.48,7,1.48,8,0.187,9,3.812,10,1.317,11,2.786,12,2.786,13,2.376,14,1.756,15,1.566,16,1.973,17,4.876,18,1.973,19,5.083,20,2.723,21,5.083,22,0.214,23,0.362,24,5.718,25,1.321,26,3.519,27,1.248,28,3.812,29,0.991,30,0.022,31,1.566,32,0.243,33,0.396,34,0.936,35,0.936,36,5.083,37,3.812,38,0.919,39,0.786,40,1.395,41,5.083,42,2.88,43,0.187,44,0.833,45,1.48,46,1.973,47,1.973,48,1.48,49,1.989,50,1.48,51,0.527,52,1.48,53,1.395,54,1.395,55,1.175,56,2.537,57,1.395,58,1.48,59,1.48,60,1.48,61,2.368,62,1.48,63,1.395,64,1.395,65,1.48,66,1.395,67,1.48,68,1.395,69,1.317,70,1.395,71,1.48,72,1.395,73,1.48,74,1.395,75,1.395,76,1.395,77,1.86,78,1.395,79,1.395,80,1.395,81,1.395,82,1.48,83,1.48,84,0.015,85,0.015]],["title/guards/AuthGuard.html",[86,3.017,87,3.017]],["body/guards/AuthGuard.html",[3,0.284,4,0.164,8,0.192,13,1.83,22,0.22,25,1.345,27,1.27,29,1.018,30,0.022,32,0.329,35,0.961,38,1.058,39,0.807,40,1.433,43,0.192,44,0.856,51,0.537,69,1.353,77,2.256,84,0.016,85,0.016,87,4.412,88,3.916,89,3.916,90,6.41,91,1.787,92,3.339,93,3.078,94,3.355,95,3.916,96,1.594,97,1.27,98,3.916,99,6.165,100,5.795,101,6.165,102,3.916,103,2.985,104,3.557,105,1.688,106,1.717,107,3.339,108,3.916,109,3.916,110,5.174,111,3.339,112,2.097,113,3.339,114,2.259,115,3.916,116,1.956,117,2.097,118,2.133,119,2.256,120,3.916,121,3.916,122,2.675,123,3.916,124,3.916,125,5.174,126,5.174,127,3.916,128,3.916,129,3.909,130,5.174,131,3.916,132,2.959,133,4.378,134,3.916,135,3.916,136,3.916,137,3.916,138,3.916,139,3.916]],["title/injectables/AuthService.html",[93,1.654,105,1.154]],["body/injectables/AuthService.html",[3,0.16,4,0.137,8,0.16,13,1.53,22,0.184,23,0.326,25,1.191,27,1.67,29,1.566,30,0.023,31,1.411,32,0.364,33,0.34,34,1.479,35,1.479,38,1.03,39,0.675,40,1.198,43,0.16,44,0.716,51,0.548,69,1.582,80,1.677,84,0.014,85,0.014,91,1.825,93,2.141,94,2.859,96,1.628,97,1.297,104,3.048,105,1.494,106,1.436,107,2.791,111,2.791,116,1.635,118,2.83,119,2.285,129,2.473,140,1.635,141,3.273,142,3.048,143,2.917,144,2.859,145,6.242,146,3.461,147,4.879,148,5.723,149,4.58,150,3.273,151,3.048,152,3.273,153,2.642,154,4.58,155,3.577,156,3.273,157,1.888,158,3.273,159,3.273,160,3.273,161,2.83,162,3.273,163,4.58,164,3.273,165,4.58,166,3.273,167,2.453,168,3.273,169,1.888,170,4.58,171,3.273,172,4.58,173,2.473,174,1.635,175,1.53,176,2.791,177,1.753,178,3.273,179,1.635,180,2.236,181,4.58,182,3.273,183,3.273,184,3.273,185,5.284,186,4.58,187,2.642,188,4.58,189,4.58,190,3.273,191,2.791,192,3.273,193,3.273,194,3.273,195,2.791,196,3.273,197,3.273,198,3.273,199,3.273,200,3.273]],["title/components/ChangePasswordPageComponent.html",[0,0.646,53,1.295]],["body/components/ChangePasswordPageComponent.html",[0,0.775,1,0.824,2,1.272,3,0.17,4,0.094,5,0.874,6,0.874,7,0.874,8,0.11,10,0.777,11,2.576,12,2.576,14,0.777,15,1.071,16,0.874,18,1.349,22,0.127,23,0.247,25,0.903,26,2.754,27,1.581,29,1.241,30,0.022,31,1.471,32,0.304,33,0.361,34,1.396,35,1.396,38,0.876,39,0.464,40,0.824,43,0.11,44,0.492,45,0.874,46,1.349,47,1.349,48,0.874,49,1.557,50,0.874,51,0.441,52,0.874,53,1.747,54,2.327,55,2.233,56,2.117,57,0.824,58,0.874,59,0.874,60,0.874,61,1.853,62,0.874,63,0.824,64,0.824,65,0.874,66,0.824,67,0.874,68,0.824,69,1.782,70,0.824,71,0.874,72,0.824,73,0.874,74,0.824,75,0.824,76,0.824,77,1.272,78,0.824,79,0.824,80,0.824,81,1.889,82,0.874,83,0.874,84,0.01,85,0.01,91,1.466,93,2.231,94,2.12,96,0.693,97,0.552,103,2.005,112,1.205,117,1.861,118,2.484,129,1.7,143,2.816,144,1.124,146,3.607,151,2.449,153,2.449,161,1.205,167,1.205,173,1.7,174,1.124,175,1.052,195,1.918,201,1.406,202,6.513,203,6.513,204,1.124,205,2.653,206,2.172,207,2.172,208,2.172,209,2.12,210,1.736,211,3.475,212,3.607,213,4.245,214,3.619,215,2.963,216,4.07,217,3.475,218,2.963,219,1.918,220,2.25,221,1.537,222,2.25,223,3.207,224,1.918,225,1.7,226,2.449,227,2.172,228,1.918,229,1.7,230,1.537,231,1.7,232,1.524,233,1.537,234,1.918,235,1.918,236,1.918,237,1.918,238,1.406,239,1.298,240,1.205,241,2.25,242,1.7,243,1.918,244,1.537,245,2.25,246,1.918,247,2.25,248,2.25,249,1.918,250,1.918,251,1.918,252,1.7,253,2.25,254,2.25,255,2.25,256,2.25,257,2.25,258,2.25,259,1.7,260,1.7,261,1.918,262,2.25,263,2.25,264,2.25,265,1.918,266,3.475,267,2.25,268,1.524,269,3.475,270,3.475,271,1.071,272,2.625,273,2.963,274,3.475,275,2.373,276,3.475,277,3.475,278,3.475,279,3.475,280,2.984,281,3.475,282,1.524,283,2.963,284,3.475,285,3.475,286,3.475]],["title/components/DefaultComponent.html",[0,0.646,57,1.295]],["body/components/DefaultComponent.html",[0,0.934,1,1.13,2,1.609,3,0.215,4,0.13,5,1.199,6,1.199,7,1.199,8,0.151,10,1.067,11,2.711,12,2.711,14,1.518,15,1.354,16,1.706,17,3.748,18,1.706,20,2.354,22,0.174,23,0.313,25,1.142,27,1.547,29,1.33,30,0.022,31,1.718,34,1.447,35,1.256,38,0.947,39,0.636,40,1.13,42,2.333,43,0.151,44,0.675,45,1.199,46,1.706,47,1.706,48,1.199,49,1.819,50,1.199,51,0.456,52,1.199,53,1.13,54,1.13,55,0.951,56,2.378,57,2.041,58,1.199,59,1.199,60,1.199,61,2.165,62,1.199,63,1.13,64,1.13,65,1.199,66,1.13,67,1.987,68,1.13,69,1.067,70,1.13,71,1.199,72,1.13,73,1.199,74,1.13,75,1.873,76,1.13,77,2.507,78,1.13,79,1.13,80,1.13,81,1.13,82,1.199,83,1.199,84,0.013,85,0.013,91,1.768,93,2.392,112,1.654,147,4.754,175,1.443,226,2.953,227,1.93,238,2.748,287,3.088,288,3.321,289,3.002,290,4.396,291,4.396,292,5.118,293,2.244,294,4.213,295,5.576,296,4.396,297,3.088,298,3.088,299,3.088,300,3.088,301,3.088,302,3.748,303,1.654,304,3.088,305,3.088,306,5.118,307,2.633,308,3.088,309,2.333,310,3.002,311,4.396,312,4.396,313,4.396,314,4.396,315,3.748,316,4.396,317,4.396,318,3.321,319,3.002,320,3.321,321,4.396,322,4.396]],["title/interfaces/DishAddIngredientModel.html",[323,0.28,324,1.895]],["body/interfaces/DishAddIngredientModel.html",[3,0.233,4,0.199,8,0.233,22,0.267,23,0.417,30,0.022,32,0.404,33,0.741,43,0.333,51,0.658,84,0.018,85,0.018,282,2.566,323,0.537,324,3.134,325,1.234,326,2.967,327,6.342,328,4.332,329,4.792,330,2.218,331,0.978,332,2.371,333,2.967,334,2.542,335,2.967,336,2.542,337,2.967,338,3.965,339,2.967,340,2.967,341,2.967,342,3.657,343,2.967,344,2.542]],["title/interfaces/DishCreate.html",[323,0.28,334,1.895]],["body/interfaces/DishCreate.html",[3,0.237,4,0.203,8,0.237,22,0.271,23,0.421,30,0.022,32,0.376,33,0.743,43,0.335,51,0.721,84,0.018,85,0.018,323,0.54,324,2.585,325,1.254,326,3.017,330,2.256,331,0.994,332,3.326,333,3.017,334,3.166,335,3.017,336,2.585,337,3.017,338,3.994,339,3.017,340,3.017,341,3.017,342,3.695,343,3.017,344,2.585]],["title/interfaces/DishDetail.html",[323,0.28,330,1.654]],["body/interfaces/DishDetail.html",[3,0.227,4,0.194,8,0.227,22,0.26,23,0.41,30,0.022,32,0.418,33,0.747,43,0.331,51,0.714,84,0.017,85,0.017,323,0.533,324,2.478,325,1.202,326,2.892,330,2.692,331,1.352,332,3.277,333,2.892,334,2.478,335,2.892,336,3.358,337,2.892,338,3.919,339,2.892,340,2.892,341,2.892,342,3.6,343,2.892,344,2.478,345,5.346,346,3.933]],["title/interfaces/DishIngredientModel.html",[323,0.28,344,1.895]],["body/interfaces/DishIngredientModel.html",[3,0.237,4,0.203,8,0.237,22,0.271,23,0.421,30,0.022,32,0.376,33,0.743,43,0.335,51,0.663,84,0.018,85,0.018,323,0.54,324,2.585,325,1.254,326,3.017,328,4.364,329,4.827,330,2.256,331,0.994,332,2.41,333,3.017,334,2.585,335,3.017,336,2.585,337,3.017,338,3.994,339,3.017,340,3.017,341,3.017,342,3.695,343,3.017,344,3.166]],["title/injectables/DishService.html",[105,1.154,347,3.017]],["body/injectables/DishService.html",[3,0.138,4,0.118,8,0.138,13,1.313,22,0.158,23,0.292,25,1.067,27,1.638,29,1.632,30,0.023,31,1.827,32,0.414,33,0.652,34,1.191,35,1.31,38,0.912,39,0.579,43,0.138,44,0.614,51,0.652,84,0.012,85,0.012,91,0.97,96,1.973,97,1.541,103,3.079,104,2.368,105,1.339,106,1.231,114,1.62,116,1.403,118,2,119,1.776,133,4.838,140,1.403,142,2.799,143,2.267,144,2.962,153,2.368,157,1.62,169,1.692,174,1.403,176,2.394,177,2.598,187,1.62,191,4.55,293,2.127,319,4.05,324,2.598,330,1.313,331,1,334,2.598,336,1.504,344,2.598,346,2.803,347,3.5,348,2.808,349,4.105,350,4.105,351,2.566,352,4.105,353,4.105,354,4.105,355,4.105,356,5.336,357,1.755,358,4.105,359,2.808,360,2.808,361,2.808,362,2.808,363,3.101,364,3.059,365,2.808,366,1.755,367,3.101,368,2.808,369,2.962,370,2.808,371,2.808,372,2.808,373,4.105,374,2.808,375,2.808,376,2.808,377,2.808,378,4.105,379,2.808,380,2.808,381,4.105,382,4.105,383,2.122,384,2.808,385,1.62,386,4.105,387,2.808,388,2.589,389,3.28,390,2.566,391,3.5,392,3.5,393,2.122,394,2.808,395,2.808,396,2.808,397,4.105,398,4.851,399,4.851,400,2.808,401,2.808,402,2.808,403,2.808,404,2.808,405,2.808,406,2.394,407,2.808,408,2.122,409,1.755,410,1.755,411,1.755,412,1.755,413,1.755]],["title/injectables/EditService.html",[105,1.154,414,2.042]],["body/injectables/EditService.html",[3,0.133,4,0.114,8,0.133,13,1.267,15,1.464,22,0.152,23,0.285,25,1.039,27,1.729,29,1.678,30,0.022,31,1.955,32,0.404,33,0.728,34,1.607,35,1.607,38,0.764,39,0.558,43,0.133,44,0.592,49,0.884,51,0.608,84,0.012,85,0.012,96,1.804,97,1.437,105,1.304,106,1.188,116,1.354,118,2.731,119,0.992,140,1.354,169,2.563,177,1.451,226,3.378,268,1.188,282,1.754,328,1.851,389,3.69,414,2.307,415,2.71,416,3.999,417,3.999,418,5.855,419,5.855,420,5.855,421,4.752,422,4.052,423,4.752,424,3.999,425,5.246,426,5.246,427,5.246,428,3.999,429,3.999,430,3.999,431,3.999,432,3.999,433,3.999,434,5.246,435,2.71,436,2.71,437,2.71,438,2.71,439,2.71,440,3.999,441,2.71,442,2.71,443,2.71,444,3.999,445,2.71,446,2.311,447,2.71,448,2.71,449,3.999,450,2.71,451,2.047,452,2.71,453,3.999,454,2.71,455,3.409,456,2.71,457,5.855,458,2.71,459,3.999,460,2.71,461,2.71,462,3.999,463,2.71,464,2.71,465,3.999,466,2.71,467,2.71,468,2.71,469,2.71,470,2.71,471,1.354,472,1.694,473,2.71,474,2.71,475,2.71,476,4.752,477,6.216,478,2.71,479,2.71,480,2.71,481,2.71,482,2.71,483,2.71,484,2.71,485,2.71,486,2.71,487,2.71,488,2.71,489,2.71]],["title/interfaces/EventCreateModel.html",[323,0.28,490,2.417]],["body/interfaces/EventCreateModel.html",[3,0.204,4,0.175,8,0.204,22,0.234,23,0.383,30,0.022,32,0.426,33,0.765,38,0.865,43,0.264,51,0.678,84,0.016,85,0.016,268,1.824,319,2.84,323,0.425,325,1.081,330,2.515,331,0.857,332,3.264,490,3.676,491,3.546,492,4.464,493,4.937,494,5.38,495,4.464,496,3.546,497,2.089,498,2.883,499,2.599,500,3.364,501,3.862,502,3.944,503,3.944,504,3.152,505,4.767,506,2.399,507,3.546,508,3.142,509,3.546]],["title/interfaces/EventDetailModel.html",[323,0.28,506,2.042]],["body/interfaces/EventDetailModel.html",[3,0.189,4,0.162,8,0.189,22,0.217,23,0.365,30,0.022,32,0.442,33,0.76,38,0.823,43,0.251,51,0.662,84,0.015,85,0.015,97,1.257,268,2.797,282,2.246,319,4.185,323,0.405,325,1.002,330,2.864,331,1.263,332,3.186,490,2.634,491,3.288,492,4.356,493,4.819,494,3.288,495,4.356,496,3.288,497,2.379,498,3.282,499,2.41,500,3.202,501,3.783,502,3.83,503,3.83,504,3.061,505,4.629,506,2.955,507,5.224,508,4.629,509,3.288,510,5.751]],["title/pipes/EventPipe.html",[511,2.417,512,2.674]],["body/pipes/EventPipe.html",[3,0.226,4,0.193,8,0.226,10,1.591,14,1.591,15,1.419,25,1.197,27,1.13,29,1.197,30,0.022,32,0.293,33,0.649,34,1.13,38,0.923,39,0.949,43,0.226,44,1.007,51,0.649,63,2.29,84,0.017,85,0.017,96,1.419,97,1.13,117,2.467,119,2.29,132,4.338,169,2.701,240,2.467,388,2.367,504,2.868,506,3.779,511,3.922,512,4.338,513,3.479,514,4.605,515,3.479,516,5.742,517,6.257,518,4.605,519,2.879,520,4.896,521,3.479,522,4.605,523,4.605,524,4.605,525,5.742,526,4.605,527,4.605,528,3.926]],["title/injectables/EventService.html",[105,1.154,529,2.674]],["body/injectables/EventService.html",[3,0.138,4,0.118,8,0.138,13,1.313,22,0.158,23,0.292,25,1.067,27,1.654,29,1.665,30,0.023,31,0.865,32,0.42,33,0.747,34,1.191,35,1.31,38,0.858,39,0.579,43,0.138,44,0.614,51,0.665,84,0.012,85,0.012,91,0.97,96,2.005,97,1.572,104,1.62,105,1.339,106,1.231,114,1.62,116,1.403,119,2.344,140,1.403,142,2.799,143,2.267,144,2.962,153,2.799,169,2.2,174,1.403,177,2.598,293,2.6,320,4.48,328,4.05,331,1.222,351,2.566,357,1.755,363,3.101,364,2.836,366,1.755,367,3.101,369,2.666,385,1.62,388,2.445,389,3.041,390,1.755,393,3.101,408,2.122,409,1.755,410,1.755,411,1.755,412,1.755,413,1.755,451,4.48,490,3.313,506,1.62,521,2.122,529,3.101,530,2.808,531,4.105,532,4.105,533,2.566,534,2.566,535,4.105,536,4.105,537,5.336,538,4.105,539,4.105,540,2.808,541,4.105,542,2.808,543,2.122,544,2.808,545,2.122,546,2.808,547,2.808,548,2.122,549,2.808,550,4.105,551,2.808,552,4.105,553,2.808,554,2.808,555,4.105,556,2.808,557,2.808,558,4.105,559,2.808,560,2.394,561,2.394,562,2.808,563,2.808,564,2.808,565,2.808,566,2.808,567,2.808,568,2.122,569,2.808,570,2.122,571,2.394,572,2.808,573,2.808,574,2.122,575,2.808,576,2.808,577,2.808,578,3.5,579,2.808,580,2.808]],["title/components/FoodPageComponent.html",[0,0.646,64,1.295]],["body/components/FoodPageComponent.html",[0,1.069,1,1.465,2,1.921,3,0.257,4,0.168,5,1.553,6,1.553,7,1.553,8,0.196,10,1.382,11,2.802,12,2.802,14,1.813,15,1.617,16,2.038,18,2.038,20,2.811,30,0.022,38,0.844,39,0.825,43,0.196,44,0.875,45,1.553,46,2.038,47,2.038,48,1.553,49,2.028,50,1.553,51,0.545,52,1.553,53,1.465,54,1.465,55,1.233,56,2.572,57,1.465,58,1.553,59,2.414,60,1.553,61,2.414,62,1.553,63,1.465,64,2.276,65,2.274,66,1.465,67,1.553,68,1.465,69,1.382,70,1.465,71,1.553,72,1.465,73,1.553,74,1.465,75,1.465,76,1.465,77,1.921,78,1.465,79,1.465,80,1.465,81,2.144,82,1.553,83,1.553,84,0.016,85,0.016,204,1.999,209,2.622,210,2.622,581,4.002,582,4.002,583,6.217,584,4.002,585,4.002,586,3.412]],["title/components/HomePageComponent.html",[0,0.646,66,1.295]],["body/components/HomePageComponent.html",[0,0.567,1,0.52,2,0.877,3,0.117,4,0.06,5,0.552,6,0.552,7,0.552,8,0.07,10,0.491,11,2.326,12,2.326,14,0.828,15,0.957,16,0.93,18,0.93,20,1.283,22,0.175,23,0.171,25,0.623,26,2.104,27,1.594,29,1.535,30,0.023,31,1.582,32,0.363,33,0.58,34,1.211,35,1.211,38,0.793,39,0.293,40,0.52,43,0.07,44,0.311,45,0.552,46,0.93,47,0.93,48,0.552,49,1.532,50,0.552,51,0.567,52,0.552,53,0.52,54,0.52,55,0.438,56,1.714,57,0.52,58,0.552,59,0.552,60,0.552,61,1.416,62,0.552,63,1.49,64,0.52,65,0.552,66,1.335,67,1.823,68,0.52,69,0.491,70,0.52,71,0.552,72,0.52,73,0.552,74,0.52,75,0.52,76,0.52,77,0.877,78,0.52,79,0.52,80,0.52,81,1.137,82,0.552,83,0.552,84,0.007,85,0.007,94,1.552,96,1.582,97,1.261,113,1.212,118,2.117,119,1.616,122,0.971,167,0.761,169,1.679,175,0.664,204,0.71,209,1.197,210,1.197,218,1.212,219,1.212,221,0.971,224,1.212,230,0.971,231,1.074,232,0.623,233,0.971,244,0.971,268,1.051,280,2.759,282,2.328,303,0.761,320,3.879,331,0.293,332,1.197,346,3.208,383,1.074,388,1.936,414,2.104,422,3.109,446,1.212,493,1.81,495,0.971,504,1.552,505,1.074,506,2.962,508,1.81,512,1.81,521,1.074,528,3.109,529,2.755,568,1.074,587,6.529,588,6.529,589,2.396,590,1.81,591,3.646,592,2.396,593,3.646,594,2.396,595,2.396,596,3.646,597,3.646,598,2.396,599,2.396,600,2.396,601,3.646,602,2.396,603,3.106,604,2.396,605,3.106,606,2.396,607,2.396,608,2.396,609,2.396,610,1.421,611,5.308,612,1.421,613,4.071,614,1.421,615,1.421,616,1.421,617,1.421,618,2.396,619,5.135,620,1.421,621,1.421,622,1.421,623,1.212,624,1.421,625,1.421,626,1.421,627,1.421,628,1.421,629,1.421,630,4.414,631,1.421,632,1.421,633,2.396,634,1.421,635,1.421,636,1.421,637,1.421,638,1.421,639,1.421,640,1.212,641,1.421,642,1.212,643,1.637,644,2.396,645,2.396,646,2.396,647,2.396,648,1.421,649,1.421,650,1.212,651,1.421,652,1.421,653,1.421,654,0.971,655,1.421,656,1.421,657,1.421,658,1.421,659,1.421,660,1.421,661,1.421,662,1.421,663,1.421,664,1.421,665,2.396,666,1.421,667,2.396,668,1.074,669,1.421,670,1.421,671,1.421,672,1.421,673,1.421,674,1.421,675,2.71,676,1.421,677,1.421,678,1.421,679,1.421,680,2.396,681,1.421,682,1.421,683,1.421,684,2.396,685,1.421,686,1.421,687,1.421,688,1.421,689,1.421,690,3.106,691,1.421,692,4.654,693,4.071,694,1.421,695,2.396,696,3.106,697,1.421,698,1.421,699,1.421,700,1.421,701,1.421,702,1.421,703,2.396,704,2.396,705,1.421,706,1.421,707,1.421,708,1.421,709,1.421,710,1.421,711,1.421,712,1.421,713,1.421,714,1.421,715,2.396,716,1.421,717,1.421,718,1.421,719,2.396,720,1.421,721,1.421,722,2.396,723,1.421,724,1.421,725,1.421,726,1.421,727,1.421,728,1.421,729,2.396,730,2.396,731,1.421,732,1.421,733,1.421,734,2.396,735,1.421,736,1.421,737,2.396,738,1.212,739,1.421,740,1.421,741,1.421,742,2.396,743,1.421,744,1.421,745,1.421,746,1.421,747,1.421,748,1.421,749,2.396,750,2.396,751,2.396,752,2.396,753,2.396,754,3.646,755,3.646,756,2.396,757,4.01,758,3.646,759,2.396,760,2.396,761,3.646,762,2.396,763,2.396,764,3.109,765,2.396,766,3.646,767,2.396,768,3.646,769,2.396,770,2.396,771,2.396,772,2.396,773,3.646,774,3.646,775,2.396,776,3.646,777,2.396,778,4.414,779,2.396,780,2.396,781,2.043,782,2.396,783,2.396,784,2.396,785,2.396,786,2.396,787,2.396,788,2.396,789,1.283,790,2.396,791,2.396,792,2.396,793,2.396]],["title/interfaces/IngredientCreate.html",[323,0.28,794,2.417]],["body/interfaces/IngredientCreate.html",[3,0.252,4,0.216,8,0.252,22,0.289,23,0.437,30,0.022,32,0.39,33,0.721,43,0.301,51,0.721,84,0.019,85,0.019,282,2.982,323,0.485,325,1.334,331,1.058,794,4.191,795,4.376,796,5.251,797,3.506]],["title/interfaces/IngredientDetail.html",[323,0.28,797,2.417]],["body/interfaces/IngredientDetail.html",[3,0.247,4,0.212,8,0.247,22,0.284,23,0.432,30,0.022,32,0.414,33,0.737,43,0.298,51,0.718,84,0.018,85,0.018,282,2.964,323,0.48,325,1.311,331,1.393,794,3.444,795,4.3,796,5.226,797,4.146]],["title/interfaces/IngredientDishDetail.html",[323,0.28,336,1.895]],["body/interfaces/IngredientDishDetail.html",[3,0.222,4,0.19,8,0.222,22,0.254,23,0.404,30,0.022,32,0.435,33,0.745,43,0.329,51,0.71,84,0.017,85,0.017,282,3.001,323,0.53,324,2.422,325,1.175,326,2.827,329,4.689,330,2.114,331,1.341,332,2.259,333,2.827,334,2.422,335,2.827,336,3.041,337,2.827,338,3.879,339,2.827,340,2.827,341,2.827,342,3.549,343,2.827,344,2.422,796,4.689,798,6.206,799,6.206]],["title/injectables/IngredientService.html",[105,1.154,800,3.017]],["body/injectables/IngredientService.html",[3,0.166,4,0.142,8,0.166,13,1.584,22,0.191,23,0.334,25,1.22,27,1.643,29,1.585,30,0.023,31,1.044,32,0.412,33,0.655,34,1.321,35,1.426,38,0.934,39,0.698,43,0.166,44,0.741,51,0.633,84,0.014,85,0.014,91,1.171,96,1.944,97,1.497,104,1.955,105,1.53,106,1.486,114,1.955,116,1.693,118,2.219,119,2.126,140,1.693,142,3.105,143,2.516,144,3.152,157,1.955,169,1.935,174,1.693,177,2.883,293,2.36,331,0.967,345,5.38,346,3.205,351,2.933,357,2.119,363,3.545,364,3.047,366,2.119,367,3.545,369,2.902,385,1.955,388,2.515,389,3.112,390,2.933,391,2.89,392,4.001,393,2.561,406,2.89,408,2.561,409,2.119,410,2.119,411,2.119,412,2.119,413,2.119,578,2.89,794,3.676,797,2.315,800,4.001,801,3.389,802,4.692,803,4.692,804,4.692,805,5.81,806,4.692,807,3.389,808,3.389,809,3.389,810,3.389,811,3.389,812,4.692,813,3.389,814,3.389,815,4.692,816,3.389,817,3.389,818,4.692,819,3.389,820,3.389,821,3.389,822,3.389,823,3.389]],["title/interfaces/LoginModel.html",[155,2.212,323,0.28]],["body/interfaces/LoginModel.html",[3,0.25,4,0.214,8,0.25,22,0.287,23,0.436,30,0.022,32,0.389,33,0.731,43,0.321,55,2.091,84,0.018,85,0.018,151,2.946,155,3.824,161,3.276,271,2.091,323,0.518,325,1.327,824,3.858,825,2.946,826,3.858,827,2.946,828,2.946]],["title/components/LoginPageComponent.html",[0,0.646,68,1.295]],["body/components/LoginPageComponent.html",[0,0.751,1,0.785,2,1.225,3,0.164,4,0.09,5,0.833,6,0.833,7,0.833,8,0.105,10,0.741,11,2.552,12,2.552,14,1.156,15,1.781,16,1.3,18,1.3,20,1.793,22,0.121,23,0.238,25,0.87,27,1.543,29,1.07,30,0.023,31,1.434,32,0.136,34,1.419,35,1.419,38,0.859,39,0.442,40,0.785,43,0.105,44,0.469,45,0.833,46,1.3,47,1.3,48,0.833,49,1.517,50,0.833,51,0.347,52,0.833,53,0.785,54,0.785,55,1.83,56,2.076,57,0.785,58,0.833,59,0.833,60,0.833,61,1.806,62,0.833,63,0.785,64,0.785,65,0.833,66,0.785,67,0.833,68,1.703,69,2.137,70,0.785,71,0.833,72,0.785,73,0.833,74,0.785,75,0.785,76,0.785,77,1.225,78,0.785,79,0.785,80,0.785,81,1.507,82,0.833,83,0.833,84,0.01,85,0.01,93,2.175,94,2.324,103,1.931,112,1.149,133,3.812,143,2.938,157,1.237,167,1.793,169,2.205,175,1.002,187,1.237,204,1.071,206,2.574,207,2.574,209,1.672,210,1.672,212,3.515,221,1.465,226,2.375,227,2.093,230,1.465,233,1.465,238,2.574,239,1.237,242,1.62,252,2.529,268,2.663,271,1.937,288,3.111,293,3.022,303,1.149,388,0.884,640,1.829,650,1.829,675,1.237,829,6.372,830,6.372,831,4.118,832,4.118,833,4.118,834,4.118,835,3.348,836,2.908,837,4.653,838,4.118,839,4.653,840,2.145,841,2.145,842,2.145,843,3.348,844,2.145,845,4.653,846,5.586,847,5.347,848,2.145,849,3.348,850,2.145,851,2.529,852,2.145,853,2.145,854,2.145,855,1.62,856,2.145,857,2.145,858,2.145,859,4.653,860,2.145,861,3.348,862,2.145,863,2.145,864,2.145,865,3.348,866,3.348,867,3.348,868,3.348,869,4.653,870,3.652,871,4.653,872,3.515,873,3.515,874,3.348,875,5.779,876,3.348,877,3.348,878,4.653,879,3.348,880,3.348,881,1.829,882,3.348,883,2.854,884,3.348,885,3.348,886,3.348,887,3.348,888,3.348,889,1.829]],["title/components/NotFoundPageComponent.html",[0,0.646,70,1.295]],["body/components/NotFoundPageComponent.html",[0,1.062,1,1.445,2,1.904,3,0.255,4,0.166,5,1.532,6,1.532,7,1.532,8,0.193,10,1.363,11,2.797,12,2.797,14,1.796,15,1.603,16,2.019,18,2.019,20,2.786,30,0.022,38,0.836,39,0.813,40,1.445,43,0.193,44,0.863,45,1.532,46,2.019,47,2.019,48,1.532,49,2.017,50,1.532,51,0.54,52,1.532,53,1.445,54,1.445,55,1.216,56,2.562,57,1.445,58,1.532,59,1.532,60,1.532,61,2.401,62,1.532,63,1.445,64,1.445,65,1.532,66,1.445,67,2.258,68,1.445,69,1.363,70,2.263,71,1.532,72,1.445,73,1.532,74,1.445,75,1.445,76,1.445,77,1.904,78,1.445,79,1.445,80,1.445,81,2.129,82,1.532,83,1.532,84,0.016,85,0.016,204,1.971,209,2.598,210,2.598,238,3.637,275,3.552,890,3.947,891,6.975,892,3.947,893,5.201]],["title/interfaces/PasswordResetModel.html",[151,2.042,323,0.28]],["body/interfaces/PasswordResetModel.html",[3,0.254,4,0.217,8,0.254,22,0.291,23,0.439,30,0.022,32,0.329,33,0.707,43,0.323,55,2.1,84,0.019,85,0.019,151,3.556,155,3.233,161,3.527,271,1.594,323,0.52,325,1.344,824,3.908,825,2.984,826,3.908,827,3.556,828,2.984]],["title/components/PeoplePageComponent.html",[0,0.646,72,1.295]],["body/components/PeoplePageComponent.html",[0,0.997,1,1.277,2,1.752,3,0.235,4,0.146,5,1.354,6,1.354,7,1.354,8,0.171,10,1.205,11,2.756,12,2.756,14,1.205,15,1.075,16,1.858,18,1.858,22,0.196,23,0.341,27,1.175,30,0.022,32,0.222,34,0.856,35,0.856,38,0.991,39,0.719,43,0.171,44,0.763,45,1.354,46,1.858,47,1.858,48,1.354,49,1.918,50,1.354,51,0.567,52,1.354,53,1.277,54,1.277,55,1.075,56,2.472,57,1.277,58,1.354,59,1.354,60,1.354,61,2.283,62,1.354,63,1.277,64,1.277,65,1.354,66,1.277,67,1.354,68,1.277,69,1.205,70,1.277,71,1.354,72,2.153,73,2.578,74,2.153,75,1.277,76,1.277,77,2.466,78,2,79,1.277,80,1.277,81,2,82,1.354,83,1.354,84,0.014,85,0.014,91,1.205,92,2.975,93,2.749,96,1.075,97,0.856,112,1.869,201,2.181,204,1.743,205,2.181,208,2.992,209,2.73,210,2.391,229,3.617,240,1.869,289,3.27,293,2.397,302,4.082,303,1.869,310,3.27,385,2.013,586,4.082,894,5.465,895,5.465,896,3.489,897,2.975,898,3.489,899,2.975,900,3.489,901,3.489,902,4.787,903,4.787]],["title/interfaces/PersonCreateModel.html",[323,0.28,471,1.768]],["body/interfaces/PersonCreateModel.html",[3,0.151,4,0.13,8,0.151,22,0.174,23,0.313,30,0.023,32,0.442,33,0.768,43,0.273,84,0.013,85,0.013,97,1.714,232,2.874,268,3.201,271,1.816,323,0.404,325,0.803,331,0.636,471,2.196,497,1.199,498,2.354,500,1.93,501,2.536,502,2.748,503,2.748,504,1.542,827,1.781,904,2.109,905,4.025,906,4.452,907,4.452,908,4.452,909,4.452,910,4.452,911,4.452,912,4.025,913,4.452,914,3.867,915,4.452,916,4.452,917,4.452,918,4.025,919,3.684,920,3.321,921,2.333,922,2.109,923,2.333,924,2.748,925,2.748,926,2.748]],["title/interfaces/PersonDetailModel.html",[323,0.28,497,1.374]],["body/interfaces/PersonDetailModel.html",[3,0.168,4,0.144,8,0.168,22,0.193,23,0.337,30,0.023,32,0.413,33,0.765,43,0.286,84,0.014,85,0.014,97,1.699,232,2.688,268,3.209,271,1.459,323,0.428,325,0.893,331,0.708,471,1.716,497,1.839,498,2.904,500,2.147,501,2.733,502,2.961,503,2.961,504,1.716,827,2.733,904,2.346,905,3.235,906,3.579,907,4.631,908,4.631,909,3.579,910,4.631,911,4.631,912,3.235,913,3.579,915,3.579,916,4.631,917,4.631,918,4.187,919,3.832,920,3.579,921,2.595,922,2.346,923,2.595,924,2.961,925,2.961,926,2.961]],["title/pipes/PersonPipe.html",[511,2.417,590,2.674]],["body/pipes/PersonPipe.html",[3,0.23,4,0.197,8,0.23,10,1.624,14,1.624,15,1.449,25,1.222,27,1.154,29,1.222,30,0.022,32,0.299,33,0.655,34,1.154,38,0.935,39,0.969,43,0.23,44,1.028,51,0.655,84,0.018,85,0.018,96,1.449,97,1.154,117,2.518,119,2.129,132,3.552,240,2.518,472,2.939,497,2.452,498,3.383,501,3.644,511,3.973,513,3.552,515,3.552,519,2.939,520,4.959,590,4.395,789,3.383,927,4.702,928,5.817,929,4.702,930,4.702,931,4.702,932,4.702,933,4.395,934,4.702,935,4.702]],["title/injectables/PersonService.html",[105,1.154,936,2.417]],["body/injectables/PersonService.html",[3,0.158,4,0.135,8,0.158,13,1.508,15,0.994,22,0.181,23,0.323,25,1.178,27,1.625,29,1.557,30,0.023,31,0.994,32,0.415,33,0.622,34,1.396,35,1.471,38,0.914,39,0.665,43,0.158,44,0.705,49,1.479,51,0.645,75,2.274,84,0.014,85,0.014,91,1.114,96,1.966,97,1.525,104,2.616,105,1.479,106,1.415,114,1.861,116,1.612,118,2.161,119,2.274,140,1.612,142,3.024,143,2.45,144,3.103,153,3.456,169,2.47,174,1.612,177,2.808,232,1.988,293,2.299,331,0.934,351,2.834,357,2.017,364,2.993,366,2.017,369,2.993,385,1.861,388,1.869,389,1.728,390,2.017,409,2.017,410,2.017,411,2.017,412,2.017,413,2.017,455,2.751,471,2.619,472,2.017,497,1.253,533,2.834,534,2.834,543,2.438,545,2.438,548,2.438,568,3.426,570,2.438,571,2.751,574,2.438,675,1.861,936,3.097,937,3.226,938,4.534,939,4.534,940,3.226,941,3.226,942,3.866,943,3.226,944,3.226,945,3.226,946,3.226,947,4.534,948,4.534,949,3.226,950,3.226,951,4.534,952,3.226,953,3.226,954,3.226,955,3.226,956,3.226,957,3.226,958,3.226,959,3.226,960,3.226,961,3.226,962,3.226,963,3.226,964,3.226,965,3.226,966,2.751,967,2.751,968,2.751,969,2.751]],["title/components/PersonsListComponent.html",[0,0.646,74,1.295]],["body/components/PersonsListComponent.html",[0,0.571,1,0.526,2,0.885,3,0.243,4,0.06,5,0.558,6,0.558,7,0.558,8,0.07,10,0.496,11,2.332,12,2.332,14,0.835,15,1.131,16,0.939,18,0.939,20,1.295,22,0.081,23,0.172,25,0.628,26,2.118,27,1.606,29,1.489,30,0.023,31,1.729,32,0.349,33,0.582,34,1.431,35,1.377,38,0.829,39,0.296,40,0.526,43,0.07,44,0.314,45,0.558,46,0.939,47,0.939,48,0.558,49,1.448,50,0.558,51,0.666,52,0.558,53,0.526,54,0.526,55,0.443,56,1.723,57,0.526,58,0.558,59,0.558,60,0.558,61,1.425,62,0.558,63,0.526,64,0.526,65,0.558,66,0.526,67,0.558,68,0.526,69,0.496,70,0.526,71,0.558,72,0.526,73,1.215,74,1.344,75,2.199,76,0.526,77,0.885,78,0.526,79,0.526,80,0.526,81,0.526,82,0.558,83,0.558,84,0.007,85,0.007,91,1.081,94,1.564,96,1.262,97,1.006,103,0.829,106,0.63,119,0.526,122,2.508,157,1.395,167,0.77,175,0.672,187,2.118,206,1.957,207,1.957,223,2.774,225,1.085,226,1.806,232,1.373,239,0.829,244,0.981,259,1.085,260,1.085,271,1.527,280,2.295,282,2.07,288,2.365,289,2.138,293,1.373,294,2.774,303,0.77,309,3.745,310,2.508,331,0.498,364,0.718,369,1.834,388,0.997,389,1.295,414,1.806,471,2.046,472,1.511,492,2.508,495,2.508,497,1.723,504,1.834,519,0.898,533,2.775,534,1.511,643,0.981,654,0.981,668,1.085,675,2.859,757,1.827,789,1.966,870,2.508,881,2.061,889,2.061,897,5.606,905,1.651,912,2.508,914,2.774,918,2.508,919,0.898,924,2.295,925,2.295,926,2.295,933,1.827,936,2.138,970,6.576,971,1.225,972,2.061,973,2.061,974,2.061,975,3.13,976,3.13,977,2.418,978,2.418,979,2.418,980,4.096,981,2.418,982,2.418,983,3.13,984,3.13,985,2.418,986,2.061,987,1.827,988,3.13,989,2.061,990,3.671,991,3.671,992,1.827,993,2.418,994,1.437,995,1.437,996,1.437,997,2.418,998,1.437,999,1.437,1000,1.225,1001,1.437,1002,1.225,1003,1.827,1004,2.774,1005,1.437,1006,1.827,1007,1.437,1008,1.225,1009,1.437,1010,1.437,1011,1.437,1012,1.225,1013,1.827,1014,1.225,1015,1.437,1016,1.225,1017,3.13,1018,1.225,1019,1.437,1020,3.671,1021,1.437,1022,1.437,1023,2.061,1024,1.225,1025,1.225,1026,1.225,1027,1.225,1028,1.225,1029,1.225,1030,1.225,1031,1.437,1032,1.437,1033,1.225,1034,1.225,1035,1.437,1036,1.437,1037,1.437,1038,1.437,1039,1.437,1040,1.437,1041,1.437,1042,1.437,1043,1.437,1044,1.437,1045,1.437,1046,4.438,1047,3.13,1048,1.225,1049,1.437,1050,2.418,1051,1.437,1052,2.418,1053,2.418,1054,1.225,1055,1.437,1056,1.225,1057,1.225,1058,1.437,1059,1.225,1060,1.225,1061,1.225,1062,1.437,1063,1.225,1064,1.437,1065,1.437,1066,1.437,1067,1.437,1068,1.437,1069,3.671,1070,1.437,1071,2.774,1072,1.437,1073,1.085,1074,1.437,1075,2.418,1076,1.437,1077,1.437,1078,1.437,1079,1.437,1080,1.225,1081,1.225,1082,1.225,1083,1.225,1084,2.418,1085,2.418,1086,2.418,1087,2.061,1088,2.061,1089,2.418,1090,2.418,1091,2.418,1092,2.418,1093,4.956,1094,3.671,1095,3.671,1096,3.671,1097,3.671,1098,4.956,1099,2.418,1100,3.13,1101,3.13,1102,2.418,1103,3.13,1104,2.061,1105,2.418,1106,2.418,1107,3.671,1108,2.418,1109,2.418,1110,2.418,1111,2.418,1112,2.418,1113,2.418,1114,3.13,1115,3.13]],["title/interfaces/SmallPersonDetailModel.html",[323,0.28,498,1.895]],["body/interfaces/SmallPersonDetailModel.html",[3,0.164,4,0.141,8,0.164,22,0.189,23,0.332,30,0.022,32,0.435,33,0.766,43,0.284,84,0.014,85,0.014,97,1.615,232,2.997,268,3.182,271,1.873,282,2.043,323,0.423,325,0.872,331,1.192,471,1.676,497,1.303,498,2.868,500,2.097,501,2.688,502,2.913,503,2.913,504,1.676,827,1.936,904,2.292,905,4.151,906,4.592,907,3.521,908,3.521,909,4.592,910,3.521,911,3.521,912,4.151,913,4.592,914,4.045,915,4.592,916,3.521,917,3.521,918,3.183,919,3.347,920,3.521,921,2.535,922,3.951,923,2.535,924,2.913,925,2.913,926,2.913,1116,5.354]],["title/interfaces/TokenModel.html",[161,1.895,323,0.28]],["body/interfaces/TokenModel.html",[3,0.25,4,0.214,8,0.25,22,0.287,23,0.436,30,0.022,32,0.389,33,0.731,43,0.321,55,1.574,84,0.018,85,0.018,151,2.946,155,3.192,161,3.507,271,2.091,323,0.518,325,1.327,824,3.858,825,2.946,826,3.858,827,2.946,828,2.946,1117,6.549]],["title/interfaces/UserCreate.html",[323,0.28,1118,2.042]],["body/interfaces/UserCreate.html",[3,0.232,4,0.199,8,0.232,22,0.266,23,0.416,30,0.022,32,0.421,33,0.756,38,0.761,43,0.311,51,0.657,55,1.952,84,0.018,85,0.018,179,2.365,271,2.094,323,0.501,325,1.231,331,0.976,451,4.787,497,2.268,499,2.96,789,2.536,825,2.732,828,2.732,1118,3.37,1119,3.577,1120,3.577,1121,3.577,1122,3.577,1123,4.414,1124,3.577,1125,3.577,1126,2.536]],["title/interfaces/UserDetail.html",[179,1.768,323,0.28]],["body/interfaces/UserDetail.html",[3,0.221,4,0.189,8,0.221,22,0.254,23,0.404,30,0.022,32,0.442,33,0.751,38,0.725,43,0.304,84,0.017,85,0.017,179,2.832,232,2.852,271,2.064,323,0.49,325,1.173,331,1.34,497,2.525,499,2.821,789,3.483,825,2.603,828,2.603,922,4.234,1118,2.603,1119,3.409,1120,3.409,1121,3.409,1122,3.409,1123,5.062,1124,3.409,1125,3.409,1126,2.417,1127,6.199,1128,4.684]],["title/components/UserInfoPageComponent.html",[0,0.646,76,1.295]],["body/components/UserInfoPageComponent.html",[0,0.824,1,0.911,2,1.374,3,0.352,4,0.105,5,0.966,6,0.966,7,0.966,8,0.122,10,0.86,11,2.622,12,2.622,14,0.86,15,0.767,16,0.966,18,1.457,22,0.14,23,0.267,25,0.975,26,2.902,27,1.576,29,1.307,30,0.022,31,1.55,32,0.239,33,0.589,34,1.393,35,1.393,38,0.946,39,0.513,40,0.911,43,0.122,44,0.544,45,0.966,46,1.457,47,1.457,48,0.966,49,1.641,50,0.966,51,0.589,52,0.966,53,0.911,54,0.911,55,0.767,56,2.203,57,0.911,58,0.966,59,0.966,60,0.966,61,1.953,62,0.966,63,0.911,64,0.911,65,0.966,66,0.911,67,0.966,68,0.911,69,0.86,70,0.911,71,0.966,72,0.911,73,0.966,74,0.911,75,0.911,76,1.841,77,2.504,78,0.911,79,0.911,80,0.911,81,1.654,82,0.966,83,0.966,84,0.011,85,0.011,91,1.56,93,2.351,94,2.512,96,1.156,97,0.921,112,1.333,117,2.01,167,2.01,175,1.163,179,2.696,180,1.7,187,1.436,201,1.556,204,1.243,205,2.824,206,2.346,207,2.346,208,2.346,209,2.257,210,1.875,221,1.7,227,2.346,228,2.122,231,1.881,232,1.981,233,2.563,235,2.122,236,2.122,239,1.436,240,1.333,271,1.55,307,2.122,364,1.243,369,2.257,388,1.026,414,2.902,519,1.556,623,2.122,642,2.122,643,2.563,654,1.7,675,1.436,836,3.144,851,2.835,855,1.881,870,2.563,872,2.835,873,2.835,987,2.835,992,2.835,1003,2.835,1004,3.8,1006,2.835,1013,2.835,1071,3.8,1073,1.881,1126,1.333,1129,6.506,1130,6.506,1131,4.518,1132,4.289,1133,2.489,1134,2.489,1135,2.489,1136,2.489,1137,2.489,1138,2.122,1139,2.489,1140,2.489,1141,3.753,1142,2.489,1143,2.489,1144,3.753,1145,3.2,1146,3.2,1147,3.2,1148,3.2,1149,3.2]],["title/components/UserListComponent.html",[0,0.646,78,1.295]],["body/components/UserListComponent.html",[0,0.55,1,0.499,2,0.847,3,0.113,4,0.057,5,0.53,6,0.53,7,0.53,8,0.067,10,0.471,11,2.3,12,2.3,14,0.471,15,0.713,16,0.53,18,0.899,22,0.077,23,0.165,25,0.602,27,1.637,29,1.54,30,0.023,31,1.799,32,0.365,33,0.585,34,1.433,35,1.433,38,0.812,39,0.281,40,0.499,43,0.067,44,0.298,45,0.53,46,0.899,47,0.899,48,0.53,49,1.158,50,0.53,51,0.558,52,0.53,53,0.499,54,0.499,55,0.42,56,1.678,57,0.499,58,0.53,59,0.53,60,0.53,61,1.379,62,0.53,63,0.499,64,0.499,65,0.53,66,0.499,67,0.53,68,0.499,69,0.471,70,0.499,71,0.53,72,0.499,73,0.53,74,0.499,75,1.582,76,0.499,77,2.41,78,1.3,79,0.499,80,0.499,81,0.499,82,0.53,83,0.53,84,0.007,85,0.007,91,1.041,94,1.506,96,1.225,97,0.976,118,2.274,119,0.499,144,0.682,157,1.336,167,0.731,174,0.682,175,0.638,179,2.301,180,0.932,187,2.049,201,0.853,205,0.853,206,1.447,207,1.447,208,1.447,214,2.57,216,3.028,223,2.683,225,1.031,226,2.493,232,2.02,239,0.787,240,0.731,244,0.932,259,1.031,260,1.031,261,1.164,265,1.164,271,1.493,272,1.749,280,2.701,289,1.581,293,2.215,294,2.683,303,0.731,309,2.683,310,2.426,315,1.974,318,1.031,331,0.477,364,0.682,369,1.506,388,0.563,414,1.739,515,1.749,519,0.853,533,2.701,534,2.701,643,0.932,654,0.932,668,1.031,675,3.015,692,1.164,757,1.749,764,2.57,789,1.24,836,1.885,851,1.031,855,1.031,870,2.426,872,2.683,873,2.683,899,5.707,933,1.749,936,2.059,971,1.164,972,1.974,973,1.974,974,2.57,975,3.028,976,3.028,983,3.028,984,3.028,986,1.974,987,1.749,988,3.028,989,1.974,992,1.749,1000,1.164,1002,1.164,1003,1.749,1004,2.683,1006,1.749,1008,1.164,1012,1.164,1013,1.749,1014,1.164,1016,1.164,1018,1.164,1023,1.974,1024,1.164,1025,1.164,1026,1.164,1027,1.164,1028,1.164,1029,1.164,1030,1.164,1033,1.164,1034,1.164,1048,1.164,1054,1.164,1056,1.164,1057,1.164,1059,1.164,1060,1.164,1061,1.164,1063,1.164,1071,2.683,1073,1.031,1080,1.164,1081,1.164,1082,1.164,1083,1.164,1087,1.974,1088,1.974,1101,1.164,1104,1.974,1118,2.493,1126,0.731,1128,2.683,1132,3.028,1138,1.164,1145,3.028,1146,3.028,1147,1.974,1148,1.974,1149,3.028,1150,6.694,1151,2.315,1152,2.315,1153,2.315,1154,3.015,1155,3.015,1156,3.015,1157,4.588,1158,3.552,1159,3.552,1160,3.684,1161,2.315,1162,2.315,1163,1.365,1164,1.365,1165,1.365,1166,1.365,1167,1.365,1168,1.365,1169,1.365,1170,1.365,1171,1.365,1172,1.365,1173,1.365,1174,1.365,1175,1.365,1176,2.315,1177,1.365,1178,1.365,1179,1.365,1180,1.365,1181,1.365,1182,1.365,1183,2.315,1184,1.365,1185,2.315,1186,1.365,1187,1.365,1188,1.365,1189,1.365,1190,1.365,1191,1.365,1192,1.365,1193,1.365,1194,1.365,1195,1.365,1196,3.552,1197,3.015,1198,1.365,1199,1.365,1200,1.365,1201,2.315,1202,2.315,1203,1.365,1204,3.015,1205,1.365,1206,1.365,1207,1.365,1208,1.365,1209,1.365,1210,1.365,1211,1.365,1212,1.365,1213,2.315,1214,1.365,1215,2.315,1216,2.315,1217,2.315,1218,2.315,1219,2.315,1220,2.315,1221,2.315,1222,2.315,1223,2.315,1224,2.315,1225,2.315,1226,1.365,1227,2.315,1228,4.606,1229,2.315,1230,1.365,1231,1.365,1232,2.315,1233,3.015,1234,1.365,1235,1.365,1236,1.365,1237,4.321,1238,2.315,1239,2.315,1240,1.365,1241,1.365,1242,1.365,1243,1.365,1244,1.365,1245,1.365,1246,1.365,1247,1.365,1248,1.365,1249,1.365,1250,1.365,1251,1.365,1252,1.365,1253,1.365,1254,1.365,1255,1.365,1256,1.365,1257,1.365,1258,1.365,1259,2.315,1260,1.365,1261,1.365,1262,2.315,1263,1.365,1264,1.365,1265,1.365,1266,1.365,1267,2.315,1268,1.365,1269,1.365,1270,1.365,1271,2.315,1272,1.365,1273,1.365]],["title/interfaces/UserPatch.html",[323,0.28,1126,1.895]],["body/interfaces/UserPatch.html",[3,0.24,4,0.206,8,0.24,22,0.275,23,0.425,30,0.022,32,0.379,33,0.745,38,0.787,43,0.315,84,0.018,85,0.018,179,2.446,271,2.114,323,0.508,325,1.273,331,1.009,497,2.315,499,3.061,789,2.622,825,2.825,828,2.825,1118,2.825,1119,3.699,1120,3.699,1121,3.699,1122,3.699,1123,5.183,1124,3.699,1125,3.699,1126,3.194]],["title/injectables/UserService.html",[105,1.154,836,2.212]],["body/injectables/UserService.html",[3,0.147,4,0.126,8,0.147,13,1.4,22,0.168,23,0.306,25,1.118,27,1.673,29,1.691,30,0.022,31,0.923,32,0.425,33,0.717,34,1.235,35,1.35,38,0.975,39,0.617,43,0.147,44,0.655,49,0.977,51,0.675,84,0.013,85,0.013,91,1.035,96,2.035,97,1.597,105,1.403,106,1.314,114,1.728,116,1.497,118,2.075,119,2.339,140,1.497,142,2.903,143,2.352,144,3.029,146,3.25,153,3.36,169,1.774,174,1.497,177,2.696,179,1.497,180,2.046,271,0.923,293,2.207,331,1.2,351,2.689,357,1.873,364,2.91,366,1.873,369,2.91,385,1.728,388,1.774,389,1.605,390,1.873,409,1.873,410,1.873,411,1.873,412,1.873,413,1.873,471,1.497,472,1.873,533,2.689,534,2.689,543,2.264,545,2.264,548,2.264,560,2.554,561,2.554,570,2.264,574,2.264,836,2.689,942,3.668,966,2.554,967,2.554,968,2.554,969,2.554,1118,2.903,1126,1.605,1128,3.25,1157,5.17,1160,3.668,1274,2.996,1275,4.302,1276,4.302,1277,5.5,1278,4.302,1279,2.996,1280,2.996,1281,2.996,1282,2.996,1283,2.996,1284,2.996,1285,2.996,1286,2.996,1287,2.996,1288,2.996,1289,2.996,1290,2.996,1291,2.996,1292,4.302,1293,2.996,1294,2.996,1295,4.302,1296,2.996,1297,2.554,1298,2.996,1299,2.996,1300,2.996,1301,2.996,1302,2.996,1303,2.996,1304,2.996,1305,2.996,1306,2.996,1307,2.996,1308,2.996,1309,2.996,1310,2.996]],["title/components/ValidateEmailPageComponent.html",[0,0.646,79,1.295]],["body/components/ValidateEmailPageComponent.html",[0,0.935,1,1.132,2,1.611,3,0.216,4,0.13,5,1.201,6,1.201,7,1.201,8,0.152,10,1.068,11,2.712,12,2.712,14,1.068,15,0.953,16,1.201,18,1.708,22,0.174,23,0.313,25,1.144,26,3.219,27,1.447,29,0.804,30,0.022,31,0.953,32,0.197,34,1.08,35,1.08,38,0.897,39,0.637,40,1.132,43,0.152,44,0.676,45,1.201,46,1.708,47,1.708,48,1.201,49,1.82,50,1.201,51,0.457,52,1.201,53,1.132,54,1.132,55,0.953,56,2.379,57,1.132,58,1.201,59,1.201,60,1.201,61,2.166,62,1.201,63,1.132,64,1.132,65,1.201,66,1.132,67,1.201,68,1.132,69,2.178,70,1.132,71,1.201,72,1.132,73,1.201,74,1.132,75,1.132,76,1.132,77,1.611,78,1.132,79,2.042,80,1.875,81,2.158,82,1.201,83,1.201,84,0.013,85,0.013,91,1.769,93,2.608,103,1.784,112,1.656,117,2.357,118,2.112,143,2.394,161,1.656,173,2.337,175,1.446,201,1.933,204,1.545,205,3.202,208,2.751,209,2.559,210,2.198,212,4.216,215,3.752,227,2.751,229,3.325,230,2.112,234,2.637,237,2.637,238,2.751,240,1.656,242,2.337,243,2.637,246,2.637,249,2.637,250,2.637,251,2.637,252,2.337,268,1.93,271,2.196,272,3.325,273,3.752,275,3.811,283,3.752,1311,6.128,1312,6.128,1313,5.896,1314,3.093,1315,3.093,1316,3.093,1317,4.4]],["title/dependencies.html",[1318,2.231,1319,3.63]],["body/dependencies.html",[30,0.022,39,1.042,40,1.85,42,3.82,84,0.018,85,0.018,106,2.217,239,2.917,303,2.708,1297,4.311,1319,4.311,1320,7.169,1321,5.056,1322,5.056,1323,5.056,1324,6.08,1325,6.08,1326,5.056,1327,5.056,1328,5.056,1329,5.056,1330,5.056,1331,5.056,1332,5.056,1333,5.056,1334,5.056,1335,5.056,1336,5.056]],["title/miscellaneous/enumerations.html",[1337,2.017,1338,3.63]],["body/miscellaneous/enumerations.html",[22,0.306,30,0.022,35,1.701,84,0.019,85,0.019,904,3.714,919,3.968,924,3.968,925,3.968,926,3.968,1337,3.714,1338,4.636,1339,5.438]],["title/index.html",[22,0.166,1340,2.953,1341,2.953]],["body/index.html",[0,1.126,4,0.187,30,0.017,51,0.463,54,1.633,81,1.633,84,0.017,85,0.017,117,2.39,122,3.048,169,1.84,275,3.048,318,3.371,383,4.66,492,4.658,738,3.805,781,3.805,883,3.805,1318,3.371,1342,4.462,1343,5.63,1344,4.462,1345,6.168,1346,6.168,1347,3.805,1348,4.462,1349,4.462,1350,5.63,1351,6.678,1352,6.924,1353,4.462,1354,4.462,1355,4.462,1356,4.462,1357,4.462,1358,4.462,1359,4.462,1360,4.462,1361,4.462,1362,6.168,1363,4.462,1364,6.477,1365,4.462,1366,4.462,1367,4.462,1368,4.462,1369,5.63,1370,5.63,1371,6.477,1372,4.462,1373,5.63,1374,5.63,1375,4.462,1376,4.462,1377,4.462,1378,4.462,1379,5.63,1380,4.462,1381,4.462,1382,4.462,1383,4.462,1384,6.168,1385,4.462,1386,3.371,1387,4.462]],["title/modules.html",[1388,4.122]],["body/modules.html",[30,0.02,84,0.02,85,0.02,1388,4.901]],["title/overview.html",[1386,3.652]],["body/overview.html",[2,2.045,30,0.019,84,0.019,85,0.019,86,4.765,140,2.791,280,3.493,325,1.453,513,4.222,1386,4.222,1389,5.589,1390,5.589,1391,5.589,1392,5.589]],["title/properties.html",[23,0.303,1318,2.231]],["body/properties.html",[23,0.406,30,0.021,84,0.02,85,0.02,1347,4.859,1393,5.699]],["title/miscellaneous/variables.html",[1337,2.017,1394,3.63]],["body/miscellaneous/variables.html",[22,0.309,30,0.022,32,0.35,34,1.349,35,1.349,84,0.019,85,0.019,1337,3.755,1394,4.687,1395,6.388,1396,5.497,1397,5.497,1398,5.497,1399,5.497,1400,5.497]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":692,"title":{},"body":{"components/HomePageComponent.html":{},"components/UserListComponent.html":{}}}],["0.0.0",{"_index":1393,"title":{},"body":{"properties.html":{}}}],["0.14.10",{"_index":1336,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":1242,"title":{},"body":{"components/UserListComponent.html":{}}}],["0.5",{"_index":1263,"title":{},"body":{"components/UserListComponent.html":{}}}],["0.5rem",{"_index":1259,"title":{},"body":{"components/UserListComponent.html":{}}}],["1",{"_index":280,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{},"overview.html":{}}}],["1,2,3,4].filter(x=>!rowsfull.includes(x))[0",{"_index":720,"title":{},"body":{"components/HomePageComponent.html":{}}}],["1/2",{"_index":1268,"title":{},"body":{"components/UserListComponent.html":{}}}],["14",{"_index":1389,"title":{},"body":{"overview.html":{}}}],["17.3.11",{"_index":1348,"title":{},"body":{"index.html":{}}}],["18",{"_index":1392,"title":{},"body":{"overview.html":{}}}],["18.2.0",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["18.2.12",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["1][6",{"_index":746,"title":{},"body":{"components/HomePageComponent.html":{}}}],["1rem",{"_index":1260,"title":{},"body":{"components/UserListComponent.html":{}}}],["2",{"_index":1391,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":1334,"title":{},"body":{"dependencies.html":{}}}],["2.5.2",{"_index":1329,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":764,"title":{},"body":{"components/HomePageComponent.html":{},"components/UserListComponent.html":{}}}],["4.0.12",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["404",{"_index":893,"title":{},"body":{"components/NotFoundPageComponent.html":{}}}],["5",{"_index":1231,"title":{},"body":{"components/UserListComponent.html":{}}}],["56",{"_index":1234,"title":{},"body":{"components/UserListComponent.html":{}}}],["6",{"_index":696,"title":{},"body":{"components/HomePageComponent.html":{}}}],["64",{"_index":1236,"title":{},"body":{"components/UserListComponent.html":{}}}],["7",{"_index":1390,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":278,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["8.5.3",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["8601",{"_index":503,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["95",{"_index":1262,"title":{},"body":{"components/UserListComponent.html":{}}}],["a.key.gettime",{"_index":680,"title":{},"body":{"components/HomePageComponent.html":{}}}],["acountcreation",{"_index":211,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["acountcreation=false",{"_index":245,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["activatedroute",{"_index":237,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["activatedroutesnapshot",{"_index":99,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":905,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["activecreatemodal",{"_index":975,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["activecreatemodal:boolean",{"_index":1189,"title":{},"body":{"components/UserListComponent.html":{}}}],["activecreatemodal=false",{"_index":1038,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["activeeditmodal",{"_index":976,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["activeeditmodal:boolean",{"_index":1190,"title":{},"body":{"components/UserListComponent.html":{}}}],["activeeditmodal=false",{"_index":1037,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["actual_component",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["add",{"_index":781,"title":{},"body":{"components/HomePageComponent.html":{},"index.html":{}}}],["adddishtoevent",{"_index":531,"title":{},"body":{"injectables/EventService.html":{}}}],["adddishtoevent(id",{"_index":539,"title":{},"body":{"injectables/EventService.html":{}}}],["addeventstodays",{"_index":597,"title":{},"body":{"components/HomePageComponent.html":{}}}],["addingredienttodish",{"_index":349,"title":{},"body":{"injectables/DishService.html":{}}}],["addingredienttodish(model",{"_index":359,"title":{},"body":{"injectables/DishService.html":{}}}],["addingredienttodish(model:dishaddingredientmodel",{"_index":395,"title":{},"body":{"injectables/DishService.html":{}}}],["addpersontoevent",{"_index":532,"title":{},"body":{"injectables/EventService.html":{}}}],["addpersontoevent(id",{"_index":541,"title":{},"body":{"injectables/EventService.html":{}}}],["address",{"_index":873,"title":{},"body":{"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["addrole",{"_index":1275,"title":{},"body":{"injectables/UserService.html":{}}}],["addrole(id",{"_index":1279,"title":{},"body":{"injectables/UserService.html":{}}}],["addrole(id:string,role:string",{"_index":1305,"title":{},"body":{"injectables/UserService.html":{}}}],["adjust",{"_index":113,"title":{},"body":{"guards/AuthGuard.html":{},"components/HomePageComponent.html":{}}}],["admin",{"_index":903,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["admin\",\"usermanger",{"_index":1183,"title":{},"body":{"components/UserListComponent.html":{}}}],["again",{"_index":885,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["age",{"_index":1116,"title":{},"body":{"interfaces/SmallPersonDetailModel.html":{}}}],["age?:number|null",{"_index":921,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["alert(x.error.message",{"_index":1077,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["amount",{"_index":798,"title":{},"body":{"interfaces/IngredientDishDetail.html":{}}}],["amount:number",{"_index":339,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["amout",{"_index":327,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{}}}],["amout:number",{"_index":343,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["angular",{"_index":1345,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1297,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":303,"title":{},"body":{"components/DefaultComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":239,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"dependencies.html":{}}}],["any)[field",{"_index":1071,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["any)[key",{"_index":413,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["any)[x",{"_index":1069,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["api/v1/auth",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["api/v1/dish",{"_index":378,"title":{},"body":{"injectables/DishService.html":{}}}],["api/v1/event",{"_index":555,"title":{},"body":{"injectables/EventService.html":{}}}],["api/v1/ingredient",{"_index":815,"title":{},"body":{"injectables/IngredientService.html":{}}}],["api/v1/person",{"_index":948,"title":{},"body":{"injectables/PersonService.html":{}}}],["api/v1/user",{"_index":1292,"title":{},"body":{"injectables/UserService.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["appconfig",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":1357,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apply",{"_index":1228,"title":{},"body":{"components/UserListComponent.html":{}}}],["args",{"_index":517,"title":{},"body":{"pipes/EventPipe.html":{}}}],["artifacts",{"_index":1365,"title":{},"body":{"index.html":{}}}],["async",{"_index":310,"title":{},"body":{"components/DefaultComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["async;track",{"_index":1220,"title":{},"body":{"components/UserListComponent.html":{}}}],["asyncpipe",{"_index":289,"title":{},"body":{"components/DefaultComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["authenticated",{"_index":126,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authguard",{"_index":87,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{}}}],["authservice",{"_index":93,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/LoginPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["authservice:authservice",{"_index":901,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["authservice=inject(authservice",{"_index":305,"title":{},"body":{"components/DefaultComponent.html":{}}}],["automatically",{"_index":1358,"title":{},"body":{"index.html":{}}}],["available",{"_index":125,"title":{},"body":{"guards/AuthGuard.html":{}}}],["back",{"_index":888,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["baseurl",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["before",{"_index":705,"title":{},"body":{"components/HomePageComponent.html":{}}}],["behaviorsubject",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["behaviorsubject(null",{"_index":457,"title":{},"body":{"injectables/EditService.html":{}}}],["between",{"_index":1271,"title":{},"body":{"components/UserListComponent.html":{}}}],["birth",{"_index":1097,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["boolean",{"_index":232,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["border",{"_index":1229,"title":{},"body":{"components/UserListComponent.html":{}}}],["box",{"_index":1258,"title":{},"body":{"components/UserListComponent.html":{}}}],["break",{"_index":1245,"title":{},"body":{"components/UserListComponent.html":{}}}],["browser",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1364,"title":{},"body":{"index.html":{}}}],["button",{"_index":1251,"title":{},"body":{"components/UserListComponent.html":{}}}],["calendar",{"_index":591,"title":{},"body":{"components/HomePageComponent.html":{}}}],["calendar:keyvalue",{"_index":659,"title":{},"body":{"components/HomePageComponent.html":{}}}],["calendar[0",{"_index":756,"title":{},"body":{"components/HomePageComponent.html":{}}}],["calendarmonth",{"_index":416,"title":{},"body":{"injectables/EditService.html":{}}}],["calendarmonth:number=new",{"_index":473,"title":{},"body":{"injectables/EditService.html":{}}}],["calendaryear",{"_index":417,"title":{},"body":{"injectables/EditService.html":{}}}],["calendaryear:number=new",{"_index":474,"title":{},"body":{"injectables/EditService.html":{}}}],["can't",{"_index":881,"title":{},"body":{"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{}}}],["can\\'t",{"_index":889,"title":{},"body":{"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{}}}],["canactivate",{"_index":90,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":98,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capabilities",{"_index":1382,"title":{},"body":{"index.html":{}}}],["case",{"_index":132,"title":{},"body":{"guards/AuthGuard.html":{},"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{}}}],["case(2",{"_index":1099,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["case(3",{"_index":1102,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["catcherror",{"_index":108,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catcherror((err",{"_index":131,"title":{},"body":{"guards/AuthGuard.html":{}}}],["change",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"index.html":{}}}],["changepassword",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/UserService.html":{}}}],["changepassword(email",{"_index":1284,"title":{},"body":{"injectables/UserService.html":{}}}],["changepassword(email:string",{"_index":1309,"title":{},"body":{"injectables/UserService.html":{}}}],["changepassword(model",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["changepassword(model:passwordresetmodel",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["changepasswordpagecomponent",{"_index":53,"title":{"components/ChangePasswordPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["changerole",{"_index":1158,"title":{},"body":{"components/UserListComponent.html":{}}}],["characters",{"_index":279,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["check",{"_index":883,"title":{},"body":{"components/LoginPageComponent.html":{},"index.html":{}}}],["checkform",{"_index":985,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["checkform(form",{"_index":997,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["checking",{"_index":879,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["checkpasswords",{"_index":216,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserListComponent.html":{}}}],["child",{"_index":924,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"miscellaneous/enumerations.html":{}}}],["choice",{"_index":1378,"title":{},"body":{"index.html":{}}}],["class",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["cli",{"_index":1346,"title":{},"body":{"index.html":{}}}],["closecreatemodal",{"_index":983,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["closedishedit",{"_index":425,"title":{},"body":{"injectables/EditService.html":{}}}],["closeeditmodal",{"_index":984,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["closeeventedit",{"_index":426,"title":{},"body":{"injectables/EditService.html":{}}}],["closepersonedit",{"_index":427,"title":{},"body":{"injectables/EditService.html":{}}}],["code",{"_index":738,"title":{},"body":{"components/HomePageComponent.html":{},"index.html":{}}}],["col",{"_index":1238,"title":{},"body":{"components/UserListComponent.html":{}}}],["combinelatest",{"_index":1032,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["command",{"_index":1379,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":288,"title":{},"body":{"components/DefaultComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{}}}],["commonmodule,routeroutlet,routerlink,asyncpipe",{"_index":304,"title":{},"body":{"components/DefaultComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"index.html":{}}}],["component_template",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"overview.html":{}}}],["components/dish",{"_index":584,"title":{},"body":{"components/FoodPageComponent.html":{}}}],["components/persons",{"_index":896,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["components/user",{"_index":898,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["confirm",{"_index":283,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["confirmed",{"_index":272,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["confirmpassword.touched",{"_index":285,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["conntact",{"_index":886,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["console.error('authguard",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.error('error",{"_index":402,"title":{},"body":{"injectables/DishService.html":{}}}],["console.error(error",{"_index":399,"title":{},"body":{"injectables/DishService.html":{}}}],["console.log(\"delll",{"_index":723,"title":{},"body":{"components/HomePageComponent.html":{}}}],["console.log(isvalid,field",{"_index":1143,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["console.log(patch",{"_index":967,"title":{},"body":{"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["console.log(this.editingperson$,this.editingpersonbase",{"_index":1065,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["console.log(this.editinguser",{"_index":1208,"title":{},"body":{"components/UserListComponent.html":{}}}],["console.log(this.lasterror",{"_index":252,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/LoginPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["console.log(this.passwordmismatch",{"_index":1214,"title":{},"body":{"components/UserListComponent.html":{}}}],["console.log(url",{"_index":1051,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["console.log(x",{"_index":562,"title":{},"body":{"injectables/EventService.html":{}}}],["const",{"_index":388,"title":{},"body":{"injectables/DishService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":91,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"components/PeoplePageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["constructor(authservice",{"_index":92,"title":{},"body":{"guards/AuthGuard.html":{},"components/PeoplePageComponent.html":{}}}],["constructor(httpclient",{"_index":357,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":385,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"components/PeoplePageComponent.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["content",{"_index":1272,"title":{},"body":{"components/UserListComponent.html":{}}}],["control.markastouched",{"_index":260,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["create",{"_index":533,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["create(model",{"_index":543,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["create(model:eventcreatemodel",{"_index":572,"title":{},"body":{"injectables/EventService.html":{}}}],["create(model:personcreatemodel):observable",{"_index":964,"title":{},"body":{"injectables/PersonService.html":{}}}],["create(model:usercreate",{"_index":1300,"title":{},"body":{"injectables/UserService.html":{}}}],["createdish",{"_index":350,"title":{},"body":{"injectables/DishService.html":{}}}],["createdish(data",{"_index":361,"title":{},"body":{"injectables/DishService.html":{}}}],["createdish(data:dishcreate):observable",{"_index":405,"title":{},"body":{"injectables/DishService.html":{}}}],["createingredient",{"_index":802,"title":{},"body":{"injectables/IngredientService.html":{}}}],["createingredient(data",{"_index":807,"title":{},"body":{"injectables/IngredientService.html":{}}}],["createingredient(data:ingredientcreate",{"_index":823,"title":{},"body":{"injectables/IngredientService.html":{}}}],["creating",{"_index":1104,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["creatingperson",{"_index":977,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["creatingperson:personcreatemodel",{"_index":1039,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["creatinguser",{"_index":1151,"title":{},"body":{"components/UserListComponent.html":{}}}],["creatinguser:usercreate",{"_index":1191,"title":{},"body":{"components/UserListComponent.html":{}}}],["currentmonth",{"_index":592,"title":{},"body":{"components/HomePageComponent.html":{}}}],["currentmonth+1",{"_index":750,"title":{},"body":{"components/HomePageComponent.html":{}}}],["currentmonth=this.editservice.calendarmonth",{"_index":660,"title":{},"body":{"components/HomePageComponent.html":{}}}],["currentweek",{"_index":702,"title":{},"body":{"components/HomePageComponent.html":{}}}],["currentweek.push({key:new",{"_index":708,"title":{},"body":{"components/HomePageComponent.html":{}}}],["currentyear",{"_index":593,"title":{},"body":{"components/HomePageComponent.html":{}}}],["currentyear=this.editservice.calendaryear",{"_index":661,"title":{},"body":{"components/HomePageComponent.html":{}}}],["cursor",{"_index":1256,"title":{},"body":{"components/UserListComponent.html":{}}}],["d",{"_index":667,"title":{},"body":{"components/HomePageComponent.html":{}}}],["data",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["data).pipe",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["date",{"_index":504,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"components/HomePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["date().getdate(),1",{"_index":647,"title":{},"body":{"components/HomePageComponent.html":{}}}],["date().getfullyear",{"_index":455,"title":{},"body":{"injectables/EditService.html":{},"injectables/PersonService.html":{}}}],["date().getmonth",{"_index":453,"title":{},"body":{"injectables/EditService.html":{}}}],["date(date.getfullyear(),date.getmonth(),date.getdate(),1",{"_index":525,"title":{},"body":{"pipes/EventPipe.html":{}}}],["date(event.end",{"_index":527,"title":{},"body":{"pipes/EventPipe.html":{}}}],["date(event.start",{"_index":524,"title":{},"body":{"pipes/EventPipe.html":{}}}],["date(this.currentyear",{"_index":645,"title":{},"body":{"components/HomePageComponent.html":{}}}],["date(y.dateofbirth).getfullyear",{"_index":961,"title":{},"body":{"injectables/PersonService.html":{}}}],["date(y.dateofbirth).toisostring().split('t')[0",{"_index":963,"title":{},"body":{"injectables/PersonService.html":{}}}],["date(y.end).toisostring().split('t')[0",{"_index":567,"title":{},"body":{"injectables/EventService.html":{}}}],["date(y.start).toisostring().split('t')[0",{"_index":565,"title":{},"body":{"injectables/EventService.html":{}}}],["date(year",{"_index":690,"title":{},"body":{"components/HomePageComponent.html":{}}}],["date:\"d",{"_index":762,"title":{},"body":{"components/HomePageComponent.html":{}}}],["date:\"e",{"_index":759,"title":{},"body":{"components/HomePageComponent.html":{}}}],["date:\"fulldate",{"_index":778,"title":{},"body":{"components/HomePageComponent.html":{}}}],["dateofbirth",{"_index":906,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["dateofbirth.touched",{"_index":1113,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["datepipe",{"_index":589,"title":{},"body":{"components/HomePageComponent.html":{}}}],["datepipe,personpipe,eventpipe",{"_index":655,"title":{},"body":{"components/HomePageComponent.html":{}}}],["day",{"_index":630,"title":{},"body":{"components/HomePageComponent.html":{}}}],["day.key",{"_index":761,"title":{},"body":{"components/HomePageComponent.html":{}}}],["day.value!.length",{"_index":765,"title":{},"body":{"components/HomePageComponent.html":{}}}],["day.value?.slice(0,3",{"_index":767,"title":{},"body":{"components/HomePageComponent.html":{}}}],["daybefore",{"_index":742,"title":{},"body":{"components/HomePageComponent.html":{}}}],["daybefore.value!.includes(event",{"_index":747,"title":{},"body":{"components/HomePageComponent.html":{}}}],["daybefore.value!.slice(0,3).includes(event",{"_index":748,"title":{},"body":{"components/HomePageComponent.html":{}}}],["daybefore:any",{"_index":740,"title":{},"body":{"components/HomePageComponent.html":{}}}],["daybeforebreak",{"_index":598,"title":{},"body":{"components/HomePageComponent.html":{}}}],["daybeforebreak(week",{"_index":610,"title":{},"body":{"components/HomePageComponent.html":{}}}],["days",{"_index":704,"title":{},"body":{"components/HomePageComponent.html":{}}}],["daysinmonth",{"_index":699,"title":{},"body":{"components/HomePageComponent.html":{}}}],["default",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"miscellaneous/variables.html":{}}}],["default'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["default.component.html",{"_index":290,"title":{},"body":{"components/DefaultComponent.html":{}}}],["default.component.scss",{"_index":291,"title":{},"body":{"components/DefaultComponent.html":{}}}],["defaultcomponent",{"_index":57,"title":{"components/DefaultComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["defined",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["delete",{"_index":534,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["delete(id",{"_index":545,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["delete(id:string",{"_index":570,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["deleted",{"_index":922,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/UserDetail.html":{}}}],["deleted:boolean",{"_index":1120,"title":{},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["dependencies",{"_index":1319,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":332,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientDishDetail.html":{}}}],["description:string",{"_index":335,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["detail",{"_index":752,"title":{},"body":{"components/HomePageComponent.html":{}}}],["dev",{"_index":1354,"title":{},"body":{"index.html":{}}}],["development",{"_index":1349,"title":{},"body":{"index.html":{}}}],["directive",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["directives",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1363,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1368,"title":{},"body":{"index.html":{}}}],["dish",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["dish.interface",{"_index":496,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{}}}],["dishaddingredientmodel",{"_index":324,"title":{"interfaces/DishAddIngredientModel.html":{}},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"interfaces/IngredientDishDetail.html":{}}}],["dishcreate",{"_index":334,"title":{"interfaces/DishCreate.html":{}},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"interfaces/IngredientDishDetail.html":{}}}],["dishdetail",{"_index":330,"title":{"interfaces/DishDetail.html":{}},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["dishes",{"_index":319,"title":{},"body":{"components/DefaultComponent.html":{},"injectables/DishService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{}}}],["dishid",{"_index":328,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishIngredientModel.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{}}}],["dishid:string",{"_index":342,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["dishingredientmodel",{"_index":344,"title":{"interfaces/DishIngredientModel.html":{}},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"interfaces/IngredientDishDetail.html":{}}}],["dishlistcomponent",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["dishservice",{"_index":347,"title":{"injectables/DishService.html":{}},"body":{"injectables/DishService.html":{}}}],["dist",{"_index":1367,"title":{},"body":{"index.html":{}}}],["dn",{"_index":1087,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["dropdownvisible",{"_index":292,"title":{},"body":{"components/DefaultComponent.html":{}}}],["dt",{"_index":638,"title":{},"body":{"components/HomePageComponent.html":{}}}],["dynamic",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":134,"title":{},"body":{"guards/AuthGuard.html":{}}}],["e2e",{"_index":1376,"title":{},"body":{"index.html":{}}}],["ease",{"_index":1243,"title":{},"body":{"components/UserListComponent.html":{}}}],["editdishid",{"_index":418,"title":{},"body":{"injectables/EditService.html":{}}}],["editeventid",{"_index":419,"title":{},"body":{"injectables/EditService.html":{}}}],["editing",{"_index":1088,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["editing_inputs",{"_index":1267,"title":{},"body":{"components/UserListComponent.html":{}}}],["editingperson",{"_index":978,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["editingperson$:persondetailmodel",{"_index":1040,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["editingpersonbase",{"_index":979,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["editingpersonbase:persondetailmodel",{"_index":1041,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["editingpersonpage",{"_index":980,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["editinguser",{"_index":1152,"title":{},"body":{"components/UserListComponent.html":{}}}],["editinguser:userdetail",{"_index":1192,"title":{},"body":{"components/UserListComponent.html":{}}}],["editinguserbase",{"_index":1153,"title":{},"body":{"components/UserListComponent.html":{}}}],["editinguserbase:userdetail",{"_index":1193,"title":{},"body":{"components/UserListComponent.html":{}}}],["editpersonid",{"_index":420,"title":{},"body":{"injectables/EditService.html":{}}}],["editservice",{"_index":414,"title":{"injectables/EditService.html":{}},"body":{"injectables/EditService.html":{},"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["editservice=inject(editservice",{"_index":1034,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["element",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["email",{"_index":271,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["email.touched",{"_index":1223,"title":{},"body":{"components/UserListComponent.html":{}}}],["email:string",{"_index":825,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["emailconfirmed",{"_index":1127,"title":{},"body":{"interfaces/UserDetail.html":{}}}],["emailconfirmed:boolean",{"_index":1121,"title":{},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["emailoffather",{"_index":907,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["emailofmother",{"_index":908,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["emitted",{"_index":123,"title":{},"body":{"guards/AuthGuard.html":{}}}],["end",{"_index":492,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"components/PersonsListComponent.html":{},"index.html":{}}}],["enddate",{"_index":526,"title":{},"body":{"pipes/EventPipe.html":{}}}],["ends",{"_index":787,"title":{},"body":{"components/HomePageComponent.html":{}}}],["enum",{"_index":923,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["enumerations",{"_index":1338,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{}}}],["error",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DishService.html":{},"components/LoginPageComponent.html":{}}}],["error.error",{"_index":860,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["error:(err",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{}}}],["error:(error",{"_index":250,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["error:x",{"_index":1076,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["event",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"pipes/EventPipe.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["event.id",{"_index":768,"title":{},"body":{"components/HomePageComponent.html":{}}}],["event.name",{"_index":528,"title":{},"body":{"pipes/EventPipe.html":{},"components/HomePageComponent.html":{}}}],["eventcolor",{"_index":773,"title":{},"body":{"components/HomePageComponent.html":{}}}],["eventcreatemodel",{"_index":490,"title":{"interfaces/EventCreateModel.html":{}},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"injectables/EventService.html":{}}}],["eventdetailmodel",{"_index":506,"title":{"interfaces/EventDetailModel.html":{}},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{}}}],["eventend",{"_index":771,"title":{},"body":{"components/HomePageComponent.html":{}}}],["eventid",{"_index":446,"title":{},"body":{"injectables/EditService.html":{},"components/HomePageComponent.html":{}}}],["eventlistcomponent",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["eventondate",{"_index":599,"title":{},"body":{"components/HomePageComponent.html":{}}}],["eventondate(date",{"_index":614,"title":{},"body":{"components/HomePageComponent.html":{}}}],["eventpipe",{"_index":512,"title":{"pipes/EventPipe.html":{}},"body":{"pipes/EventPipe.html":{},"components/HomePageComponent.html":{}}}],["events",{"_index":320,"title":{},"body":{"components/DefaultComponent.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{}}}],["events.filter(x=>x.rowingrid",{"_index":727,"title":{},"body":{"components/HomePageComponent.html":{}}}],["events.foreach(x",{"_index":714,"title":{},"body":{"components/HomePageComponent.html":{}}}],["events:eventdetailmodel",{"_index":656,"title":{},"body":{"components/HomePageComponent.html":{}}}],["events].map(x",{"_index":718,"title":{},"body":{"components/HomePageComponent.html":{}}}],["eventservice",{"_index":529,"title":{"injectables/EventService.html":{}},"body":{"injectables/EventService.html":{},"components/HomePageComponent.html":{}}}],["eventstart",{"_index":769,"title":{},"body":{"components/HomePageComponent.html":{}}}],["event|event:\"enddate",{"_index":772,"title":{},"body":{"components/HomePageComponent.html":{}}}],["event|event:\"startdate",{"_index":770,"title":{},"body":{"components/HomePageComponent.html":{}}}],["execute",{"_index":1373,"title":{},"body":{"index.html":{}}}],["export",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["extends",{"_index":827,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{}}}],["false",{"_index":226,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/EditService.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["father's",{"_index":1103,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["father\\'s",{"_index":1115,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["fathers",{"_index":1091,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["fb",{"_index":831,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["female",{"_index":1096,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["field",{"_index":1006,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["files",{"_index":1360,"title":{},"body":{"index.html":{}}}],["fill",{"_index":703,"title":{},"body":{"components/HomePageComponent.html":{}}}],["filterevents",{"_index":600,"title":{},"body":{"components/HomePageComponent.html":{}}}],["filterevents(events",{"_index":616,"title":{},"body":{"components/HomePageComponent.html":{}}}],["filterevents(events:(eventdetailmodel",{"_index":726,"title":{},"body":{"components/HomePageComponent.html":{}}}],["find",{"_index":882,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["first",{"_index":122,"title":{},"body":{"guards/AuthGuard.html":{},"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"index.html":{}}}],["firstdayofmonth",{"_index":689,"title":{},"body":{"components/HomePageComponent.html":{}}}],["firstdayofmonth.getday",{"_index":694,"title":{},"body":{"components/HomePageComponent.html":{}}}],["firstempty",{"_index":719,"title":{},"body":{"components/HomePageComponent.html":{}}}],["firstname",{"_index":909,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["firstname.touched",{"_index":1106,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["flex",{"_index":1237,"title":{},"body":{"components/UserListComponent.html":{}}}],["flowbite",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"dependencies.html":{}}}],["food",{"_index":583,"title":{},"body":{"components/FoodPageComponent.html":{}}}],["foodpagecomponent",{"_index":64,"title":{"components/FoodPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["for(day",{"_index":760,"title":{},"body":{"components/HomePageComponent.html":{}}}],["for(event",{"_index":766,"title":{},"body":{"components/HomePageComponent.html":{}}}],["for(person",{"_index":1219,"title":{},"body":{"components/UserListComponent.html":{}}}],["for(role",{"_index":1224,"title":{},"body":{"components/UserListComponent.html":{}}}],["for(week",{"_index":755,"title":{},"body":{"components/HomePageComponent.html":{}}}],["form",{"_index":225,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["form.invalid",{"_index":1060,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["form.invalid||this.passwordmismatch",{"_index":258,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["format",{"_index":501,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["formbuilder",{"_index":853,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["formcontrol",{"_index":846,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["formsmodule",{"_index":207,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["found",{"_index":891,"title":{},"body":{"components/NotFoundPageComponent.html":{}}}],["found'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["full",{"_index":1101,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["fullname",{"_index":932,"title":{},"body":{"pipes/PersonPipe.html":{}}}],["fullnameoffather",{"_index":910,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["fullnameofmother",{"_index":911,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["further",{"_index":1383,"title":{},"body":{"index.html":{}}}],["gender",{"_index":912,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["gender.touched",{"_index":1111,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["gender:true,status:'other",{"_index":1017,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["generate",{"_index":383,"title":{},"body":{"injectables/DishService.html":{},"components/HomePageComponent.html":{},"index.html":{}}}],["generatecalendar",{"_index":601,"title":{},"body":{"components/HomePageComponent.html":{}}}],["generated",{"_index":1344,"title":{},"body":{"index.html":{}}}],["generatepatch",{"_index":351,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["generatepatch(model",{"_index":942,"title":{},"body":{"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["generatepatch(updated",{"_index":363,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{}}}],["get(`${this.baseurl",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcalendargrid",{"_index":602,"title":{},"body":{"components/HomePageComponent.html":{}}}],["getcalendargrid(year",{"_index":618,"title":{},"body":{"components/HomePageComponent.html":{}}}],["getting",{"_index":1340,"title":{"index.html":{}},"body":{}}],["go",{"_index":275,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ValidateEmailPageComponent.html":{},"index.html":{}}}],["guard",{"_index":86,"title":{"guards/AuthGuard.html":{}},"body":{"overview.html":{}}}],["guards",{"_index":88,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h",{"_index":1235,"title":{},"body":{"components/UserListComponent.html":{}}}],["hash",{"_index":737,"title":{},"body":{"components/HomePageComponent.html":{}}}],["help",{"_index":1384,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":1250,"title":{},"body":{"components/UserListComponent.html":{}}}],["home",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["homepagecomponent",{"_index":66,"title":{"components/HomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["html",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["http://localhost:4200",{"_index":1356,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["httpparams",{"_index":384,"title":{},"body":{"injectables/DishService.html":{}}}],["i,1),value:undefined",{"_index":709,"title":{},"body":{"components/HomePageComponent.html":{}}}],["id",{"_index":331,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{}}}],["id:string",{"_index":337,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["identity",{"_index":1149,"title":{},"body":{"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["if(!editinguser.emailconfirmed",{"_index":1221,"title":{},"body":{"components/UserListComponent.html":{}}}],["if(!resetingpassword",{"_index":865,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["if((this.editingpersonbase",{"_index":1068,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(acountcreation",{"_index":270,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["if(authservice.userinfomodel$|async",{"_index":866,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["if(d!=undefined",{"_index":671,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(dateofbirth.invalid",{"_index":1112,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(day.value!.length",{"_index":763,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(daybeforebreak(week,week.indexof(day),event",{"_index":775,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(editinguser.deleted",{"_index":1227,"title":{},"body":{"components/UserListComponent.html":{}}}],["if(email.invalid",{"_index":1222,"title":{},"body":{"components/UserListComponent.html":{}}}],["if(firstempty==undefined",{"_index":721,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(firstname.invalid",{"_index":1105,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(gender.invalid",{"_index":1110,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(index",{"_index":741,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(lasterror$?.errors.password",{"_index":874,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["if(lasterror$?.errors[\"email",{"_index":869,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["if(lastname.invalid",{"_index":1108,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(params.get(\"email\")&&params.get(\"token",{"_index":247,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["if(password.invalid",{"_index":276,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["if(passwordmismatch",{"_index":284,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["if(search",{"_index":1084,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(searchusers",{"_index":1215,"title":{},"body":{"components/UserListComponent.html":{}}}],["if(sentreset",{"_index":876,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["if(this.calendar.indexof(week",{"_index":744,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(this.editinguser.role",{"_index":1209,"title":{},"body":{"components/UserListComponent.html":{}}}],["if(this.editservice.openpersoncreate",{"_index":1043,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(url",{"_index":1052,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(user",{"_index":312,"title":{},"body":{"components/DefaultComponent.html":{}}}],["if(user?.role",{"_index":902,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["if(usermail.invalid",{"_index":1147,"title":{},"body":{"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["if(username.invalid",{"_index":1145,"title":{},"body":{"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["if(viewday",{"_index":776,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(viewday.value?.length",{"_index":780,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(viewday||vieweventdetail",{"_index":751,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(vieweventdetail",{"_index":754,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(x!=\"id",{"_index":1067,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(x.rowingrid",{"_index":715,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(y.dateofbirth==undefined",{"_index":959,"title":{},"body":{"injectables/PersonService.html":{}}}],["implements",{"_index":117,"title":{},"body":{"guards/AuthGuard.html":{},"components/ChangePasswordPageComponent.html":{},"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{},"index.html":{}}}],["import",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["imports:[asyncpipe,reactiveformsmodule,formsmodule",{"_index":1187,"title":{},"body":{"components/UserListComponent.html":{}}}],["imports:[formsmodule,reactiveformsmodule",{"_index":1135,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["imports:[reactiveformsmodule,formsmodule",{"_index":241,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["imports:[routerlink",{"_index":1316,"title":{},"body":{"components/ValidateEmailPageComponent.html":{}}}],["inbox",{"_index":880,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["index:number,event:eventdetailmodel):boolean",{"_index":739,"title":{},"body":{"components/HomePageComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["information",{"_index":1144,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["ingredient",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["ingredientcreate",{"_index":794,"title":{"interfaces/IngredientCreate.html":{}},"body":{"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"injectables/IngredientService.html":{}}}],["ingredientdetail",{"_index":797,"title":{"interfaces/IngredientDetail.html":{}},"body":{"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"injectables/IngredientService.html":{}}}],["ingredientdishdetail",{"_index":336,"title":{"interfaces/IngredientDishDetail.html":{}},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"interfaces/IngredientDishDetail.html":{}}}],["ingredientid",{"_index":329,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["ingredientid:string",{"_index":338,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["ingredients",{"_index":345,"title":{},"body":{"interfaces/DishDetail.html":{},"injectables/IngredientService.html":{}}}],["ingredients:ingredientdishdetail[]|undefined",{"_index":333,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["ingredientservice",{"_index":800,"title":{"injectables/IngredientService.html":{}},"body":{"injectables/IngredientService.html":{}}}],["initflowbite",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["inject",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["inject(activatedroute",{"_index":234,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["inject(authservice",{"_index":227,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["inject(editservice",{"_index":643,"title":{},"body":{"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["inject(eventservice",{"_index":644,"title":{},"body":{"components/HomePageComponent.html":{}}}],["inject(formbuilder",{"_index":843,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["inject(httpclient",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject(personservice",{"_index":1025,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["inject(router",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["inject(userservice",{"_index":851,"title":{},"body":{"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["injectable",{"_index":105,"title":{"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["injectables",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":635,"title":{},"body":{"components/HomePageComponent.html":{}}}],["inputs",{"_index":1266,"title":{},"body":{"components/UserListComponent.html":{}}}],["inputs>input,.inputs>select",{"_index":1265,"title":{},"body":{"components/UserListComponent.html":{}}}],["instruktor",{"_index":925,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"miscellaneous/enumerations.html":{}}}],["interface",{"_index":323,"title":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["interfaces",{"_index":325,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{},"overview.html":{}}}],["invalid",{"_index":1093,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["iso",{"_index":502,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["isstandalone",{"_index":1031,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["issue",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{}}}],["isvalid",{"_index":1004,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["json.parse(json.stringify(this.editingperson",{"_index":1020,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["json.parse(json.stringify(this.editinguser",{"_index":1197,"title":{},"body":{"components/UserListComponent.html":{}}}],["justify",{"_index":1270,"title":{},"body":{"components/UserListComponent.html":{}}}],["karma",{"_index":1375,"title":{},"body":{"index.html":{}}}],["key",{"_index":412,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["keyvalue",{"_index":611,"title":{},"body":{"components/HomePageComponent.html":{}}}],["last",{"_index":1094,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["lastdayofmonth",{"_index":691,"title":{},"body":{"components/HomePageComponent.html":{}}}],["lastdayofmonth.getdate",{"_index":700,"title":{},"body":{"components/HomePageComponent.html":{}}}],["lasterror",{"_index":212,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/LoginPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["lasterror$.errors[\"errormessage\"][0",{"_index":269,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["lasterror$:any",{"_index":242,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/LoginPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["lasterror$?.errors[\"error",{"_index":868,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["lasterror$[\"errormessage\"].errors[0][\"errormessage",{"_index":1317,"title":{},"body":{"components/ValidateEmailPageComponent.html":{}}}],["lastname",{"_index":913,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["lastname.touched",{"_index":1109,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["leader",{"_index":926,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"miscellaneous/enumerations.html":{}}}],["legend",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["letter",{"_index":281,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["lg",{"_index":1240,"title":{},"body":{"components/UserListComponent.html":{}}}],["list",{"_index":972,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["list.component",{"_index":586,"title":{},"body":{"components/FoodPageComponent.html":{},"components/PeoplePageComponent.html":{}}}],["list.component.html",{"_index":973,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.scss",{"_index":974,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts",{"_index":971,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:106",{"_index":1165,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:116",{"_index":1014,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:126",{"_index":1166,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:127",{"_index":1005,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:132",{"_index":1175,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:133",{"_index":1011,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:143",{"_index":1169,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:149",{"_index":1168,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:150",{"_index":996,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:153",{"_index":1167,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:162",{"_index":1001,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:19",{"_index":1186,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:20",{"_index":1182,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:21",{"_index":1180,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:22",{"_index":1184,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:24",{"_index":1026,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:25",{"_index":1022,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:26",{"_index":1027,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:27",{"_index":1024,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:29",{"_index":1028,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:30",{"_index":1029,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:31",{"_index":1181,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:32",{"_index":1021,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:33",{"_index":1178,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:34",{"_index":1016,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:35",{"_index":1015,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:36",{"_index":1179,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:37",{"_index":1018,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:38",{"_index":1162,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:39",{"_index":1019,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:40",{"_index":993,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:43",{"_index":1172,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:45",{"_index":999,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:47",{"_index":1173,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:51",{"_index":995,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:52",{"_index":1174,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:56",{"_index":1170,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:61",{"_index":1163,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:62",{"_index":1009,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:67",{"_index":1171,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:69",{"_index":994,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:75",{"_index":998,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:77",{"_index":1164,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:83",{"_index":1177,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:86",{"_index":1007,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:91",{"_index":1010,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:95",{"_index":1012,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list/dish",{"_index":585,"title":{},"body":{"components/FoodPageComponent.html":{}}}],["list/persons",{"_index":897,"title":{},"body":{"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{}}}],["list/user",{"_index":899,"title":{},"body":{"components/PeoplePageComponent.html":{},"components/UserListComponent.html":{}}}],["logged",{"_index":867,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["login",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["login(data",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginform",{"_index":832,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginmodel",{"_index":155,"title":{"interfaces/LoginModel.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/TokenModel.html":{}}}],["loginpagecomponent",{"_index":68,"title":{"components/LoginPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["logout",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"components/DefaultComponent.html":{}}}],["male",{"_index":1095,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["map",{"_index":107,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["mapedevents",{"_index":717,"title":{},"body":{"components/HomePageComponent.html":{}}}],["mapedevents.sort(x=>x.rowingrid",{"_index":725,"title":{},"body":{"components/HomePageComponent.html":{}}}],["match",{"_index":286,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["matching",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["md",{"_index":1254,"title":{},"body":{"components/UserListComponent.html":{}}}],["meaning",{"_index":128,"title":{},"body":{"guards/AuthGuard.html":{}}}],["menu",{"_index":314,"title":{},"body":{"components/DefaultComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"pipes/EventPipe.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["methods",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["miscellaneous",{"_index":1337,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["models/auth.interface",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["models/dish.interface",{"_index":382,"title":{},"body":{"injectables/DishService.html":{}}}],["models/event.interface",{"_index":521,"title":{},"body":{"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{}}}],["models/ingredient.interface",{"_index":819,"title":{},"body":{"injectables/IngredientService.html":{}}}],["models/person.interface",{"_index":472,"title":{},"body":{"injectables/EditService.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"injectables/UserService.html":{}}}],["models/user.interface",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["modules",{"_index":1388,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monday",{"_index":698,"title":{},"body":{"components/HomePageComponent.html":{}}}],["month",{"_index":619,"title":{},"body":{"components/HomePageComponent.html":{}}}],["more",{"_index":1385,"title":{},"body":{"index.html":{}}}],["mother's",{"_index":1100,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["mother\\'s",{"_index":1114,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["mothers",{"_index":1090,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["mx",{"_index":1269,"title":{},"body":{"components/UserListComponent.html":{}}}],["name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/UserCreate.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"index.html":{}}}],["name:string",{"_index":1124,"title":{},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["navigate",{"_index":1355,"title":{},"body":{"index.html":{}}}],["need",{"_index":1380,"title":{},"body":{"index.html":{}}}],["needed",{"_index":115,"title":{},"body":{"guards/AuthGuard.html":{}}}],["needs",{"_index":871,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["network",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{}}}],["new",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["next",{"_index":103,"title":{},"body":{"guards/AuthGuard.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["next:(x",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["next:x",{"_index":1079,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["nextmonth",{"_index":603,"title":{},"body":{"components/HomePageComponent.html":{}}}],["ng",{"_index":1352,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":223,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["nickname",{"_index":914,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["nickname:string",{"_index":920,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["none",{"_index":1218,"title":{},"body":{"components/UserListComponent.html":{}}}],["nonnullable",{"_index":847,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["normalizestring",{"_index":986,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["normalizestring(ob",{"_index":1000,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["normalizestring(ob:string",{"_index":1081,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["normalizestring(person.firstname).indexof(normalizestring(search",{"_index":1085,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["normalizestring(user.username).indexof(normalizestring(searchusers",{"_index":1216,"title":{},"body":{"components/UserListComponent.html":{}}}],["notfoundpagecomponent",{"_index":70,"title":{"components/NotFoundPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["null",{"_index":268,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{},"components/ValidateEmailPageComponent.html":{}}}],["number",{"_index":282,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"injectables/EditService.html":{},"interfaces/EventDetailModel.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["ob",{"_index":1002,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["ob.normalize().touppercase().replaceall",{"_index":1082,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["object.keys(model).foreach((key",{"_index":969,"title":{},"body":{"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["object.keys(this.editingpersonbase).foreach",{"_index":1066,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["object.keys(updated).foreach((key",{"_index":408,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{}}}],["object.values(form.controls).foreach(control",{"_index":259,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["observable",{"_index":104,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{}}}],["of(false",{"_index":130,"title":{},"body":{"guards/AuthGuard.html":{}}}],["of(true",{"_index":127,"title":{},"body":{"guards/AuthGuard.html":{}}}],["onblur",{"_index":987,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["onblur(field",{"_index":1003,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["oninit",{"_index":205,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["onsubmit",{"_index":837,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["op",{"_index":410,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["open",{"_index":313,"title":{},"body":{"components/DefaultComponent.html":{}}}],["opencreatemodal",{"_index":988,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["opendishcreate",{"_index":421,"title":{},"body":{"injectables/EditService.html":{}}}],["opendishcreatemodal",{"_index":428,"title":{},"body":{"injectables/EditService.html":{}}}],["opendishcreatemodal(url",{"_index":438,"title":{},"body":{"injectables/EditService.html":{}}}],["opendishcreatemodal(url:string",{"_index":486,"title":{},"body":{"injectables/EditService.html":{}}}],["opendisheditmodal",{"_index":429,"title":{},"body":{"injectables/EditService.html":{}}}],["opendisheditmodal(dishid",{"_index":440,"title":{},"body":{"injectables/EditService.html":{}}}],["openeditmodal",{"_index":989,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["openeditmodal(id",{"_index":1008,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["openeditmodal(id:string",{"_index":1054,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["openeventcreate",{"_index":422,"title":{},"body":{"injectables/EditService.html":{},"components/HomePageComponent.html":{}}}],["openeventcreatemodal",{"_index":430,"title":{},"body":{"injectables/EditService.html":{}}}],["openeventcreatemodal(url",{"_index":442,"title":{},"body":{"injectables/EditService.html":{}}}],["openeventcreatemodal(url:string",{"_index":488,"title":{},"body":{"injectables/EditService.html":{}}}],["openeventedit",{"_index":604,"title":{},"body":{"components/HomePageComponent.html":{}}}],["openeventedit(id",{"_index":625,"title":{},"body":{"components/HomePageComponent.html":{}}}],["openeventedit(id:string",{"_index":735,"title":{},"body":{"components/HomePageComponent.html":{}}}],["openeventeditmodal",{"_index":431,"title":{},"body":{"injectables/EditService.html":{}}}],["openeventeditmodal(eventid",{"_index":444,"title":{},"body":{"injectables/EditService.html":{}}}],["openpersoncreate",{"_index":423,"title":{},"body":{"injectables/EditService.html":{}}}],["openpersoncreatemodal",{"_index":432,"title":{},"body":{"injectables/EditService.html":{}}}],["openpersoncreatemodal(url",{"_index":447,"title":{},"body":{"injectables/EditService.html":{}}}],["openpersoncreatemodal(url:string",{"_index":484,"title":{},"body":{"injectables/EditService.html":{}}}],["openpersonedit",{"_index":1132,"title":{},"body":{"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["openpersoneditmodal",{"_index":433,"title":{},"body":{"injectables/EditService.html":{}}}],["openpersoneditmodal(personid",{"_index":449,"title":{},"body":{"injectables/EditService.html":{}}}],["optional",{"_index":97,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["out",{"_index":318,"title":{},"body":{"components/DefaultComponent.html":{},"components/UserListComponent.html":{},"index.html":{}}}],["overflow",{"_index":1249,"title":{},"body":{"components/UserListComponent.html":{}}}],["overview",{"_index":1386,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":1230,"title":{},"body":{"components/UserListComponent.html":{}}}],["package",{"_index":1318,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["page.component.html",{"_index":210,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["page.component.scss",{"_index":209,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["page.component.ts",{"_index":204,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["page.component.ts:114",{"_index":622,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:125",{"_index":627,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:136",{"_index":637,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:14",{"_index":1315,"title":{},"body":{"components/ValidateEmailPageComponent.html":{}}}],["page.component.ts:141",{"_index":615,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:15",{"_index":1314,"title":{},"body":{"components/ValidateEmailPageComponent.html":{}}}],["page.component.ts:16",{"_index":229,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["page.component.ts:17",{"_index":228,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:172",{"_index":617,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:176",{"_index":629,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:18",{"_index":235,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:181",{"_index":632,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:186",{"_index":624,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:19",{"_index":236,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:191",{"_index":626,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:196",{"_index":634,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:20",{"_index":1134,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["page.component.ts:209",{"_index":612,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:21",{"_index":230,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["page.component.ts:22",{"_index":231,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:23",{"_index":233,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:24",{"_index":852,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:25",{"_index":218,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{}}}],["page.component.ts:26",{"_index":650,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{}}}],["page.component.ts:27",{"_index":649,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:28",{"_index":844,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:29",{"_index":221,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:31",{"_index":640,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{}}}],["page.component.ts:32",{"_index":642,"title":{},"body":{"components/HomePageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:33",{"_index":848,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:34",{"_index":648,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:37",{"_index":623,"title":{},"body":{"components/HomePageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:38",{"_index":850,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:42",{"_index":840,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:48",{"_index":1133,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["page.component.ts:50",{"_index":224,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{}}}],["page.component.ts:56",{"_index":842,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:60",{"_index":841,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:62",{"_index":219,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{}}}],["page.component.ts:74",{"_index":620,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:75",{"_index":220,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["page/change",{"_index":203,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["page/food",{"_index":582,"title":{},"body":{"components/FoodPageComponent.html":{}}}],["page/home",{"_index":588,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page/login",{"_index":830,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page/not",{"_index":892,"title":{},"body":{"components/NotFoundPageComponent.html":{}}}],["page/people",{"_index":895,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["page/user",{"_index":1130,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["page/validate",{"_index":1312,"title":{},"body":{"components/ValidateEmailPageComponent.html":{}}}],["parameters",{"_index":96,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["params.get(\"email",{"_index":256,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["params.get(\"passwordtoken",{"_index":254,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["partial",{"_index":364,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["participants",{"_index":508,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"components/HomePageComponent.html":{}}}],["password",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["password.touched",{"_index":277,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["password2",{"_index":1154,"title":{},"body":{"components/UserListComponent.html":{}}}],["password:string",{"_index":828,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["passwordcheck",{"_index":213,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["passwordmismatch",{"_index":214,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserListComponent.html":{}}}],["passwordresetmodel",{"_index":151,"title":{"interfaces/PasswordResetModel.html":{}},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/TokenModel.html":{}}}],["patch",{"_index":369,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["patch(id",{"_index":548,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["patch(id:string,model:partial",{"_index":574,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["patch.push",{"_index":409,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["patch:partial",{"_index":1064,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["patchdish",{"_index":352,"title":{},"body":{"injectables/DishService.html":{}}}],["patchdish(id",{"_index":368,"title":{},"body":{"injectables/DishService.html":{}}}],["patchdish(id:string|undefined,patch:partial",{"_index":387,"title":{},"body":{"injectables/DishService.html":{}}}],["patchingredient",{"_index":803,"title":{},"body":{"injectables/IngredientService.html":{}}}],["patchingredient(id",{"_index":810,"title":{},"body":{"injectables/IngredientService.html":{}}}],["patchingredient(id:string|undefined,patch:partial",{"_index":821,"title":{},"body":{"injectables/IngredientService.html":{}}}],["patchingredientdish",{"_index":353,"title":{},"body":{"injectables/DishService.html":{}}}],["patchingredientdish(id",{"_index":371,"title":{},"body":{"injectables/DishService.html":{}}}],["patchingredientdish(id:string,patch:partial",{"_index":400,"title":{},"body":{"injectables/DishService.html":{}}}],["path",{"_index":114,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["people",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["peoplepagecomponent",{"_index":72,"title":{"components/PeoplePageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["person",{"_index":789,"title":{},"body":{"components/HomePageComponent.html":{},"pipes/PersonPipe.html":{},"components/PersonsListComponent.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{}}}],["person.age",{"_index":1086,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["person.firstname",{"_index":933,"title":{},"body":{"pipes/PersonPipe.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["person.interface",{"_index":499,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["person.lastname",{"_index":935,"title":{},"body":{"pipes/PersonPipe.html":{}}}],["person.nickname!=null?person.nickname",{"_index":934,"title":{},"body":{"pipes/PersonPipe.html":{}}}],["person:\"fullname",{"_index":792,"title":{},"body":{"components/HomePageComponent.html":{}}}],["personal",{"_index":1089,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["personcreatemodel",{"_index":471,"title":{"interfaces/PersonCreateModel.html":{}},"body":{"injectables/EditService.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"injectables/UserService.html":{}}}],["persondetailmodel",{"_index":497,"title":{"interfaces/PersonDetailModel.html":{}},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["persondetailmodel|smallpersondetailmodel",{"_index":930,"title":{},"body":{"pipes/PersonPipe.html":{}}}],["personid",{"_index":451,"title":{},"body":{"injectables/EditService.html":{},"injectables/EventService.html":{},"interfaces/UserCreate.html":{}}}],["personid:string",{"_index":1125,"title":{},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["personpipe",{"_index":590,"title":{"pipes/PersonPipe.html":{}},"body":{"components/HomePageComponent.html":{},"pipes/PersonPipe.html":{}}}],["persons",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["personservice",{"_index":936,"title":{"injectables/PersonService.html":{}},"body":{"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["personservice=inject(personservice",{"_index":1033,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["personslistcomponent",{"_index":74,"title":{"components/PersonsListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["personstatus",{"_index":919,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"miscellaneous/enumerations.html":{}}}],["phone",{"_index":1098,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["phonenumber",{"_index":915,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["phonenumberoffather",{"_index":916,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["phonenumberofmother",{"_index":917,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["pipe",{"_index":511,"title":{"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{}},"body":{"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{}}}],["pipes",{"_index":513,"title":{},"body":{"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{},"overview.html":{}}}],["pipes/event.pipe",{"_index":653,"title":{},"body":{"components/HomePageComponent.html":{}}}],["pipes/person.pipe",{"_index":652,"title":{},"body":{"components/HomePageComponent.html":{}}}],["pipetransform",{"_index":520,"title":{},"body":{"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{}}}],["pl",{"_index":1252,"title":{},"body":{"components/UserListComponent.html":{}}}],["place",{"_index":493,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"components/HomePageComponent.html":{}}}],["placeholders",{"_index":706,"title":{},"body":{"components/HomePageComponent.html":{}}}],["platform",{"_index":1377,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":1257,"title":{},"body":{"components/UserListComponent.html":{}}}],["popreturnurl",{"_index":434,"title":{},"body":{"injectables/EditService.html":{}}}],["post(`${this.baseurl}/logout",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["postcss",{"_index":1330,"title":{},"body":{"dependencies.html":{}}}],["pr",{"_index":1253,"title":{},"body":{"components/UserListComponent.html":{}}}],["previous",{"_index":707,"title":{},"body":{"components/HomePageComponent.html":{}}}],["previusmonth",{"_index":605,"title":{},"body":{"components/HomePageComponent.html":{}}}],["price",{"_index":799,"title":{},"body":{"interfaces/IngredientDishDetail.html":{}}}],["price:number",{"_index":340,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["priceforunit",{"_index":796,"title":{},"body":{"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{}}}],["priceforunit:number",{"_index":341,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["private",{"_index":118,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["project",{"_index":1343,"title":{},"body":{"index.html":{}}}],["properties",{"_index":23,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"properties.html":{}}}],["protected",{"_index":293,"title":{},"body":{"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/PeoplePageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["providedin",{"_index":116,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["providerouter(routes),providehttpclient",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["putdaytoview",{"_index":606,"title":{},"body":{"components/HomePageComponent.html":{}}}],["putdaytoview(day",{"_index":628,"title":{},"body":{"components/HomePageComponent.html":{}}}],["putdaytoview(day:keyvalue",{"_index":728,"title":{},"body":{"components/HomePageComponent.html":{}}}],["puteventtoview",{"_index":607,"title":{},"body":{"components/HomePageComponent.html":{}}}],["puteventtoview(eventid",{"_index":631,"title":{},"body":{"components/HomePageComponent.html":{}}}],["puteventtoview(eventid:string",{"_index":731,"title":{},"body":{"components/HomePageComponent.html":{}}}],["přihlásit",{"_index":321,"title":{},"body":{"components/DefaultComponent.html":{}}}],["query",{"_index":1296,"title":{},"body":{"injectables/UserService.html":{}}}],["reactiveformsmodule",{"_index":206,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["readonly",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["redirect",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{}}}],["reference",{"_index":1387,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":294,"title":{},"body":{"components/DefaultComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["refreshpersons",{"_index":1159,"title":{},"body":{"components/UserListComponent.html":{}}}],["reload",{"_index":1359,"title":{},"body":{"index.html":{}}}],["remove",{"_index":990,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["removedish",{"_index":354,"title":{},"body":{"injectables/DishService.html":{}}}],["removedish(id",{"_index":373,"title":{},"body":{"injectables/DishService.html":{}}}],["removedishfromevent",{"_index":535,"title":{},"body":{"injectables/EventService.html":{}}}],["removedishfromevent(id",{"_index":550,"title":{},"body":{"injectables/EventService.html":{}}}],["removeingredient",{"_index":804,"title":{},"body":{"injectables/IngredientService.html":{}}}],["removeingredient(id",{"_index":812,"title":{},"body":{"injectables/IngredientService.html":{}}}],["removeingredientfromdish",{"_index":355,"title":{},"body":{"injectables/DishService.html":{}}}],["removeingredientfromdish(model",{"_index":375,"title":{},"body":{"injectables/DishService.html":{}}}],["removeingredientfromdish(model:dishingredientmodel",{"_index":403,"title":{},"body":{"injectables/DishService.html":{}}}],["removepersonfromevent",{"_index":536,"title":{},"body":{"injectables/EventService.html":{}}}],["removepersonfromevent(id",{"_index":552,"title":{},"body":{"injectables/EventService.html":{}}}],["removerole",{"_index":1276,"title":{},"body":{"injectables/UserService.html":{}}}],["removerole(id",{"_index":1287,"title":{},"body":{"injectables/UserService.html":{}}}],["removerole(id:string",{"_index":1307,"title":{},"body":{"injectables/UserService.html":{}}}],["replace",{"_index":411,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["replaysubject",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{}}}],["replaysubject(1",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["request",{"_index":954,"title":{},"body":{"injectables/PersonService.html":{}}}],["request.subscribe",{"_index":957,"title":{},"body":{"injectables/PersonService.html":{}}}],["required",{"_index":870,"title":{},"body":{"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["res",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":875,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["resetemail",{"_index":849,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["resetform",{"_index":833,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["resetingpassword",{"_index":834,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["resetpassword",{"_index":838,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["resetpassword():void",{"_index":862,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["response",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{}}}],["responsible",{"_index":790,"title":{},"body":{"components/HomePageComponent.html":{}}}],["responsibleperson",{"_index":507,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{}}}],["responsiblepersonid",{"_index":494,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{}}}],["results",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":119,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["returnurl",{"_index":424,"title":{},"body":{"injectables/EditService.html":{}}}],["returnurl:any",{"_index":475,"title":{},"body":{"injectables/EditService.html":{}}}],["rgba(95",{"_index":1261,"title":{},"body":{"components/UserListComponent.html":{}}}],["role",{"_index":1128,"title":{},"body":{"interfaces/UserDetail.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["role:string",{"_index":1122,"title":{},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["role==\"\"?'none':role",{"_index":1226,"title":{},"body":{"components/UserListComponent.html":{}}}],["role==\"\"?\\'none\\':role",{"_index":1273,"title":{},"body":{"components/UserListComponent.html":{}}}],["roles",{"_index":1155,"title":{},"body":{"components/UserListComponent.html":{}}}],["roles;track",{"_index":1225,"title":{},"body":{"components/UserListComponent.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["rounded",{"_index":1239,"title":{},"body":{"components/UserListComponent.html":{}}}],["route",{"_index":215,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["route=inject(activatedroute",{"_index":243,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["router",{"_index":94,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["router=inject(router",{"_index":244,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["routerlink",{"_index":238,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["routeroutlet",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{}}}],["routerstatesnapshot",{"_index":101,"title":{},"body":{"guards/AuthGuard.html":{}}}],["rowingrid",{"_index":510,"title":{},"body":{"interfaces/EventDetailModel.html":{}}}],["rowingrid?:number|null",{"_index":509,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{}}}],["rowsfull.push(firstempty",{"_index":724,"title":{},"body":{"components/HomePageComponent.html":{}}}],["rowsfull.push(x.rowingrid",{"_index":716,"title":{},"body":{"components/HomePageComponent.html":{}}}],["rowsfull=[1",{"_index":713,"title":{},"body":{"components/HomePageComponent.html":{}}}],["run",{"_index":1351,"title":{},"body":{"index.html":{}}}],["running",{"_index":1369,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":106,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":111,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["saturday",{"_index":697,"title":{},"body":{"components/HomePageComponent.html":{}}}],["scaffolding",{"_index":1361,"title":{},"body":{"index.html":{}}}],["se",{"_index":322,"title":{},"body":{"components/DefaultComponent.html":{}}}],["search",{"_index":981,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["search:string",{"_index":1035,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["searchingredients",{"_index":982,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["searchingredients:string",{"_index":1036,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["searchusers",{"_index":1156,"title":{},"body":{"components/UserListComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["sent",{"_index":877,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["sentreset",{"_index":835,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["sentreset=false",{"_index":856,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["serve",{"_index":1353,"title":{},"body":{"index.html":{}}}],["server",{"_index":1350,"title":{},"body":{"index.html":{}}}],["services/auth.service",{"_index":112,"title":{},"body":{"guards/AuthGuard.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/LoginPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["services/edit.service",{"_index":654,"title":{},"body":{"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["services/event.service",{"_index":651,"title":{},"body":{"components/HomePageComponent.html":{}}}],["services/person.service",{"_index":1030,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["services/user.service",{"_index":855,"title":{},"body":{"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["seting",{"_index":274,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["shadow",{"_index":1232,"title":{},"body":{"components/UserListComponent.html":{}}}],["sign",{"_index":317,"title":{},"body":{"components/DefaultComponent.html":{}}}],["skarabeus",{"_index":311,"title":{},"body":{"components/DefaultComponent.html":{}}}],["skarabeus_ui",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["skarabeusui",{"_index":1342,"title":{},"body":{"index.html":{}}}],["smallpersondetailmodel",{"_index":498,"title":{"interfaces/SmallPersonDetailModel.html":{}},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["sort",{"_index":712,"title":{},"body":{"components/HomePageComponent.html":{}}}],["sort((a",{"_index":683,"title":{},"body":{"components/HomePageComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"index.html":{}}}],["spaces",{"_index":1107,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["spelling",{"_index":884,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/.../app.config.ts",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../person.interface.ts",{"_index":1339,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/components/persons",{"_index":970,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["src/app/components/user",{"_index":1150,"title":{},"body":{"components/UserListComponent.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":89,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:10",{"_index":95,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:17",{"_index":102,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/layouts/default/default.component.ts",{"_index":287,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.component.ts:15",{"_index":300,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.component.ts:17",{"_index":296,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.component.ts:22",{"_index":301,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.component.ts:23",{"_index":299,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.component.ts:27",{"_index":298,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.component.ts:31",{"_index":297,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/models/auth.interface.ts",{"_index":824,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/TokenModel.html":{}}}],["src/app/models/dish.interface.ts",{"_index":326,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["src/app/models/event.interface.ts",{"_index":491,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{}}}],["src/app/models/ingredient.interface.ts",{"_index":795,"title":{},"body":{"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{}}}],["src/app/models/person.interface.ts",{"_index":904,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/user.interface.ts",{"_index":1119,"title":{},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["src/app/pages/change",{"_index":202,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["src/app/pages/errors/not",{"_index":890,"title":{},"body":{"components/NotFoundPageComponent.html":{}}}],["src/app/pages/food",{"_index":581,"title":{},"body":{"components/FoodPageComponent.html":{}}}],["src/app/pages/home",{"_index":587,"title":{},"body":{"components/HomePageComponent.html":{}}}],["src/app/pages/login",{"_index":829,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/app/pages/people",{"_index":894,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["src/app/pages/user",{"_index":1129,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["src/app/pages/validate",{"_index":1311,"title":{},"body":{"components/ValidateEmailPageComponent.html":{}}}],["src/app/pipes/event.pipe.ts",{"_index":514,"title":{},"body":{"pipes/EventPipe.html":{}}}],["src/app/pipes/event.pipe.ts:10",{"_index":518,"title":{},"body":{"pipes/EventPipe.html":{}}}],["src/app/pipes/person.pipe.ts",{"_index":927,"title":{},"body":{"pipes/PersonPipe.html":{}}}],["src/app/pipes/person.pipe.ts:10",{"_index":929,"title":{},"body":{"pipes/PersonPipe.html":{}}}],["src/app/services/auth.service.ts",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:13",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:14",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:15",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:16",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:17",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:23",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:39",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:49",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:62",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:66",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/dish.service.ts",{"_index":348,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:11",{"_index":379,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:12",{"_index":380,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:13",{"_index":358,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:20",{"_index":370,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:26",{"_index":377,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:32",{"_index":360,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:40",{"_index":372,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:49",{"_index":376,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:57",{"_index":362,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:62",{"_index":374,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:70",{"_index":365,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/edit.service.ts",{"_index":415,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:10",{"_index":456,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:12",{"_index":464,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:13",{"_index":466,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:15",{"_index":461,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:16",{"_index":463,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:18",{"_index":458,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:19",{"_index":460,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:21",{"_index":470,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:23",{"_index":469,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:24",{"_index":468,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:25",{"_index":467,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:27",{"_index":450,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:32",{"_index":441,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:37",{"_index":445,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:42",{"_index":437,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:46",{"_index":435,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:50",{"_index":436,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:54",{"_index":448,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:59",{"_index":439,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:64",{"_index":443,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:69",{"_index":452,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:9",{"_index":454,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/event.service.ts",{"_index":530,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:10",{"_index":556,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:11",{"_index":557,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:12",{"_index":538,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:18",{"_index":554,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:31",{"_index":546,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:35",{"_index":544,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:39",{"_index":549,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:45",{"_index":542,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:50",{"_index":553,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:55",{"_index":540,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:60",{"_index":551,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:69",{"_index":547,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/ingredient.service.ts",{"_index":801,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/ingredient.service.ts:10",{"_index":816,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/ingredient.service.ts:11",{"_index":817,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/ingredient.service.ts:12",{"_index":806,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/ingredient.service.ts:19",{"_index":811,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/ingredient.service.ts:25",{"_index":814,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/ingredient.service.ts:31",{"_index":808,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/ingredient.service.ts:36",{"_index":813,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/ingredient.service.ts:41",{"_index":809,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/person.service.ts",{"_index":937,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/person.service.ts:10",{"_index":949,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/person.service.ts:11",{"_index":950,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/person.service.ts:12",{"_index":939,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/person.service.ts:19",{"_index":946,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/person.service.ts:42",{"_index":941,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/person.service.ts:46",{"_index":940,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/person.service.ts:50",{"_index":944,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/person.service.ts:57",{"_index":943,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/user.service.ts",{"_index":1274,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:12",{"_index":1293,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:13",{"_index":1294,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:14",{"_index":1278,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:21",{"_index":1291,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:26",{"_index":1281,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:30",{"_index":1286,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:37",{"_index":1282,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:41",{"_index":1290,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:45",{"_index":1280,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:49",{"_index":1288,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:53",{"_index":1283,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:69",{"_index":1285,"title":{},"body":{"injectables/UserService.html":{}}}],["standalone",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"pipes/EventPipe.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["standalone:true",{"_index":240,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"pipes/EventPipe.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["start",{"_index":495,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{}}}],["startdate",{"_index":523,"title":{},"body":{"pipes/EventPipe.html":{}}}],["started",{"_index":1341,"title":{"index.html":{}},"body":{}}],["starts",{"_index":785,"title":{},"body":{"components/HomePageComponent.html":{}}}],["startweekday",{"_index":693,"title":{},"body":{"components/HomePageComponent.html":{}}}],["state",{"_index":100,"title":{},"body":{"guards/AuthGuard.html":{}}}],["status",{"_index":918,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["stored",{"_index":1366,"title":{},"body":{"index.html":{}}}],["string",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{}}}],["stringtocolor",{"_index":608,"title":{},"body":{"components/HomePageComponent.html":{}}}],["stringtocolor((event.start+(event.rowingrid!/4",{"_index":774,"title":{},"body":{"components/HomePageComponent.html":{}}}],["stringtocolor(input",{"_index":633,"title":{},"body":{"components/HomePageComponent.html":{}}}],["stringtodate",{"_index":609,"title":{},"body":{"components/HomePageComponent.html":{}}}],["stringtodate(dt",{"_index":636,"title":{},"body":{"components/HomePageComponent.html":{}}}],["styles",{"_index":201,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["styleurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PersonsListComponent.html":{}}}],["styleurls",{"_index":208,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["subscribe",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["subscribe((res",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["subscribe(x",{"_index":561,"title":{},"body":{"injectables/EventService.html":{},"injectables/UserService.html":{}}}],["subscribe(x=>{this.dishes.next(x",{"_index":394,"title":{},"body":{"injectables/DishService.html":{}}}],["subscribe(x=>{this.ingredients.next(x",{"_index":822,"title":{},"body":{"injectables/IngredientService.html":{}}}],["succesfuly",{"_index":273,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["sunday",{"_index":695,"title":{},"body":{"components/HomePageComponent.html":{}}}],["support",{"_index":887,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["switch",{"_index":1092,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["switch(args",{"_index":522,"title":{},"body":{"pipes/EventPipe.html":{}}}],["switch(format",{"_index":931,"title":{},"body":{"pipes/PersonPipe.html":{}}}],["switchmap",{"_index":109,"title":{},"body":{"guards/AuthGuard.html":{}}}],["switchmap(user",{"_index":124,"title":{},"body":{"guards/AuthGuard.html":{}}}],["t",{"_index":366,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["tailwindcss/postcss",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["take",{"_index":110,"title":{},"body":{"guards/AuthGuard.html":{}}}],["take(1",{"_index":121,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tap",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["tap((response",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["test",{"_index":1372,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1381,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1371,"title":{},"body":{"index.html":{}}}],["text",{"_index":1247,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.acountcreation",{"_index":248,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.activecreatemodal",{"_index":1062,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.activecreatemodal=false",{"_index":1059,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.activecreatemodal=true",{"_index":1200,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.activeeditmodal",{"_index":1057,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.activeeditmodal=false",{"_index":1048,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.addeventstodays",{"_index":685,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.authservice.changepassword(this.model).subscribe",{"_index":263,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.authservice.login(data).subscribe",{"_index":858,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.authservice.logout",{"_index":308,"title":{},"body":{"components/DefaultComponent.html":{}}}],["this.authservice.userinfo",{"_index":307,"title":{},"body":{"components/DefaultComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["this.authservice.userinfomodel",{"_index":302,"title":{},"body":{"components/DefaultComponent.html":{},"components/PeoplePageComponent.html":{}}}],["this.authservice.userinfomodel$.pipe",{"_index":120,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.userinfomodel$.subscribe(x=>this.user",{"_index":1136,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["this.authservice.validateemail({email:params.get(\"email\")!,token:params.get(\"token\")!}).subscribe",{"_index":249,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["this.baseurl",{"_index":392,"title":{},"body":{"injectables/DishService.html":{},"injectables/IngredientService.html":{}}}],["this.baseurl}/${id",{"_index":390,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["this.baseurl}/adddishtoevent/${id}/${dishid",{"_index":579,"title":{},"body":{"injectables/EventService.html":{}}}],["this.baseurl}/addingredienttodish",{"_index":396,"title":{},"body":{"injectables/DishService.html":{}}}],["this.baseurl}/addpersontoevent/${id}/${personid",{"_index":576,"title":{},"body":{"injectables/EventService.html":{}}}],["this.baseurl}/removedishfromevent/${id}/${dishid",{"_index":580,"title":{},"body":{"injectables/EventService.html":{}}}],["this.baseurl}/removeingredientfromdish",{"_index":404,"title":{},"body":{"injectables/DishService.html":{}}}],["this.baseurl}/removepersonfromevent/${id}/${personid",{"_index":577,"title":{},"body":{"injectables/EventService.html":{}}}],["this.baseurl}/updateingredientdish/${id",{"_index":401,"title":{},"body":{"injectables/DishService.html":{}}}],["this.calendar.foreach(x",{"_index":666,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.calendar.map",{"_index":686,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.calendar.some(z",{"_index":678,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.calendar=this.getcalendargrid(this.editservice.calendaryear,this.editservice.calendarmonth",{"_index":673,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.calendar[this.calendar.indexof(week",{"_index":745,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.changepassword",{"_index":262,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.checkpasswords",{"_index":261,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserListComponent.html":{}}}],["this.closecreatemodal",{"_index":1080,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.closeeditmodal",{"_index":1075,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.create",{"_index":1061,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.creatingperson",{"_index":1058,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.creatinguser",{"_index":1202,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.creatinguser.name",{"_index":1198,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.creatinguser.password",{"_index":1213,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.currentmonth,new",{"_index":646,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.dishes.asobservable",{"_index":381,"title":{},"body":{"injectables/DishService.html":{}}}],["this.dropdownvisible",{"_index":306,"title":{},"body":{"components/DefaultComponent.html":{}}}],["this.editdishid.asobservable",{"_index":459,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editdishid.next(dishid",{"_index":479,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editdishid.next(null",{"_index":482,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editeventid.asobservable",{"_index":462,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editeventid.next(eventid",{"_index":480,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editeventid.next(null",{"_index":483,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editingperson",{"_index":1046,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.editingpersonbase",{"_index":1047,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.editinguser",{"_index":1204,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.editinguserbase",{"_index":1196,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.editpersonid.asobservable",{"_index":465,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editpersonid.next(null",{"_index":481,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editpersonid.next(personid",{"_index":478,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editservice.calendarmonth",{"_index":639,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.editservice.calendaryear",{"_index":641,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.editservice.closepersonedit",{"_index":1049,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.editservice.editpersonid$.subscribe(x=>{if(x!=null)this.openeditmodal(x",{"_index":1042,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.editservice.openeventcreatemodal(this.router.url",{"_index":733,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.editservice.openeventeditmodal(id,this.router.url",{"_index":736,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.editservice.openpersoncreate",{"_index":1045,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.editservice.openpersoneditmodal(this.editinguser.person.id",{"_index":1194,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.editservice.openpersoneditmodal(this.user.person.id",{"_index":1137,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["this.editservice.popreturnurl",{"_index":1050,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.events",{"_index":676,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.events.asobservable",{"_index":558,"title":{},"body":{"injectables/EventService.html":{}}}],["this.events.find(x=>x.id==eventid",{"_index":732,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.events.find(y=>y.id==x.id)!.rowingrid",{"_index":722,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.events.next(x",{"_index":569,"title":{},"body":{"injectables/EventService.html":{}}}],["this.eventservice.events$.subscribe",{"_index":674,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.fb.group",{"_index":845,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.generatecalendar",{"_index":664,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.generatepatch(model",{"_index":966,"title":{},"body":{"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["this.httpclient",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.delete(`${this.baseurl}/${id",{"_index":571,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{}}}],["this.httpclient.delete(`${this.baseurl}/softdelete/${id",{"_index":1302,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.delete(url",{"_index":578,"title":{},"body":{"injectables/EventService.html":{},"injectables/IngredientService.html":{}}}],["this.httpclient.delete(url).subscribe",{"_index":407,"title":{},"body":{"injectables/DishService.html":{}}}],["this.httpclient.get(`${this.baseurl",{"_index":956,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.httpclient.get(`${this.baseurl}/addrole`,{params:{userid:id,role:role",{"_index":1306,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get(`${this.baseurl}/changepassword/${email",{"_index":1310,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get(`${this.baseurl}/removerole`,{params:{userid:id",{"_index":1308,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get(`${this.baseurl}/undeleteuser/${id",{"_index":1304,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get(`${this.baseurl}/unfiltred",{"_index":955,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.httpclient.get(this.baseurl",{"_index":560,"title":{},"body":{"injectables/EventService.html":{},"injectables/UserService.html":{}}}],["this.httpclient.get(url",{"_index":393,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{}}}],["this.httpclient.patch(url,patch",{"_index":968,"title":{},"body":{"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["this.httpclient.patch(url,this.generatepatch(model",{"_index":575,"title":{},"body":{"injectables/EventService.html":{}}}],["this.httpclient.patch(url,this.generatepatch(patch",{"_index":391,"title":{},"body":{"injectables/DishService.html":{},"injectables/IngredientService.html":{}}}],["this.httpclient.post(`${this.baseurl}/changepassword`,model",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${this.baseurl}/createuser`,model",{"_index":1301,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.post(`${this.baseurl}/login",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${this.baseurl}/validateemail`,model",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${this.baseurl}`,model",{"_index":573,"title":{},"body":{"injectables/EventService.html":{}}}],["this.httpclient.post(this.baseurl,model",{"_index":965,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.httpclient.post(url,data",{"_index":406,"title":{},"body":{"injectables/DishService.html":{},"injectables/IngredientService.html":{}}}],["this.httpclient.post(url,model).subscribe",{"_index":397,"title":{},"body":{"injectables/DishService.html":{}}}],["this.ingredients.asobservable",{"_index":818,"title":{},"body":{"injectables/IngredientService.html":{}}}],["this.lasterror",{"_index":859,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.lasterror$=err.error",{"_index":264,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.lasterror$=error.error",{"_index":251,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["this.loginform.getrawvalue",{"_index":857,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.model.email",{"_index":255,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.model.password",{"_index":266,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.model.token",{"_index":253,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.opencreatemodal",{"_index":1044,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.opendishcreate",{"_index":487,"title":{},"body":{"injectables/EditService.html":{}}}],["this.openeventcreate",{"_index":489,"title":{},"body":{"injectables/EditService.html":{}}}],["this.openpersoncreate",{"_index":485,"title":{},"body":{"injectables/EditService.html":{}}}],["this.password2",{"_index":1201,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.passwordcheck",{"_index":267,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.passwordmismatch",{"_index":265,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserListComponent.html":{}}}],["this.persons$.subscribe(x",{"_index":1055,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.persons.asobservable",{"_index":951,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.persons.next(x.map(y",{"_index":958,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.personservice.create(this.creatingperson",{"_index":1078,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.personservice.delete(this.editingperson$.id",{"_index":1074,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.personservice.patch(this.editingperson$.id",{"_index":1072,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.personservice.patch(this.editingperson$.id,patch",{"_index":1070,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.personservice.persons",{"_index":1023,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.personservice.updatepersons",{"_index":1063,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.putdaytoview(todaypair",{"_index":672,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.refresh",{"_index":309,"title":{},"body":{"components/DefaultComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.resetingpassword",{"_index":861,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.returnurl",{"_index":477,"title":{},"body":{"injectables/EditService.html":{}}}],["this.route.queryparammap.subscribe(params",{"_index":246,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["this.router.navigate",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate(['/events",{"_index":734,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.router.navigate(['/login",{"_index":129,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{}}}],["this.router.navigate(['/people",{"_index":1139,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["this.router.navigatebyurl(url",{"_index":1053,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.router.url",{"_index":1138,"title":{},"body":{"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["this.searchusers",{"_index":1199,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.sentreset=true",{"_index":864,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.stringtodate(a.start).gettime",{"_index":684,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.stringtodate(b.start).gettime",{"_index":711,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.stringtodate(event.start).gettime",{"_index":710,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.stringtodate(y.end).gettime",{"_index":682,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.stringtodate(y.start).gettime",{"_index":681,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.today.gettime",{"_index":670,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.today.sethours(1",{"_index":663,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.updatedishes",{"_index":386,"title":{},"body":{"injectables/DishService.html":{}}}],["this.updatedishes(),console.log(response",{"_index":398,"title":{},"body":{"injectables/DishService.html":{}}}],["this.updateevents",{"_index":559,"title":{},"body":{"injectables/EventService.html":{}}}],["this.updatefield(field",{"_index":1073,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["this.updateingredients",{"_index":820,"title":{},"body":{"injectables/IngredientService.html":{}}}],["this.updatepersons",{"_index":952,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.updateusers",{"_index":1298,"title":{},"body":{"injectables/UserService.html":{}}}],["this.user",{"_index":1141,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["this.userinfo",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userinfomodel.asobservable",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userinfomodel.next(null",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userinfomodel.next(x",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.users$.subscribe",{"_index":1203,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.users.asobservable",{"_index":1295,"title":{},"body":{"injectables/UserService.html":{}}}],["this.users.next(x);console.log(x",{"_index":1299,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.addrole(this.editinguser.id,this.editinguser.role).subscribe(x=>this.refresh",{"_index":1211,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.changepassword(this.resetform.getrawvalue().resetemail",{"_index":863,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.userservice.create(this.creatinguser",{"_index":1205,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.delete(this.editinguser.id",{"_index":1206,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.patch(this.editinguser.id",{"_index":1212,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.patch(this.user.id",{"_index":1142,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["this.userservice.removerole(this.editinguser.id).subscribe(x=>this.refresh",{"_index":1210,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.undelete(this.editinguser.id",{"_index":1207,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.updateusers",{"_index":1195,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.users",{"_index":1185,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userupdatebase",{"_index":1140,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["this.viewday",{"_index":730,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.vieweventdetail",{"_index":729,"title":{},"body":{"components/HomePageComponent.html":{}}}],["time",{"_index":505,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"components/HomePageComponent.html":{}}}],["title",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["today",{"_index":594,"title":{},"body":{"components/HomePageComponent.html":{}}}],["today=new",{"_index":662,"title":{},"body":{"components/HomePageComponent.html":{}}}],["todaypair",{"_index":665,"title":{},"body":{"components/HomePageComponent.html":{}}}],["toggledropdown",{"_index":295,"title":{},"body":{"components/DefaultComponent.html":{}}}],["toggletoresetpassword",{"_index":839,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["token",{"_index":1117,"title":{},"body":{"interfaces/TokenModel.html":{}}}],["token:string",{"_index":826,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/TokenModel.html":{}}}],["tokenmodel",{"_index":161,"title":{"interfaces/TokenModel.html":{}},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/TokenModel.html":{},"components/ValidateEmailPageComponent.html":{}}}],["track",{"_index":757,"title":{},"body":{"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["transform",{"_index":515,"title":{},"body":{"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{},"components/UserListComponent.html":{}}}],["transform(event",{"_index":516,"title":{},"body":{"pipes/EventPipe.html":{}}}],["transform(person",{"_index":928,"title":{},"body":{"pipes/PersonPipe.html":{}}}],["transition",{"_index":1241,"title":{},"body":{"components/UserListComponent.html":{}}}],["translatey",{"_index":1264,"title":{},"body":{"components/UserListComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["trim",{"_index":1083,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["true",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["try",{"_index":878,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["tryvalidate",{"_index":217,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["tryvalidate(form",{"_index":222,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["tryvalidate(form:ngform",{"_index":257,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["tslib",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":346,"title":{},"body":{"interfaces/DishDetail.html":{},"injectables/DishService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{}}}],["undelete",{"_index":1160,"title":{},"body":{"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["undelete(id",{"_index":1289,"title":{},"body":{"injectables/UserService.html":{}}}],["undelete(id:string",{"_index":1303,"title":{},"body":{"injectables/UserService.html":{}}}],["unfiltred",{"_index":947,"title":{},"body":{"injectables/PersonService.html":{}}}],["unit",{"_index":1370,"title":{},"body":{"index.html":{}}}],["upcoming",{"_index":749,"title":{},"body":{"components/HomePageComponent.html":{}}}],["update",{"_index":991,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["updated",{"_index":367,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{}}}],["updatedishes",{"_index":356,"title":{},"body":{"injectables/DishService.html":{}}}],["updateevents",{"_index":537,"title":{},"body":{"injectables/EventService.html":{}}}],["updatefield",{"_index":992,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["updatefield(field",{"_index":1013,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["updateingredients",{"_index":805,"title":{},"body":{"injectables/IngredientService.html":{}}}],["updatepersons",{"_index":938,"title":{},"body":{"injectables/PersonService.html":{}}}],["updatepersons(unfiltred",{"_index":945,"title":{},"body":{"injectables/PersonService.html":{}}}],["updatepersons(unfiltred:boolean=true",{"_index":953,"title":{},"body":{"injectables/PersonService.html":{}}}],["updateusers",{"_index":1277,"title":{},"body":{"injectables/UserService.html":{}}}],["url",{"_index":389,"title":{},"body":{"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"injectables/UserService.html":{}}}],["url:string",{"_index":476,"title":{},"body":{"injectables/EditService.html":{}}}],["use",{"_index":1362,"title":{},"body":{"index.html":{}}}],["user",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["user.id",{"_index":1217,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.role",{"_index":316,"title":{},"body":{"components/DefaultComponent.html":{}}}],["user.username",{"_index":315,"title":{},"body":{"components/DefaultComponent.html":{},"components/UserListComponent.html":{}}}],["user:hover",{"_index":1255,"title":{},"body":{"components/UserListComponent.html":{}}}],["user>p",{"_index":1244,"title":{},"body":{"components/UserListComponent.html":{}}}],["usercreate",{"_index":1118,"title":{"interfaces/UserCreate.html":{}},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{}}}],["userdetail",{"_index":179,"title":{"interfaces/UserDetail.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{}}}],["userinfo",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["userinfomodel",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["userinfopagecomponent",{"_index":76,"title":{"components/UserInfoPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["userlistcomponent",{"_index":78,"title":{"components/UserListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["userlistcomponent,asyncpipe",{"_index":900,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["usermail.touched",{"_index":1148,"title":{},"body":{"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["username",{"_index":1123,"title":{},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["username.touched",{"_index":1146,"title":{},"body":{"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["userpatch",{"_index":1126,"title":{"interfaces/UserPatch.html":{}},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{}}}],["users",{"_index":1157,"title":{},"body":{"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":836,"title":{"injectables/UserService.html":{}},"body":{"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["userservice=inject(userservice",{"_index":1188,"title":{},"body":{"components/UserListComponent.html":{}}}],["userupdatebase",{"_index":1131,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["uuid",{"_index":500,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["valid",{"_index":872,"title":{},"body":{"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["validate",{"_index":1313,"title":{},"body":{"components/ValidateEmailPageComponent.html":{}}}],["validateandtrycreate",{"_index":1161,"title":{},"body":{"components/UserListComponent.html":{}}}],["validateandtrycreate(form",{"_index":1176,"title":{},"body":{"components/UserListComponent.html":{}}}],["validateemail",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["validateemail(model",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateemail(model:tokenmodel",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateemailpagecomponent",{"_index":79,"title":{"components/ValidateEmailPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["validators",{"_index":854,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["value",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/PeoplePageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/EditService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["variables",{"_index":1394,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1347,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1374,"title":{},"body":{"index.html":{}}}],["view",{"_index":753,"title":{},"body":{"components/HomePageComponent.html":{}}}],["viewday",{"_index":595,"title":{},"body":{"components/HomePageComponent.html":{}}}],["viewday.key",{"_index":777,"title":{},"body":{"components/HomePageComponent.html":{}}}],["viewday.value",{"_index":779,"title":{},"body":{"components/HomePageComponent.html":{}}}],["viewday:keyvalue|undefined",{"_index":658,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail",{"_index":596,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail.description",{"_index":784,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail.end",{"_index":788,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail.name",{"_index":782,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail.participants.length",{"_index":793,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail.place",{"_index":783,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail.responsibleperson",{"_index":791,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail.start",{"_index":786,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail:eventdetailmodel|undefined",{"_index":657,"title":{},"body":{"components/HomePageComponent.html":{}}}],["void",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["w",{"_index":1233,"title":{},"body":{"components/UserListComponent.html":{}}}],["week",{"_index":613,"title":{},"body":{"components/HomePageComponent.html":{}}}],["week.key",{"_index":758,"title":{},"body":{"components/HomePageComponent.html":{}}}],["week[index",{"_index":743,"title":{},"body":{"components/HomePageComponent.html":{}}}],["weeks",{"_index":701,"title":{},"body":{"components/HomePageComponent.html":{}}}],["words",{"_index":1246,"title":{},"body":{"components/UserListComponent.html":{}}}],["wrap",{"_index":1248,"title":{},"body":{"components/UserListComponent.html":{}}}],["x",{"_index":675,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["x.filter(y",{"_index":677,"title":{},"body":{"components/HomePageComponent.html":{}}}],["x.find(y",{"_index":668,"title":{},"body":{"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["x.map",{"_index":687,"title":{},"body":{"components/HomePageComponent.html":{}}}],["x.map(y",{"_index":563,"title":{},"body":{"injectables/EventService.html":{}}}],["y",{"_index":568,"title":{},"body":{"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/PersonService.html":{}}}],["y.age",{"_index":960,"title":{},"body":{"injectables/PersonService.html":{}}}],["y.dateofbirth",{"_index":962,"title":{},"body":{"injectables/PersonService.html":{}}}],["y.end",{"_index":566,"title":{},"body":{"injectables/EventService.html":{}}}],["y.id",{"_index":1056,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["y.key.gettime",{"_index":669,"title":{},"body":{"components/HomePageComponent.html":{}}}],["y.start",{"_index":564,"title":{},"body":{"injectables/EventService.html":{}}}],["y.value=this.eventondate(y.key",{"_index":688,"title":{},"body":{"components/HomePageComponent.html":{}}}],["year",{"_index":621,"title":{},"body":{"components/HomePageComponent.html":{}}}],["yes",{"_index":519,"title":{},"body":{"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["z.some(a",{"_index":679,"title":{},"body":{"components/HomePageComponent.html":{}}}],["zone.js",{"_index":1335,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Skarabeus_Ui'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { initFlowbite } from 'flowbite';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'Skarabeus_Ui';\n\n  ngOnInit(): void {\n    initFlowbite();\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/guards/auth.guard.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                next\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, switchMap, take } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service'; // Adjust the import path if needed\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable {\n\n    return this.authService.userInfoModel$.pipe(\n      take(1),  // Only take the first emitted value from the observable\n      switchMap(user => {\n        if (user) {\n          // User info is available, user is authenticated\n          return of(true);\n        } else {\n          // User info is not available, meaning not authenticated\n          this.router.navigate(['/login']);\n          return of(false);\n        }\n      }),\n      catchError((err) => {\n        // In case of error (e.g., network error or other issue), redirect to login\n        console.error('AuthGuard Error: ', err);\n        this.router.navigate(['/login']);\n        return of(false);\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                httpClient\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                    Private\n                                userInfoModel\n                            \n                            \n                                userInfoModel$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                userInfo\n                            \n                            \n                                validateEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(model: PasswordResetModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            PasswordResetModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(data: LoginModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInfo\n                        \n                    \n                \n            \n            \n                \nuserInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateEmail\n                        \n                    \n                \n            \n            \n                \nvalidateEmail(model: TokenModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            TokenModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/api/v1/Auth'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        httpClient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userInfoModel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInfoModel$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.userInfoModel.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { LoginModel, PasswordResetModel, TokenModel } from '../models/auth.interface';\nimport { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ReplaySubject, Observable, BehaviorSubject } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { UserDetail } from '../models/user.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private baseUrl = '/api/v1/Auth';\n  private readonly router = inject(Router);\n  private readonly httpClient = inject(HttpClient);\n  private userInfoModel = new ReplaySubject(1);\n  userInfoModel$ = this.userInfoModel.asObservable();\n\n  constructor(){\n    this.userInfo()\n  }\n\n  login(data: LoginModel): Observable {\n    return this.httpClient.post(`${this.baseUrl}/Login`, data).pipe(\n      tap((response) => {\n        this.httpClient\n        .get(`${this.baseUrl}`,{})\n        .subscribe({\n          next:(x)=>{\n            this.userInfoModel.next(x)\n            this.router.navigate(['/']);\n          }\n        })\n        return response;\n      })\n    );\n  }\n\n  logout(): void {\n    this.httpClient\n      .post(`${this.baseUrl}/Logout`, {})\n      .subscribe((res) => {\n        this.userInfo()\n        this.router.navigate(['/login']);\n        return res;\n      });\n  }\n\n  userInfo(){\n    return this.httpClient\n    .get(`${this.baseUrl}`,{})\n    .subscribe({\n      next:(x)=>{\n        this.userInfoModel.next(x)\n      },\n      error:(err)=>{\n        this.userInfoModel.next(null);\n      }\n    });\n  }\n\n  validateEmail(model:TokenModel){\n    return this.httpClient.post(`${this.baseUrl}/validateEmail`,model)\n  }\n\n  changePassword(model:PasswordResetModel){\n    return this.httpClient.post(`${this.baseUrl}/ChangePassword`,model)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePasswordPageComponent.html":{"url":"components/ChangePasswordPageComponent.html","title":"component - ChangePasswordPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangePasswordPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/change-password-page/change-password-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-password-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./change-password-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-password-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                acountCreation\n                            \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                lastError$\n                            \n                            \n                                model\n                            \n                            \n                                passwordCheck\n                            \n                            \n                                passwordMismatch\n                            \n                            \n                                    Private\n                                    Readonly\n                                route\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                checkPasswords\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                tryValidate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:25\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/change-password-page/change-password-page.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswords\n                        \n                    \n                \n            \n            \n                \ncheckPasswords()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/change-password-page/change-password-page.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/change-password-page/change-password-page.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tryValidate\n                        \n                    \n                \n            \n            \n                \ntryValidate(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/change-password-page/change-password-page.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        acountCreation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastError$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {} as PasswordResetModel\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordCheck\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMismatch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { PasswordResetModel, TokenModel } from '../../models/auth.interface';\nimport { FormsModule, NgForm, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-change-password-page',\n  standalone:true,\n  imports:[ReactiveFormsModule,FormsModule],\n  templateUrl: './change-password-page.component.html',\n  styleUrls: ['./change-password-page.component.scss']\n})\nexport class ChangePasswordPageComponent implements OnInit {\n  lastError$:any;\n  private readonly authService = inject(AuthService);\n  private readonly route=inject(ActivatedRoute);\n  private readonly router=inject(Router);\n\n  model = {} as PasswordResetModel\n  passwordCheck: string = '';\n  passwordMismatch: boolean = false;\n\n  acountCreation=false;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.route.queryParamMap.subscribe(params => {\n      if(params.get(\"Email\")&&params.get(\"Token\")){\n        this.acountCreation = true\n        this.authService.validateEmail({email:params.get(\"Email\")!,token:params.get(\"Token\")!}).subscribe(\n          {\n            next:()=>{\n\n            },\n            error:(error: any)=>{\n              this.lastError$=error.error\n              console.log(this.lastError$)\n            }\n          }\n        )\n      }\n        this.model.token = params.get(\"PasswordToken\")!\n        this.model.email = params.get(\"Email\")!\n    });\n  }\n\n  tryValidate(form:NgForm){\n    if (form.invalid||this.passwordMismatch) {\n      Object.values(form.controls).forEach(control => {\n        control.markAsTouched();\n      });\n      this.checkPasswords()\n    }\n    else{\n      this.changePassword()\n    }\n  }\n\n  changePassword(){\n    this.authService.changePassword(this.model).subscribe(\n      {\n        next:()=>{\n          this.router.navigate(['/login'])\n        },\n        error:(err)=>{\n          this.lastError$=err.error\n        }\n      }\n    )\n  }\n\n  checkPasswords() {\n    this.passwordMismatch = (this.model.password !== this.passwordCheck) || (this.model.password == \"\");\n  }\n}\n\n    \n\n    \n        \n  \n    Change Password\n    @if (lastError$ != null) {\n      \n        {{lastError$.errors[\"errorMessage\"][0]}}\n      \n    }\n    @else if(acountCreation){\n      \n        Email was confirmed succesfuly, after seting your password, you can go to the login page and login\n            \n    }\n\n    \n        \n        \n          \n            Password\n            @if(password.invalid && password.touched){\n            must be at least 8 characters, with at least 1 letter and 1 number.\n            }\n          \n\n          \n        \n        \n        \n          \n            Confirm Password\n            @if(passwordMismatch && confirmPassword.touched){\n            does not match\n            }\n          \n\n          \n        \n        \n          \n            Change Password\n          \n        \n      \n  \n\n    \n\n    \n                \n                    ./change-password-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Change Password    @if (lastError$ != null) {              {{lastError$.errors[\"errorMessage\"][0]}}          }    @else if(acountCreation){              Email was confirmed succesfuly, after seting your password, you can go to the login page and login                }                                          Password            @if(password.invalid && password.touched){            must be at least 8 characters, with at least 1 letter and 1 number.            }                                                                  Confirm Password            @if(passwordMismatch && confirmPassword.touched){            does not match            }                                                          Change Password                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangePasswordPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultComponent.html":{"url":"components/DefaultComponent.html","title":"component - DefaultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DefaultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/default/default.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-default\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterOutlet\n                            RouterLink\n                            AsyncPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./default.component.html\n            \n\n\n\n            \n                styleUrl\n                ./default.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                dropdownVisible\n                            \n                            \n                                    Protected\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                refresh\n                            \n                            \n                                toggleDropdown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/default/default.component.ts:17\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/default/default.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/default/default.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/default/default.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/default/default.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dropdownVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/default/default.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.authService.userInfoModel$\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/default/default.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe, CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { RouterLink, RouterOutlet } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport 'flowbite';\n \n@Component({\n  selector: 'app-default',\n  standalone: true,\n  imports: [CommonModule,RouterOutlet,RouterLink,AsyncPipe],\n  templateUrl: './default.component.html',\n  styleUrl: './default.component.scss',\n})\nexport class DefaultComponent {\n  authService=inject(AuthService)\n\n  protected user$ = this.authService.userInfoModel$;\n\n  constructor() {    \n  }\n\n  dropdownVisible = false;\n  toggleDropdown(): void {\n    this.dropdownVisible = !this.dropdownVisible;\n  }\n  \n  refresh(){\n    this.authService.userInfo();\n  }\n\n  logout() {\n    this.authService.logout()\n    this.dropdownVisible = false\n    this.refresh()\n  }\n}\n\n    \n\n    \n        \n  \n    @let user = user$ | async;\n    \n      \n      Skarabeus\n    \n    \n      @if(user) {\n      \n        \n          Open user menu\n          \n            \n          \n\n\n\n        \n\n        \n          \n            {{user.userName}}\n            {{user.role}}\n          \n          \n            \n              Sign out\n            \n          \n        \n      \n      }\n    \n    \n      \n        @if (user) {\n        Home\n        dishes\n        events\n        persons\n        } @else {\n        Přihlásit se\n        }\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @let user = user$ | async;                Skarabeus              @if(user) {                        Open user menu                                                                      {{user.userName}}            {{user.role}}                                              Sign out                                          }                      @if (user) {        Home        dishes        events        persons        } @else {        Přihlásit se        }            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DefaultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DishAddIngredientModel.html":{"url":"interfaces/DishAddIngredientModel.html","title":"interface - DishAddIngredientModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DishAddIngredientModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/dish.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amout\n                                        \n                                \n                                \n                                        \n                                            dishId\n                                        \n                                \n                                \n                                        \n                                            ingredientId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dishId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dishId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredientId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DishDetail {\n    id: string;\n    name: string;\n    description: string;\n    ingredients:IngredientDishDetail[]|undefined;\n}\n\nexport interface DishCreate {\n    name: string;\n    description:string;\n}\n\nexport interface IngredientDishDetail {\n    id:string,\n    ingredientId:string;\n    name: string;\n    amount:number;\n    price:number;\n    priceForUnit:number;\n}\n\nexport interface DishAddIngredientModel{\n  dishId:string;\n  ingredientId:string;\n  amout:number;\n}\n\nexport interface DishIngredientModel{\n  dishId:string;\n  ingredientId:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DishCreate.html":{"url":"interfaces/DishCreate.html","title":"interface - DishCreate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DishCreate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/dish.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DishDetail {\n    id: string;\n    name: string;\n    description: string;\n    ingredients:IngredientDishDetail[]|undefined;\n}\n\nexport interface DishCreate {\n    name: string;\n    description:string;\n}\n\nexport interface IngredientDishDetail {\n    id:string,\n    ingredientId:string;\n    name: string;\n    amount:number;\n    price:number;\n    priceForUnit:number;\n}\n\nexport interface DishAddIngredientModel{\n  dishId:string;\n  ingredientId:string;\n  amout:number;\n}\n\nexport interface DishIngredientModel{\n  dishId:string;\n  ingredientId:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DishDetail.html":{"url":"interfaces/DishDetail.html","title":"interface - DishDetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DishDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/dish.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ingredients\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredients:     IngredientDishDetail[] | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IngredientDishDetail[] | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DishDetail {\n    id: string;\n    name: string;\n    description: string;\n    ingredients:IngredientDishDetail[]|undefined;\n}\n\nexport interface DishCreate {\n    name: string;\n    description:string;\n}\n\nexport interface IngredientDishDetail {\n    id:string,\n    ingredientId:string;\n    name: string;\n    amount:number;\n    price:number;\n    priceForUnit:number;\n}\n\nexport interface DishAddIngredientModel{\n  dishId:string;\n  ingredientId:string;\n  amout:number;\n}\n\nexport interface DishIngredientModel{\n  dishId:string;\n  ingredientId:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DishIngredientModel.html":{"url":"interfaces/DishIngredientModel.html","title":"interface - DishIngredientModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DishIngredientModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/dish.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dishId\n                                        \n                                \n                                \n                                        \n                                            ingredientId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dishId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dishId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredientId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DishDetail {\n    id: string;\n    name: string;\n    description: string;\n    ingredients:IngredientDishDetail[]|undefined;\n}\n\nexport interface DishCreate {\n    name: string;\n    description:string;\n}\n\nexport interface IngredientDishDetail {\n    id:string,\n    ingredientId:string;\n    name: string;\n    amount:number;\n    price:number;\n    priceForUnit:number;\n}\n\nexport interface DishAddIngredientModel{\n  dishId:string;\n  ingredientId:string;\n  amout:number;\n}\n\nexport interface DishIngredientModel{\n  dishId:string;\n  ingredientId:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DishService.html":{"url":"injectables/DishService.html","title":"injectable - DishService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DishService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/dish.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Private\n                                dishes\n                            \n                            \n                                dishes$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddIngredientToDish\n                            \n                            \n                                CreateDish\n                            \n                            \n                                generatePatch\n                            \n                            \n                                PatchDish\n                            \n                            \n                                patchIngredientDish\n                            \n                            \n                                RemoveDish\n                            \n                            \n                                removeIngredientFromDish\n                            \n                            \n                                UpdateDishes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/dish.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        AddIngredientToDish\n                        \n                    \n                \n            \n            \n                \nAddIngredientToDish(model: DishAddIngredientModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            DishAddIngredientModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreateDish\n                        \n                    \n                \n            \n            \n                \nCreateDish(data: DishCreate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            DishCreate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatePatch\n                        \n                    \n                \n            \n            \n                \ngeneratePatch(updated: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:70\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updated\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatchDish\n                        \n                    \n                \n            \n            \n                \nPatchDish(id: string | undefined, patch: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patch\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patchIngredientDish\n                        \n                    \n                \n            \n            \n                \npatchIngredientDish(id: string, patch: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patch\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RemoveDish\n                        \n                    \n                \n            \n            \n                \nRemoveDish(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeIngredientFromDish\n                        \n                    \n                \n            \n            \n                \nremoveIngredientFromDish(model: DishIngredientModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            DishIngredientModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateDishes\n                        \n                    \n                \n            \n            \n                \nUpdateDishes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"/api/v1/Dish\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dish.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dishes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dish.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dishes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.dishes.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dish.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DishAddIngredientModel, DishIngredientModel, IngredientDishDetail } from './../models/dish.interface';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, generate, Observable, ReplaySubject } from 'rxjs';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { DishCreate, DishDetail } from '../models/dish.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DishService {\n  protected readonly baseUrl = \"/api/v1/Dish\"\n    private dishes = new BehaviorSubject([]);\n    dishes$ = this.dishes.asObservable();\n\n\n  constructor(private httpClient: HttpClient) {\n    this.UpdateDishes()\n   }\n\n   PatchDish(id:string|undefined,patch:Partial) {\n\n    const url = `${this.baseUrl}/${id}`;\n    return this.httpClient.patch(url,this.generatePatch(patch))\n  }\n\n  UpdateDishes(){\n    const url = this.baseUrl;\n    this.httpClient.get(url)\n    .subscribe(x=>{this.dishes.next(x)});\n  }\n\n  AddIngredientToDish(model:DishAddIngredientModel){\n    const url = `${this.baseUrl}/AddIngredientToDish`;\n    this.httpClient.post(url,model).subscribe({\n      next: (response) => {this.UpdateDishes(),console.log(response)},\n      error: (error) => console.error(error)\n    });\n  }\n\n  patchIngredientDish(id:string,patch:Partial){\n    const url = `${this.baseUrl}/UpdateIngredientDish/${id}`;\n    this.httpClient.patch(url,this.generatePatch(patch))\n    .subscribe({\n      next: (response) => {this.UpdateDishes()},\n      error: (error) => console.error('Error:', error)\n    })\n  }\n\n  removeIngredientFromDish(model:DishIngredientModel){\n    const url = `${this.baseUrl}/RemoveIngredientFromDish`;\n    this.httpClient.post(url,model).subscribe({\n      next: (response) => {this.UpdateDishes(),console.log(response)},\n      error: (error) => console.error(error)\n    });\n  }\n\n  CreateDish(data:DishCreate):Observable{\n    const url = this.baseUrl;\n    return this.httpClient.post(url,data)\n  }\n\n  RemoveDish(id: string): void {\n    const url = `${this.baseUrl}/${id}`;\n    this.httpClient.delete(url).subscribe({\n      next: (response) => {this.UpdateDishes(),console.log(response)},\n      error: (error) => console.error(error)\n    });\n  }\n\n  generatePatch(updated: Partial): any[] {\n    const patch: any[] = [];\n\n    Object.keys(updated).forEach((key) => {\n\n        patch.push({\n          op: 'replace',\n          path: `${key}`,\n          value: (updated as any)[key],\n        });\n\n    });\n\n    return patch;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EditService.html":{"url":"injectables/EditService.html","title":"injectable - EditService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EditService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/Edit.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendarMonth\n                            \n                            \n                                calendarYear\n                            \n                            \n                                    Private\n                                EditDishId\n                            \n                            \n                                EditDishId$\n                            \n                            \n                                    Private\n                                editEventId\n                            \n                            \n                                EditEventId$\n                            \n                            \n                                    Private\n                                editPersonId\n                            \n                            \n                                editPersonId$\n                            \n                            \n                                openDishCreate\n                            \n                            \n                                openEventCreate\n                            \n                            \n                                openPersonCreate\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDishEdit\n                            \n                            \n                                closeEventEdit\n                            \n                            \n                                closePersonEdit\n                            \n                            \n                                openDishCreateModal\n                            \n                            \n                                openDishEditModal\n                            \n                            \n                                openEventCreateModal\n                            \n                            \n                                openEventEditModal\n                            \n                            \n                                openPersonCreateModal\n                            \n                            \n                                openPersonEditModal\n                            \n                            \n                                popReturnUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDishEdit\n                        \n                    \n                \n            \n            \n                \ncloseDishEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeEventEdit\n                        \n                    \n                \n            \n            \n                \ncloseEventEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closePersonEdit\n                        \n                    \n                \n            \n            \n                \nclosePersonEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDishCreateModal\n                        \n                    \n                \n            \n            \n                \nopenDishCreateModal(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDishEditModal\n                        \n                    \n                \n            \n            \n                \nopenDishEditModal(dishId: string, url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dishId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEventCreateModal\n                        \n                    \n                \n            \n            \n                \nopenEventCreateModal(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEventEditModal\n                        \n                    \n                \n            \n            \n                \nopenEventEditModal(eventId: string, url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eventId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPersonCreateModal\n                        \n                    \n                \n            \n            \n                \nopenPersonCreateModal(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPersonEditModal\n                        \n                    \n                \n            \n            \n                \nopenPersonEditModal(personId: string, url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                personId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        popReturnUrl\n                        \n                    \n                \n            \n            \n                \npopReturnUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendarMonth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : new Date().getMonth()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calendarYear\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        EditDishId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EditDishId$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.EditDishId.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editEventId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EditEventId$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.editEventId.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editPersonId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editPersonId$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.editPersonId.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDishCreate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEventCreate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPersonCreate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { PersonCreateModel } from '../models/person.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditService {\n  calendarMonth:number=new Date().getMonth();\n  calendarYear:number=new Date().getFullYear();\n\n  private editPersonId= new BehaviorSubject(null);\n  editPersonId$ = this.editPersonId.asObservable();\n\n  private editEventId= new BehaviorSubject(null);\n  EditEventId$ = this.editEventId.asObservable();\n\n  private EditDishId= new BehaviorSubject(null);\n  EditDishId$ = this.EditDishId.asObservable();\n\n  private returnUrl:any;\n  \n  openPersonCreate = false\n  openEventCreate = false\n  openDishCreate = false\n\n  openPersonEditModal(personId: string, url:string) {\n    this.returnUrl = url\n    this.editPersonId.next(personId);\n  }\n\n  openDishEditModal(dishId: string, url:string) {\n    this.returnUrl = url\n    this.EditDishId.next(dishId);\n  }\n\n  openEventEditModal(eventId: string, url:string) {\n    this.returnUrl = url    \n    this.editEventId.next(eventId);\n  }\n\n  closePersonEdit(){\n    this.editPersonId.next(null)\n  }\n\n  closeDishEdit(){\n    this.EditDishId.next(null)\n  }\n\n  closeEventEdit(){\n    this.editEventId.next(null)\n  }\n\n  openPersonCreateModal(url:string){\n    this.openPersonCreate = true\n    this.returnUrl = url\n  }\n  \n  openDishCreateModal(url:string){\n    this.openDishCreate = true\n    this.returnUrl = url\n  }\n\n  openEventCreateModal(url:string){\n    this.openEventCreate = true\n    this.returnUrl = url\n  }\n\n  popReturnUrl(){\n    var url = this.returnUrl;\n    this.returnUrl = null\n    return url;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventCreateModel.html":{"url":"interfaces/EventCreateModel.html","title":"interface - EventCreateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventCreateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/event.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            end\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            place\n                                        \n                                \n                                \n                                        \n                                            responsiblePersonId\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        place\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        place:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        responsiblePersonId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        responsiblePersonId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DishDetail } from \"./dish.interface\";\nimport { PersonDetailModel, SmallPersonDetailModel } from \"./person.interface\";\n\nexport interface EventCreateModel {\n  name: string;\n  description: string;\n  place: string;\n  responsiblePersonId: string; // UUID format\n  start: string; // ISO 8601 date-time format\n  end: string; // ISO 8601 date-time format\n}\n\nexport interface EventDetailModel {\n  id: string; // UUID format\n  responsiblePerson: SmallPersonDetailModel | null;\n  participants: PersonDetailModel[];\n  dishes: DishDetail[];\n  name: string;\n  description: string;\n  place: string;\n  start: string; // ISO 8601 date-time format\n  end: string; // ISO 8601 date-time format\n  rowInGrid?:number|null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventDetailModel.html":{"url":"interfaces/EventDetailModel.html","title":"interface - EventDetailModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventDetailModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/event.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            dishes\n                                        \n                                \n                                \n                                        \n                                            end\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            participants\n                                        \n                                \n                                \n                                        \n                                            place\n                                        \n                                \n                                \n                                        \n                                            responsiblePerson\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rowInGrid\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dishes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dishes:         DishDetail[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DishDetail[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        participants\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        participants:         PersonDetailModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PersonDetailModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        place\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        place:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        responsiblePerson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        responsiblePerson:     SmallPersonDetailModel | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SmallPersonDetailModel | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowInGrid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rowInGrid:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DishDetail } from \"./dish.interface\";\nimport { PersonDetailModel, SmallPersonDetailModel } from \"./person.interface\";\n\nexport interface EventCreateModel {\n  name: string;\n  description: string;\n  place: string;\n  responsiblePersonId: string; // UUID format\n  start: string; // ISO 8601 date-time format\n  end: string; // ISO 8601 date-time format\n}\n\nexport interface EventDetailModel {\n  id: string; // UUID format\n  responsiblePerson: SmallPersonDetailModel | null;\n  participants: PersonDetailModel[];\n  dishes: DishDetail[];\n  name: string;\n  description: string;\n  place: string;\n  start: string; // ISO 8601 date-time format\n  end: string; // ISO 8601 date-time format\n  rowInGrid?:number|null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EventPipe.html":{"url":"pipes/EventPipe.html","title":"pipe - EventPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EventPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/event.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        event\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(event: EventDetailModel, args?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/event.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventDetailModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { EventDetailModel } from '../models/event.interface';\n\n@Pipe({\n  name: 'event',\n  standalone:true\n})\nexport class EventPipe implements PipeTransform {\n\n  transform(event: EventDetailModel, args?: string): any {\n    switch(args){\n      case \"startDate\":{\n        const date = new Date(event.start)\n        return new Date(date.getFullYear(),date.getMonth(),date.getDate(),1);\n      }\n      case \"endDate\":{\n        const date = new Date(event.end)\n        return new Date(date.getFullYear(),date.getMonth(),date.getDate(),1);\n      }\n      default:{\n        return event.name\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventService.html":{"url":"injectables/EventService.html","title":"injectable - EventService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/event.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Protected\n                                events\n                            \n                            \n                                events$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDishToEvent\n                            \n                            \n                                addPersonToEvent\n                            \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                generatePatch\n                            \n                            \n                                Patch\n                            \n                            \n                                removeDishFromEvent\n                            \n                            \n                                removePersonFromEvent\n                            \n                            \n                                updateEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/event.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addDishToEvent\n                        \n                    \n                \n            \n            \n                \naddDishToEvent(id: string, dishId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dishId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addPersonToEvent\n                        \n                    \n                \n            \n            \n                \naddPersonToEvent(id: string, personId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                personId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(model: EventCreateModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            EventCreateModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatePatch\n                        \n                    \n                \n            \n            \n                \ngeneratePatch(updated: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:69\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updated\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Patch\n                        \n                    \n                \n            \n            \n                \nPatch(id: string, model: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                model\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeDishFromEvent\n                        \n                    \n                \n            \n            \n                \nremoveDishFromEvent(id: string, dishId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dishId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePersonFromEvent\n                        \n                    \n                \n            \n            \n                \nremovePersonFromEvent(id: string, personId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                personId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEvents\n                        \n                    \n                \n            \n            \n                \nupdateEvents()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"/api/v1/Event\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/event.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        events\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/event.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        events$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.events.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/event.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EventCreateModel, EventDetailModel } from './../models/event.interface';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  protected readonly baseUrl = \"/api/v1/Event\"\n  protected events = new BehaviorSubject([])\n  events$ = this.events.asObservable()\n\n  constructor(private httpClient: HttpClient) {\n    this.updateEvents()\n  }\n\n  updateEvents(){\n    this.httpClient.get(this.baseUrl)\n    .subscribe(x =>{\n      console.log(x)\n      x.map(y => {\n        y.start = new Date(y.start).toISOString().split('T')[0]\n        y.end = new Date(y.end).toISOString().split('T')[0]\n        return y;\n      })\n      this.events.next(x)\n    })\n  }\n\n  delete(id:string){\n    return this.httpClient.delete(`${this.baseUrl}/${id}`)\n  }\n\n  create(model:EventCreateModel){\n    return this.httpClient.post(`${this.baseUrl}`,model)\n  }\n\n  Patch(id:string,model:Partial){\n    const url = `${this.baseUrl}/${id}`;\n    return this.httpClient.patch(url,this.generatePatch(model))\n  }\n\n\n  addPersonToEvent(id: string, personId: string) {\n    const url = `${this.baseUrl}/AddPersonToEvent/${id}/${personId}`;\n    return this.httpClient.get(url)\n  }\n\n  removePersonFromEvent(id: string, personId: string) {\n    const url = `${this.baseUrl}/RemovePersonFromEvent/${id}/${personId}`;\n    return this.httpClient.delete(url)\n  }\n\n  addDishToEvent(id: string, dishId: string) {\n    const url = `${this.baseUrl}/AddDishToEvent/${id}/${dishId}`;\n    return this.httpClient.get(url)\n  }\n\n  removeDishFromEvent(id: string, dishId: string) {\n    const url = `${this.baseUrl}/RemoveDishFromEvent/${id}/${dishId}`;\n    return this.httpClient.delete(url)\n  }\n\n\n\n\n\n  generatePatch(updated: Partial): any[] {\n    const patch: any[] = [];\n\n    Object.keys(updated).forEach((key) => {\n\n        patch.push({\n          op: 'replace',\n          path: `${key}`,\n          value: (updated as any)[key],\n        });\n\n    });\n\n    return patch;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FoodPageComponent.html":{"url":"components/FoodPageComponent.html","title":"component - FoodPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FoodPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/food-page/food-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ingredient-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                DishListComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./food-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./food-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { DishListComponent } from '../../components/dish-list/dish-list.component';\n\n\n@Component({\n  selector: 'app-ingredient-page',\n  standalone: true,\n  imports: [\n    DishListComponent,\n  ],\n  templateUrl: './food-page.component.html',\n  styleUrl: './food-page.component.scss'\n})\nexport class FoodPageComponent {\n\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FoodPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePageComponent.html":{"url":"components/HomePageComponent.html","title":"component - HomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home-page/home-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            DatePipe\n                            PersonPipe\n                            EventPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendar\n                            \n                            \n                                currentMonth\n                            \n                            \n                                currentYear\n                            \n                            \n                                    Private\n                                editService\n                            \n                            \n                                events\n                            \n                            \n                                    Private\n                                eventService\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                today\n                            \n                            \n                                viewDay\n                            \n                            \n                                viewEventDetail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEventsToDays\n                            \n                            \n                                dayBeforeBreak\n                            \n                            \n                                eventOnDate\n                            \n                            \n                                filterEvents\n                            \n                            \n                                generateCalendar\n                            \n                            \n                                getCalendarGrid\n                            \n                            \n                                nextMonth\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEventCreate\n                            \n                            \n                                openEventEdit\n                            \n                            \n                                previusMonth\n                            \n                            \n                                putDayToView\n                            \n                            \n                                putEventToView\n                            \n                            \n                                stringToColor\n                            \n                            \n                                stringToDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEventsToDays\n                        \n                    \n                \n            \n            \n                \naddEventsToDays()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dayBeforeBreak\n                        \n                    \n                \n            \n            \n                \ndayBeforeBreak(week: KeyValue[], index: number, event: EventDetailModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:209\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                week\n                                            \n                                                        KeyValue[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            EventDetailModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventOnDate\n                        \n                    \n                \n            \n            \n                \neventOnDate(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterEvents\n                        \n                    \n                \n            \n            \n                \nfilterEvents(events: (EventDetailModel)[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                events\n                                            \n                                                            (EventDetailModel)[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateCalendar\n                        \n                    \n                \n            \n            \n                \ngenerateCalendar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCalendarGrid\n                        \n                    \n                \n            \n            \n                \ngetCalendarGrid(year: number, month: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                year\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                month\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [][]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextMonth\n                        \n                    \n                \n            \n            \n                \nnextMonth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEventCreate\n                        \n                    \n                \n            \n            \n                \nopenEventCreate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:186\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEventEdit\n                        \n                    \n                \n            \n            \n                \nopenEventEdit(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:191\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previusMonth\n                        \n                    \n                \n            \n            \n                \npreviusMonth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putDayToView\n                        \n                    \n                \n            \n            \n                \nputDayToView(day: KeyValue)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                day\n                                            \n                                                        KeyValue\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putEventToView\n                        \n                    \n                \n            \n            \n                \nputEventToView(eventId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:181\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eventId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColor\n                        \n                    \n                \n            \n            \n                \nstringToColor(input: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:196\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToDate\n                        \n                    \n                \n            \n            \n                \nstringToDate(dt: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     KeyValue[][]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentMonth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.editService.calendarMonth\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentYear\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.editService.calendarYear\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EditService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        events\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventDetailModel[]\n\n                    \n                \n                \n                    \n                        Default value : [{} as EventDetailModel]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        eventService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EventService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(this.currentYear, this.currentMonth,new Date().getDate(),1)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     KeyValue | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewEventDetail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventDetailModel | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { EventService } from '../../services/event.service';\nimport { DatePipe, KeyValue } from '@angular/common';\nimport { EventDetailModel } from '../../models/event.interface';\nimport { PersonPipe } from '../../pipes/person.pipe';\nimport { EventPipe } from '../../pipes/event.pipe';\nimport { EditService } from '../../services/Edit.service';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-home-page',\n  standalone: true,\n  imports: [DatePipe,PersonPipe,EventPipe],\n  templateUrl: './home-page.component.html',\n  styleUrl: './home-page.component.scss'\n})\n\nexport class HomePageComponent {\n  private eventService = inject(EventService)\n  private editService = inject(EditService)\n  private router=inject(Router)\n\n  events:EventDetailModel[] = [{} as EventDetailModel];\n  viewEventDetail:EventDetailModel|undefined;\n  viewDay:KeyValue|undefined;\n\n  calendar:KeyValue[][] = [];\n\n  currentMonth=this.editService.calendarMonth\n  currentYear=this.editService.calendarYear\n  \n  today=new Date(this.currentYear, this.currentMonth,new Date().getDate(),1);\n\n\n  ngOnInit(){\n    this.today.setHours(1)\n    this.generateCalendar()\n    \n    var todayPair\n    this.calendar.forEach(x =>\n      {\n        var d = x.find(y => y.key.getTime() == this.today.getTime())\n        if(d!=undefined) todayPair = d\n      });\n    this.putDayToView(todayPair!);\n  }\n\n  generateCalendar(){\n    this.calendar=this.getCalendarGrid(this.editService.calendarYear,this.editService.calendarMonth)\n    this.eventService.events$.subscribe(\n      x => \n      {\n        this.events = x.filter(y => this.calendar.some(z => z.some(a => a.key.getTime() == this.stringToDate(y.start).getTime()|| a.key.getTime() == this.stringToDate(y.end).getTime())))\n        .sort((a) => this.stringToDate(a.start).getTime());\n        this.addEventsToDays()\n      }\n    )\n  }\n\n  addEventsToDays(){\n    this.calendar.map(\n      x => {\n        x.map( \n          y => {\n            y.value=this.eventOnDate(y.key)\n          }\n        )\n      }\n    )\n  }\n\n  getCalendarGrid(year: number, month: number): KeyValue[][] {\n    const firstDayOfMonth = new Date(year, month, 1);\n    const lastDayOfMonth = new Date(year, month + 1, 0);\n    \n    let startWeekday = firstDayOfMonth.getDay(); // 0 (Sunday) - 6 (Saturday)\n\n    // Adjust so Monday = 0, ..., Sunday = 6\n    startWeekday = (startWeekday === 0) ? 6 : startWeekday - 1;\n\n    const daysInMonth = lastDayOfMonth.getDate();\n    const weeks: KeyValue[][] = [];\n    let currentWeek: KeyValue[] = [];\n\n    // Fill days before the first of the month with placeholders from the previous month\n    for (let i = startWeekday; i > 0; i--) {\n      currentWeek.push({key:new Date(year, month, 1 - i,1),value:undefined});\n    }\n\n    // Fill in the days of the month\n    for (let day = 1; day  {\n          return this.stringToDate(event.start).getTime()  this.stringToDate(a.start).getTime() - this.stringToDate(b.start).getTime()); // Sort by start time\n    \n    const rowsFull=[1];\n    events.forEach(x=>{\n      if(x.rowInGrid) rowsFull.push(x.rowInGrid)\n    })  \n  \n    const mapedEvents = [...events].map(x=>{\n        if(x.rowInGrid == undefined) {\n          const firstEmpty = [1,2,3,4].filter(x=>!rowsFull.includes(x))[0];\n          if(firstEmpty==undefined){\n            this.events.find(y=>y.id==x.id)!.rowInGrid = null\n            console.log(\"delll\")\n          }\n          else{\n            this.events.find(y=>y.id==x.id)!.rowInGrid = firstEmpty\n            rowsFull.push(firstEmpty)\n          }\n        }\n        return x\n    });\n    return mapedEvents.sort(x=>x.rowInGrid!);\n  }\n\n  filterEvents(events:(EventDetailModel)[]){\n    return events.filter(x=>x.rowInGrid != null)\n  }\n\n  putDayToView(day:KeyValue){\n    this.viewEventDetail = undefined;\n    this.viewDay = day\n  }\n\n  putEventToView(eventId:string){\n    this.viewDay = undefined;\n    this.viewEventDetail = this.events.find(x=>x.id==eventId)!;\n  }\n\n  openEventCreate(){\n    this.editService.openEventCreateModal(this.router.url);\n    this.router.navigate(['/events'])\n  }\n  \n  openEventEdit(id:string){\n    this.editService.openEventEditModal(id,this.router.url);\n    this.router.navigate(['/events'])\n  }\n\n  stringToColor(input: string): string {\n  let hash = 0;\n  \n  // Generate a hash code from the string\n  for (let i = 0; i [],index:number,event:EventDetailModel):boolean{\n   \n  var dayBefore:any\n  if(index != 0) dayBefore = week[index-1]\n  else if(this.calendar.indexOf(week) == 0) return true\n  else dayBefore = this.calendar[this.calendar.indexOf(week)-1][6]\n\n  return dayBefore.value!.includes(event) && !dayBefore.value!.slice(0,3).includes(event);\n}\n}\n\n    \n\n    \n        \n  \n    Upcoming events on {{currentMonth+1}}. {{currentYear}}\n    @if(viewDay||viewEventDetail){\n      Detail view\n    }\n    @if(viewEventDetail){\n      \n        \n      \n    }\n  \n  \n  \n  \n    \n      \n      \n        \n        @for(week of calendar[0]; track week.key){\n          {{ week.key| date:\"E\" }}\n        }\n      \n      >\n    \n        \n      \n      @for(week of calendar; track week){\n        @for(day of week; track day.key){\n           \n            \n              {{ day.key | date:\"d.\" }}\n              @if(day.value!.length > 3){\n                +{{day.value!.length-3}}\n              }\n            \n          \n            \n            @for(event of day.value?.slice(0,3); track event.id){\n              @let eventStart = event|event:\"startDate\";\n              @let eventEnd = event|event:\"endDate\";\n              @let eventColor = stringToColor((event.start+(event.rowInGrid!/4)));\n              \n                @if(dayBeforeBreak(week,week.indexOf(day),event)){\n                  \n                }\n                \n                    {{ event.name }}\n                \n              \n            }\n          \n        }\n      }\n    \n  \n  @if(viewDay || viewEventDetail){\n  \n    @if(viewDay){\n      \n        Events on {{viewDay.key | date:\"fullDate\"}} \n        x\n      \n        \n          @for(event of viewDay.value; track event.id){\n              @let eventColor = stringToColor((event.start+(event.rowInGrid!/4)));\n              \n                \n                    {{ event.name }}\n                \n              \n          }\n          @if(viewDay.value?.length == 0){\n            No events on this day\n          }\n           \n                \n                    Add new Event\n                \n              \n      \n    }\n    @if(viewEventDetail != undefined){\n      \n        {{viewEventDetail.name}}\n        x\n      \n      \n        place: \n        {{(viewEventDetail.place)}}\n      \n      \n        Description:\n        {{viewEventDetail.description}}\n      \n      \n        Starts on: \n        {{viewEventDetail.start | date:\"fullDate\"}}\n      \n      \n        Ends on: \n        {{viewEventDetail.end | date:\"fullDate\"}}\n      \n      \n        Person responsible: \n        {{(viewEventDetail.responsiblePerson! | person:\"fullName\")}}\n      \n      \n        Number of Participants: \n        {{(viewEventDetail.participants.length)}}\n      \n    }\n  \n}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Upcoming events on {{currentMonth+1}}. {{currentYear}}    @if(viewDay||viewEventDetail){      Detail view    }    @if(viewEventDetail){                        }                                        @for(week of calendar[0]; track week.key){          {{ week.key| date:\"E\" }}        }            >                        @for(week of calendar; track week){        @for(day of week; track day.key){                                     {{ day.key | date:\"d.\" }}              @if(day.value!.length > 3){                +{{day.value!.length-3}}              }                                              @for(event of day.value?.slice(0,3); track event.id){              @let eventStart = event|event:\"startDate\";              @let eventEnd = event|event:\"endDate\";              @let eventColor = stringToColor((event.start+(event.rowInGrid!/4)));                              @if(dayBeforeBreak(week,week.indexOf(day),event)){                                  }                                    {{ event.name }}                                          }                  }      }        @if(viewDay || viewEventDetail){      @if(viewDay){              Events on {{viewDay.key | date:\"fullDate\"}}         x                        @for(event of viewDay.value; track event.id){              @let eventColor = stringToColor((event.start+(event.rowInGrid!/4)));                                                  {{ event.name }}                                        }          @if(viewDay.value?.length == 0){            No events on this day          }                                               Add new Event                                        }    @if(viewEventDetail != undefined){              {{viewEventDetail.name}}        x                    place:         {{(viewEventDetail.place)}}                    Description:        {{viewEventDetail.description}}                    Starts on:         {{viewEventDetail.start | date:\"fullDate\"}}                    Ends on:         {{viewEventDetail.end | date:\"fullDate\"}}                    Person responsible:         {{(viewEventDetail.responsiblePerson! | person:\"fullName\")}}                    Number of Participants:         {{(viewEventDetail.participants.length)}}          }  }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IngredientCreate.html":{"url":"interfaces/IngredientCreate.html","title":"interface - IngredientCreate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IngredientCreate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ingredient.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            priceforunit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priceforunit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priceforunit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IngredientCreate {\n    name: string;\n    priceforunit: number\n}\n\nexport interface IngredientDetail {\n    id: string;\n    name: string;\n    priceForUnit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IngredientDetail.html":{"url":"interfaces/IngredientDetail.html","title":"interface - IngredientDetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IngredientDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ingredient.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            priceForUnit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priceForUnit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priceForUnit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IngredientCreate {\n    name: string;\n    priceforunit: number\n}\n\nexport interface IngredientDetail {\n    id: string;\n    name: string;\n    priceForUnit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IngredientDishDetail.html":{"url":"interfaces/IngredientDishDetail.html","title":"interface - IngredientDishDetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IngredientDishDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/dish.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ingredientId\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            priceForUnit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredientId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priceForUnit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priceForUnit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DishDetail {\n    id: string;\n    name: string;\n    description: string;\n    ingredients:IngredientDishDetail[]|undefined;\n}\n\nexport interface DishCreate {\n    name: string;\n    description:string;\n}\n\nexport interface IngredientDishDetail {\n    id:string,\n    ingredientId:string;\n    name: string;\n    amount:number;\n    price:number;\n    priceForUnit:number;\n}\n\nexport interface DishAddIngredientModel{\n  dishId:string;\n  ingredientId:string;\n  amout:number;\n}\n\nexport interface DishIngredientModel{\n  dishId:string;\n  ingredientId:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IngredientService.html":{"url":"injectables/IngredientService.html","title":"injectable - IngredientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IngredientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/ingredient.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Private\n                                ingredients\n                            \n                            \n                                ingredients$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createIngredient\n                            \n                            \n                                generatePatch\n                            \n                            \n                                PatchIngredient\n                            \n                            \n                                removeIngredient\n                            \n                            \n                                UpdateIngredients\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/ingredient.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createIngredient\n                        \n                    \n                \n            \n            \n                \ncreateIngredient(data: IngredientCreate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ingredient.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            IngredientCreate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatePatch\n                        \n                    \n                \n            \n            \n                \ngeneratePatch(updated: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ingredient.service.ts:41\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updated\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatchIngredient\n                        \n                    \n                \n            \n            \n                \nPatchIngredient(id: string | undefined, patch: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ingredient.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patch\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeIngredient\n                        \n                    \n                \n            \n            \n                \nremoveIngredient(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ingredient.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateIngredients\n                        \n                    \n                \n            \n            \n                \nUpdateIngredients()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ingredient.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"/api/v1/ingredient\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/ingredient.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/ingredient.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredients$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.ingredients.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/ingredient.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { IngredientCreate, IngredientDetail } from '../models/ingredient.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IngredientService {\n  protected readonly baseUrl = \"/api/v1/ingredient\"\n    private ingredients = new BehaviorSubject([]);\n    ingredients$ = this.ingredients.asObservable();\n\n\n  constructor(private httpClient: HttpClient) {\n    this.UpdateIngredients()\n   }\n\n   PatchIngredient(id:string|undefined,patch:Partial) {\n\n    const url = `${this.baseUrl}/${id}`;\n    return this.httpClient.patch(url,this.generatePatch(patch))\n  }\n\n  UpdateIngredients(){\n    const url = this.baseUrl;\n    this.httpClient.get(url)\n    .subscribe(x=>{this.ingredients.next(x)})\n  }\n\n  createIngredient(data:IngredientCreate){\n    const url = this.baseUrl;\n    return this.httpClient.post(url,data)\n  }\n\n  removeIngredient(id: string) {\n    const url = `${this.baseUrl}/${id}`;\n    return this.httpClient.delete(url)\n  }\n\n  generatePatch(updated: Partial): any[] {\n    const patch: any[] = [];\n\n    Object.keys(updated).forEach((key) => {\n\n        patch.push({\n          op: 'replace',\n          path: `${key}`,\n          value: (updated as any)[key],\n        });\n\n    });\n\n    return patch;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginModel.html":{"url":"interfaces/LoginModel.html","title":"interface - LoginModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginModel {\n  email: string;\n  password: string;\n}\n\nexport interface TokenModel{\n  email:string;\n  token:string;\n}\n\nexport interface PasswordResetModel extends TokenModel{\n  password:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/login-page/login-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            RouterLink\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                authService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                fb\n                            \n                            \n                                    Protected\n                                lastError$\n                            \n                            \n                                    Protected\n                                loginForm\n                            \n                            \n                                    Protected\n                                resetForm\n                            \n                            \n                                resetingPassword\n                            \n                            \n                                    Protected\n                                    Readonly\n                                router\n                            \n                            \n                                    Protected\n                                sentReset\n                            \n                            \n                                    Protected\n                                    Readonly\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                            \n                                resetPassword\n                            \n                            \n                                toggleToResetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login-page/login-page.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login-page/login-page.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleToResetPassword\n                        \n                    \n                \n            \n            \n                \ntoggleToResetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login-page/login-page.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        lastError$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    email: new FormControl('', { nonNullable: true}),\n    password: new FormControl('', { nonNullable: true})\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        resetForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    resetEmail: new FormControl('', { nonNullable: true})\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetingPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        sentReset\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { FormBuilder, FormControl, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router, RouterLink } from '@angular/router';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-login-page',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterLink,\n    ReactiveFormsModule,\n  ],\n  templateUrl: './login-page.component.html',\n  styleUrl: './login-page.component.scss'\n})\nexport class LoginPageComponent {\n  protected readonly fb = inject(FormBuilder);\n\n  protected readonly authService = inject(AuthService);\n  protected readonly userService = inject(UserService);\n\n  protected readonly router = inject(Router);\n\n  protected lastError$:any;\n  protected sentReset=false;\n\n  resetingPassword = false;\n\n  protected loginForm = this.fb.group({\n    email: new FormControl('', { nonNullable: true}),\n    password: new FormControl('', { nonNullable: true})\n  });\n  \n  protected resetForm = this.fb.group({\n    resetEmail: new FormControl('', { nonNullable: true})\n  });\n\n  onSubmit(): void {\n    const data = this.loginForm.getRawValue();\n\n    this.authService.login(data).subscribe({\n      next: () => {\n        this.lastError$ = null\n      },\n      error: (error) => {\n        this.lastError$ = error.error\n        console.log(this.lastError$)\n      }\n    });\n  }\n  \n  toggleToResetPassword(){\n    this.resetingPassword = !this.resetingPassword;\n  }\n\n  resetPassword():void{\n    this.userService.changePassword(this.resetForm.getRawValue().resetEmail)\n    .subscribe(\n      {\n        next: (x) => {\n          this.lastError$ = null\n          this.sentReset=true          \n        },\n        error: (error) => {\n          this.lastError$ = error\n          console.log(this.lastError$)\n        }\n      }\n    )\n  }\n}\n\n    \n\n    \n        \n  \n    @if(!resetingPassword){\n      \n        Login\n        @if(authService.userInfoModel$|async;){\n          logged in \n            \n              \n            \n          \n        }\n      \n      \n        @if (lastError$ != null) {\n          \n            {{lastError$?.errors[\"error\"]}}\n          \n        }\n        \n          \n            Your email\n              @if(lastError$?.errors[\"Email\"] != null){\n                is required and needs to be a valid email address\n              }\n            \n            \n          \n          \n            Your password\n              @if(lastError$?.errors.Password != null){\n                is required\n              }\n            \n            \n          \n          Login\n          \n          Reset Password\n        \n      \n    }\n    @else {\n      \n        Reset password\n      \n        \n          \n          @if(sentReset){\n            Reset email sent, try checking your inbox and if you can't find it, check spelling and try again or conntact support\n          }\n          \n            Your email\n              @if(lastError$?.errors[\"Email\"] != null){\n                is required and needs to be a valid email address\n              }\n            \n            \n          \n          reset\n          Back\n        \n      }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if(!resetingPassword){              Login        @if(authService.userInfoModel$|async;){          logged in                                                         }                    @if (lastError$ != null) {                      {{lastError$?.errors[\"error\"]}}                  }                              Your email              @if(lastError$?.errors[\"Email\"] != null){                is required and needs to be a valid email address              }                                                        Your password              @if(lastError$?.errors.Password != null){                is required              }                                            Login                    Reset Password                  }    @else {              Reset password                                  @if(sentReset){            Reset email sent, try checking your inbox and if you can\\'t find it, check spelling and try again or conntact support          }                      Your email              @if(lastError$?.errors[\"Email\"] != null){                is required and needs to be a valid email address              }                                            reset          Back              }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundPageComponent.html":{"url":"components/NotFoundPageComponent.html","title":"component - NotFoundPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/errors/not-found-page/not-found-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./not-found-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./not-found-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-not-found',\n  imports: [RouterLink],\n  standalone: true,\n  templateUrl: './not-found-page.component.html',\n  styleUrl: './not-found-page.component.scss'\n})\nexport class NotFoundPageComponent {\n\n}\n\n    \n\n    \n        \n    404\n    Page Not Found\n    \n      Go Home\n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    404    Page Not Found          Go Home        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PasswordResetModel.html":{"url":"interfaces/PasswordResetModel.html","title":"interface - PasswordResetModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PasswordResetModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/auth.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            TokenModel\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginModel {\n  email: string;\n  password: string;\n}\n\nexport interface TokenModel{\n  email:string;\n  token:string;\n}\n\nexport interface PasswordResetModel extends TokenModel{\n  password:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PeoplePageComponent.html":{"url":"components/PeoplePageComponent.html","title":"component - PeoplePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PeoplePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/people-page/people-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-people-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                PersonsListComponent\n                                UserListComponent\n                            AsyncPipe\n                \n            \n\n            \n                styleUrls\n                ./people-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./people-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                user$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/people-page/people-page.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.authService.userInfoModel$\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/people-page/people-page.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PersonsListComponent } from \"../../components/persons-list/persons-list.component\";\nimport { UserListComponent } from \"../../components/user-list/user-list.component\";\nimport { AuthService } from '../../services/auth.service';\nimport { AsyncPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-people-page',\n  standalone:true,\n  templateUrl: './people-page.component.html',\n  styleUrls: ['./people-page.component.scss'],\n  imports: [PersonsListComponent, UserListComponent,AsyncPipe]\n})\nexport class PeoplePageComponent{\n\n  protected user$ = this.authService.userInfoModel$;\n\n  constructor(private authService:AuthService) { }\n}\n\n    \n\n    \n        @let user = user$ | async;\n\n  \n    \n  \n  @if(user?.role == \"Admin\"){\n    \n      \n    \n  }\n\n\n\n    \n\n    \n                \n                    ./people-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let user = user$ | async;          @if(user?.role == \"Admin\"){                }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PeoplePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PersonCreateModel.html":{"url":"interfaces/PersonCreateModel.html","title":"interface - PersonCreateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PersonCreateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/person.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            dateOfBirth\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            emailOfFather\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            emailOfMother\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fullNameOfFather\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fullNameOfMother\n                                        \n                                \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            nickname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phoneNumberOfFather\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phoneNumberOfMother\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateOfBirth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateOfBirth:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emailOfFather\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emailOfFather:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emailOfMother\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emailOfMother:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullNameOfFather\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullNameOfFather:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullNameOfMother\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullNameOfMother:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nickname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nickname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumberOfFather\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumberOfFather:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumberOfMother\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumberOfMother:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         PersonStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PersonStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PersonCreateModel {\n  firstName: string;\n  nickname:string;\n  lastName: string;\n  gender: boolean;\n  dateOfBirth: string; // ISO 8601 date format\n  active: boolean;\n  email?: string | null;\n  emailOfMother?: string | null;\n  emailOfFather?: string | null;\n  phoneNumberOfMother?: string | null;\n  phoneNumberOfFather?: string | null;\n  phoneNumber?: string | null;\n  fullNameOfMother?: string | null;\n  fullNameOfFather?: string | null;\n  status: PersonStatus;\n}\n\nexport interface SmallPersonDetailModel {\n  id: string; // UUID as a string\n  firstName: string;\n  nickname:string;\n  lastName: string;\n  gender: boolean;\n  dateOfBirth?: string | null; // ISO 8601 format\n  age?:number|null;\n  email?: string | null;\n  phoneNumber?: string | null;\n  active: boolean;\n  deleted: boolean;\n}\n\nexport interface PersonDetailModel extends SmallPersonDetailModel {\n  emailOfMother?: string | null;\n  emailOfFather?: string | null;\n  phoneNumberOfMother?: string | null;\n  phoneNumberOfFather?: string | null;\n  fullNameOfMother?: string | null;\n  fullNameOfFather?: string | null;\n  status: PersonStatus;\n}\n\nexport enum PersonStatus {\n  Other = 'other',\n  Child = 'child',\n  Instruktor = 'instruktor',\n  Leader = 'leader',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PersonDetailModel.html":{"url":"interfaces/PersonDetailModel.html","title":"interface - PersonDetailModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PersonDetailModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/person.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            SmallPersonDetailModel\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            emailOfFather\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            emailOfMother\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fullNameOfFather\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fullNameOfMother\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phoneNumberOfFather\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phoneNumberOfMother\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        emailOfFather\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emailOfFather:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emailOfMother\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emailOfMother:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullNameOfFather\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullNameOfFather:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullNameOfMother\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullNameOfMother:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumberOfFather\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumberOfFather:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumberOfMother\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumberOfMother:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         PersonStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PersonStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PersonCreateModel {\n  firstName: string;\n  nickname:string;\n  lastName: string;\n  gender: boolean;\n  dateOfBirth: string; // ISO 8601 date format\n  active: boolean;\n  email?: string | null;\n  emailOfMother?: string | null;\n  emailOfFather?: string | null;\n  phoneNumberOfMother?: string | null;\n  phoneNumberOfFather?: string | null;\n  phoneNumber?: string | null;\n  fullNameOfMother?: string | null;\n  fullNameOfFather?: string | null;\n  status: PersonStatus;\n}\n\nexport interface SmallPersonDetailModel {\n  id: string; // UUID as a string\n  firstName: string;\n  nickname:string;\n  lastName: string;\n  gender: boolean;\n  dateOfBirth?: string | null; // ISO 8601 format\n  age?:number|null;\n  email?: string | null;\n  phoneNumber?: string | null;\n  active: boolean;\n  deleted: boolean;\n}\n\nexport interface PersonDetailModel extends SmallPersonDetailModel {\n  emailOfMother?: string | null;\n  emailOfFather?: string | null;\n  phoneNumberOfMother?: string | null;\n  phoneNumberOfFather?: string | null;\n  fullNameOfMother?: string | null;\n  fullNameOfFather?: string | null;\n  status: PersonStatus;\n}\n\nexport enum PersonStatus {\n  Other = 'other',\n  Child = 'child',\n  Instruktor = 'instruktor',\n  Leader = 'leader',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PersonPipe.html":{"url":"pipes/PersonPipe.html","title":"pipe - PersonPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PersonPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/person.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        person\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(person: PersonDetailModel | SmallPersonDetailModel, format?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/person.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                person\n                                            \n                                                        PersonDetailModel | SmallPersonDetailModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                format\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { PersonDetailModel, SmallPersonDetailModel } from '../models/person.interface';\n\n@Pipe({\n  name: 'person',\n  standalone:true\n})\nexport class PersonPipe implements PipeTransform {\n\n  transform(person: PersonDetailModel|SmallPersonDetailModel, format?: string): any {\n    switch(format){\n      case \"fullName\":{\n         return `${person.firstName} ${person.nickname!=null?person.nickname:\"\"} ${person.lastName}`;\n      }\n      default :{\n        return person.firstName\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonService.html":{"url":"injectables/PersonService.html","title":"injectable - PersonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PersonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/person.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Private\n                                persons\n                            \n                            \n                                persons$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Create\n                            \n                            \n                                Delete\n                            \n                            \n                                generatePatch\n                            \n                            \n                                Patch\n                            \n                            \n                                updatePersons\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/person.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Create\n                        \n                    \n                \n            \n            \n                \nCreate(model: PersonCreateModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/person.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            PersonCreateModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Delete\n                        \n                    \n                \n            \n            \n                \nDelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/person.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatePatch\n                        \n                    \n                \n            \n            \n                \ngeneratePatch(model: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/person.service.ts:57\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Patch\n                        \n                    \n                \n            \n            \n                \nPatch(id: string, model: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/person.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                model\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePersons\n                        \n                    \n                \n            \n            \n                \nupdatePersons(unfiltred: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/person.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                unfiltred\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"/api/v1/Person\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/person.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        persons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/person.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persons$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.persons.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/person.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { PersonCreateModel, PersonDetailModel } from '../models/person.interface';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonService {\n  protected readonly baseUrl = \"/api/v1/Person\"\n  private persons = new BehaviorSubject([]);\n  persons$ = this.persons.asObservable();\n\n\n  constructor(private httpClient: HttpClient) {\n    this.updatePersons()\n   }\n\n  updatePersons(unfiltred:boolean=true){\n    var request =\n    unfiltred ?\n    this.httpClient.get(`${this.baseUrl}/unfiltred`):\n    this.httpClient.get(`${this.baseUrl}`);\n\n\n    request.subscribe(\n      x =>\n        {\n          this.persons.next(x.map(y =>\n            {\n              if(y.dateOfBirth==undefined) return y;\n              y.age =  new Date().getFullYear() - new Date(y.dateOfBirth).getFullYear();\n              y.dateOfBirth = new Date(y.dateOfBirth).toISOString().split('T')[0]\n              return y;\n            }\n          )\n          )\n        }\n    )\n  }\n\n  Delete(id:string){\n    return this.httpClient.delete(`${this.baseUrl}/${id}`)\n  }\n\n  Create(model:PersonCreateModel):Observable{\n    return this.httpClient.post(this.baseUrl,model);\n  }\n\n  Patch(id:string,model:Partial){\n    const url = `${this.baseUrl}/${id}`\n    var patch = this.generatePatch(model);\n    console.log(patch)\n    return this.httpClient.patch(url,patch)\n  }\n\n  generatePatch(model: Partial): any[] {\n    const patch: any[] = [];\n\n    Object.keys(model).forEach((key) => {\n\n        patch.push({\n          op: 'replace',\n          path: `${key}`,\n          value: (model as any)[key],\n        });\n\n    });\n\n    return patch;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PersonsListComponent.html":{"url":"components/PersonsListComponent.html","title":"component - PersonsListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PersonsListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/persons-list/persons-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-persons-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            AsyncPipe\n                            FormsModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./persons-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./persons-list.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeCreateModal\n                            \n                            \n                                activeEditModal\n                            \n                            \n                                CreatingPerson\n                            \n                            \n                                editingPerson$\n                            \n                            \n                                editingPersonBase\n                            \n                            \n                                editingPersonPage\n                            \n                            \n                                editService\n                            \n                            \n                                    Protected\n                                persons$\n                            \n                            \n                                personService\n                            \n                            \n                                router\n                            \n                            \n                                search\n                            \n                            \n                                searchIngredients\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeCreateModal\n                            \n                            \n                                closeEditModal\n                            \n                            \n                                create\n                            \n                            \n                                checkForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                normalizeString\n                            \n                            \n                                onBlur\n                            \n                            \n                                openCreateModal\n                            \n                            \n                                openEditModal\n                            \n                            \n                                refresh\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                            \n                                updateField\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/persons-list/persons-list.component.ts:40\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeCreateModal\n                        \n                    \n                \n            \n            \n                \ncloseCreateModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeEditModal\n                        \n                    \n                \n            \n            \n                \ncloseEditModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkForm\n                        \n                    \n                \n            \n            \n                \ncheckForm(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        normalizeString\n                        \n                    \n                \n            \n            \n                \nnormalizeString(ob: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ob\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBlur\n                        \n                    \n                \n            \n            \n                \nonBlur(field: string, isValid?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isValid\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openCreateModal\n                        \n                    \n                \n            \n            \n                \nopenCreateModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditModal\n                        \n                    \n                \n            \n            \n                \nopenEditModal(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateField\n                        \n                    \n                \n            \n            \n                \nupdateField(field: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeCreateModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activeEditModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreatingPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PersonCreateModel\n\n                    \n                \n                \n                    \n                        Default value : {gender:true,status:'other'} as PersonCreateModel\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingPerson$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PersonDetailModel\n\n                    \n                \n                \n                    \n                        Default value : {} as PersonDetailModel\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingPersonBase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PersonDetailModel\n\n                    \n                \n                \n                    \n                        Default value : JSON.parse(JSON.stringify(this.editingPerson$))\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingPersonPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EditService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        persons$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.personService.persons$\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        personService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PersonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchIngredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { PersonStatus } from './../../models/person.interface';\nimport { PersonService } from './../../services/person.service';\nimport { Component, inject, isStandalone } from '@angular/core';\nimport { PersonCreateModel, PersonDetailModel } from '../../models/person.interface';\nimport { AsyncPipe, CommonModule } from '@angular/common';\nimport { FormsModule, NgForm, ReactiveFormsModule } from '@angular/forms';\nimport { combineLatest } from 'rxjs';\nimport { EditService } from '../../services/Edit.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-persons-list',\n  standalone: true,\n  imports: [\n      CommonModule,\n      AsyncPipe,\n      FormsModule,\n    ReactiveFormsModule\n  ],\n  templateUrl: './persons-list.component.html',\n  styleUrl: './persons-list.component.scss'\n})\nexport class PersonsListComponent {\n  personService=inject(PersonService);\n  editService=inject(EditService)\n  router=inject(Router)\n  protected persons$= this.personService.persons$;\n\n  search:string = \"\";\n  searchIngredients:string = \"\";\n\n  editingPersonPage = 1;\n\n  activeEditModal=false\n  activeCreateModal=false\n\n  CreatingPerson:PersonCreateModel = {gender:true,status:'other'} as PersonCreateModel;\n\n  editingPerson$:PersonDetailModel = {} as PersonDetailModel;\n  editingPersonBase:PersonDetailModel  = JSON.parse(JSON.stringify(this.editingPerson$));\n\n  constructor() { \n  }\n\n  ngOnInit() {\n    this.editService.editPersonId$.subscribe(x=>{if(x!=null)this.openEditModal(x!)});\n    if(this.editService.openPersonCreate) this.openCreateModal();\n    this.editService.openPersonCreate = false\n  }\n\n  closeEditModal(){\n    this.editingPerson$= {} as PersonDetailModel\n    this.editingPersonBase = JSON.parse(JSON.stringify(this.editingPerson$))\n    this.activeEditModal=false;\n    this.refresh()\n    this.editService.closePersonEdit()\n    var url = this.editService.popReturnUrl()\n    console.log(url)\n    if(url) this.router.navigateByUrl(url);\n  }\n\n  openEditModal(id:string){\n    this.persons$.subscribe(x => this.editingPerson$ = x.find(y => y.id == id)!)\n    this.editingPersonBase = JSON.parse(JSON.stringify(this.editingPerson$))\n    this.activeEditModal = true\n    this.refresh()\n  }\n\n  closeCreateModal(){\n    this.CreatingPerson = {gender:true,status:'other'} as PersonCreateModel\n    this.activeCreateModal=false;\n    this.refresh()\n  }\n\n  checkForm(form: NgForm) {\n    if (form.invalid) {\n      Object.values(form.controls).forEach(control => {\n        control.markAsTouched();\n      });\n    }\n    else{\n      this.create()\n    }\n  }\n\n  openCreateModal(){\n    this.activeCreateModal = true\n    this.refresh()\n  }\n\n  refresh(){\n    this.personService.updatePersons()\n  }\n\n  update() {\n    const patch:Partial={};\n\n    console.log(this.editingPerson$,this.editingPersonBase)\n\n    Object.keys(this.editingPersonBase).forEach(\n      x =>\n        {\n          if(x!=\"id\")\n          {\n            if((this.editingPersonBase as any)[x] != (this.editingPerson$ as any)[x]){\n              (patch as any)[x] = (this.editingPerson$ as any)[x]\n            }\n          }\n        })\n    this.personService.Patch(this.editingPerson$.id,patch)\n    .subscribe(\n      x => this.refresh()\n    )\n  }\n\n  updateField(field: string) {\n    const patch: Partial = {};\n\n    if ((this.editingPersonBase as any)[field] !== (this.editingPerson$ as any)[field]) {\n      (patch as any)[field] = (this.editingPerson$ as any)[field];\n\n      this.personService.Patch(this.editingPerson$.id, patch)\n        .subscribe(() => this.refresh());\n    }\n  }\n\n  onBlur(field: string, isValid?: boolean) {\n    if (isValid) {\n      this.updateField(field);\n    }\n  }\n\n  remove(){\n    this.personService.Delete(this.editingPerson$.id)\n    .subscribe({\n      next:() =>\n        {\n          this.refresh()\n          this.closeEditModal()\n        },\n      error:x => {\n        alert(x.error.message)\n        this.refresh()\n        this.closeEditModal()\n      }\n      }\n    )\n  }\n\n  create() {\n    this.personService.Create(this.CreatingPerson)\n    .subscribe(\n      {\n        next:x=>{\n          var url = this.editService.popReturnUrl()\n          if(url) this.router.navigateByUrl(url);\n          this.closeCreateModal()\n        }\n      })\n  }\n\n  normalizeString(ob:string){\n    return ob.normalize().toUpperCase().replaceAll(' ', \"\").trim()\n  }\n\n}\n\n    \n\n    \n        \n  People\n  \n    \n      @if(search != \"\"){\n        x\n      }\n    \n      +\n    \n  \n\n  \n    @if (persons$ | async; as persons) {\n    @for (person of persons$ | async; track person) {\n    @if (normalizeString(person.firstName).indexOf(normalizeString(search)) != -1) {\n    \n      {{ person.firstName }}\n      {{ person.age }}\n    \n    }\n    }\n    }\n    @else {\n    Žádná data 😦\n    }\n  \n\n\n  @if (activeEditModal) {\n  \n    \n      \n        Editing\n        x\n      \n      \n        Personal Info\n        Mothers Info\n        Fathers Info\n      \n      \n\n      @switch (editingPersonPage) {\n        @default{\n        \n          \n            First name\n            \n            Invalid name\n          \n\n          \n            nickname\n            \n          \n\n          \n            Last name\n            \n            Invalid name\n          \n\n          \n            Gender\n            \n              Male\n              Female\n            \n          \n\n          \n            Date of Birth\n            \n          \n\n          \n            Email\n            \n            Invalid email\n          \n\n          \n            Phone Number\n            \n            Invalid phone\n          \n\n          \n            Active\n            \n          \n\n          \n            Status\n            \n              Other\n              Child\n              Instruktor\n              Leader\n            \n          \n          delete\n        \n        }\n        @case(2){\n        \n          \n            Mother's Full Name\n            \n          \n\n          \n            Mother's Email\n            \n          \n\n          \n            Mother's Phone Number\n            \n          \n        \n        }\n        @case(3){\n        \n          \n            Father's Full Name\n            \n          \n          \n            Father's Email\n            \n          \n\n          \n            Father's Phone Number\n            \n          \n        \n        }\n      }\n      \n    \n  \n  }\n\n  @if (activeCreateModal) {\n  \n    \n      \n        Creating\n        x\n      \n      \n        \n          First name \n            @if(firstName.invalid && firstName.touched){\n              can't start or end with spaces\n            }\n            @else{\n              *\n            }\n          \n        \n      \n        \n          Nickname\n          \n        \n      \n        \n          Last name \n            @if(lastName.invalid && lastName.touched){\n              can't start or end with spaces\n            }\n            @else{\n              *\n            }\n          \n        \n      \n        \n          \n            Gender \n              @if(gender.invalid && gender.touched){\n                  is required.\n              }\n              @else{\n                *\n              }\n            \n              Male\n              Female\n            \n          \n        \n          \n            Date of birth \n              @if(dateOfBirth.invalid && dateOfBirth.touched){\n                  is required.\n              }\n              @else{\n                *\n              }\n            \n          \n        \n      \n        \n          Status \n            *\n          \n            Other\n            Child\n            Instruktor\n            Leader\n          \n        \n        \n          \n            Create\n          \n        \n      \n    \n  \n  }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  People            @if(search != \"\"){        x      }          +            @if (persons$ | async; as persons) {    @for (person of persons$ | async; track person) {    @if (normalizeString(person.firstName).indexOf(normalizeString(search)) != -1) {          {{ person.firstName }}      {{ person.age }}        }    }    }    @else {    Žádná data 😦    }    @if (activeEditModal) {                    Editing        x                    Personal Info        Mothers Info        Fathers Info                  @switch (editingPersonPage) {        @default{                              First name                        Invalid name                                nickname                                            Last name                        Invalid name                                Gender                          Male              Female                                            Date of Birth                                            Email                        Invalid email                                Phone Number                        Invalid phone                                Active                                            Status                          Other              Child              Instruktor              Leader                                delete                }        @case(2){                              Mother\\'s Full Name                                            Mother\\'s Email                                            Mother\\'s Phone Number                                      }        @case(3){                              Father\\'s Full Name                                            Father\\'s Email                                            Father\\'s Phone Number                                      }      }              }  @if (activeCreateModal) {                    Creating        x                              First name             @if(firstName.invalid && firstName.touched){              can\\'t start or end with spaces            }            @else{              *            }                                          Nickname                                          Last name             @if(lastName.invalid && lastName.touched){              can\\'t start or end with spaces            }            @else{              *            }                                                      Gender               @if(gender.invalid && gender.touched){                  is required.              }              @else{                *              }                          Male              Female                                                    Date of birth               @if(dateOfBirth.invalid && dateOfBirth.touched){                  is required.              }              @else{                *              }                                                      Status             *                      Other            Child            Instruktor            Leader                                                Create                                }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PersonsListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SmallPersonDetailModel.html":{"url":"interfaces/SmallPersonDetailModel.html","title":"interface - SmallPersonDetailModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SmallPersonDetailModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/person.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            age\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dateOfBirth\n                                        \n                                \n                                \n                                        \n                                            deleted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            nickname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phoneNumber\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateOfBirth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateOfBirth:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nickname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nickname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PersonCreateModel {\n  firstName: string;\n  nickname:string;\n  lastName: string;\n  gender: boolean;\n  dateOfBirth: string; // ISO 8601 date format\n  active: boolean;\n  email?: string | null;\n  emailOfMother?: string | null;\n  emailOfFather?: string | null;\n  phoneNumberOfMother?: string | null;\n  phoneNumberOfFather?: string | null;\n  phoneNumber?: string | null;\n  fullNameOfMother?: string | null;\n  fullNameOfFather?: string | null;\n  status: PersonStatus;\n}\n\nexport interface SmallPersonDetailModel {\n  id: string; // UUID as a string\n  firstName: string;\n  nickname:string;\n  lastName: string;\n  gender: boolean;\n  dateOfBirth?: string | null; // ISO 8601 format\n  age?:number|null;\n  email?: string | null;\n  phoneNumber?: string | null;\n  active: boolean;\n  deleted: boolean;\n}\n\nexport interface PersonDetailModel extends SmallPersonDetailModel {\n  emailOfMother?: string | null;\n  emailOfFather?: string | null;\n  phoneNumberOfMother?: string | null;\n  phoneNumberOfFather?: string | null;\n  fullNameOfMother?: string | null;\n  fullNameOfFather?: string | null;\n  status: PersonStatus;\n}\n\nexport enum PersonStatus {\n  Other = 'other',\n  Child = 'child',\n  Instruktor = 'instruktor',\n  Leader = 'leader',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenModel.html":{"url":"interfaces/TokenModel.html","title":"interface - TokenModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginModel {\n  email: string;\n  password: string;\n}\n\nexport interface TokenModel{\n  email:string;\n  token:string;\n}\n\nexport interface PasswordResetModel extends TokenModel{\n  password:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCreate.html":{"url":"interfaces/UserCreate.html","title":"interface - UserCreate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserCreate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            personId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        personId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        personId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PersonDetailModel } from \"./person.interface\";\n\nexport interface UserDetail {\n  deleted:boolean;\n  emailConfirmed:boolean;\n  role:string;\n  id: string;\n  userName: string;\n  email: string;\n  person: PersonDetailModel;\n}\n\nexport interface UserCreate {\n  name:string;\n  email:string;\n  personId:string;\n  password:string;\n}\n\nexport interface UserPatch {\n  userName: string;\n  email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDetail.html":{"url":"interfaces/UserDetail.html","title":"interface - UserDetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            deleted\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            emailConfirmed\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            person\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            userName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deleted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emailConfirmed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emailConfirmed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        person\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        person:         PersonDetailModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PersonDetailModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PersonDetailModel } from \"./person.interface\";\n\nexport interface UserDetail {\n  deleted:boolean;\n  emailConfirmed:boolean;\n  role:string;\n  id: string;\n  userName: string;\n  email: string;\n  person: PersonDetailModel;\n}\n\nexport interface UserCreate {\n  name:string;\n  email:string;\n  personId:string;\n  password:string;\n}\n\nexport interface UserPatch {\n  userName: string;\n  email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInfoPageComponent.html":{"url":"components/UserInfoPageComponent.html","title":"component - UserInfoPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserInfoPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/user-info-page/user-info-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-info-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./user-info-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-info-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                editService\n                            \n                            \n                                router\n                            \n                            \n                                user\n                            \n                            \n                                userService\n                            \n                            \n                                userUpdateBase\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                openPersonEdit\n                            \n                            \n                                updateField\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/user-info-page/user-info-page.component.ts:23\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-info-page/user-info-page.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBlur\n                        \n                    \n                \n            \n            \n                \nonBlur(field: string, isValid?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-info-page/user-info-page.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isValid\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPersonEdit\n                        \n                    \n                \n            \n            \n                \nopenPersonEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-info-page/user-info-page.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateField\n                        \n                    \n                \n            \n            \n                \nupdateField(field: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-info-page/user-info-page.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-info-page/user-info-page.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EditService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-info-page/user-info-page.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-info-page/user-info-page.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {} as UserDetail\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-info-page/user-info-page.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-info-page/user-info-page.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userUpdateBase\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {} as UserDetail\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-info-page/user-info-page.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { UserDetail, UserPatch } from '../../models/user.interface';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EditService } from '../../services/Edit.service';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-user-info-page',\n  standalone:true,\n  templateUrl: './user-info-page.component.html',\n  imports:[FormsModule,ReactiveFormsModule],\n  styleUrls: ['./user-info-page.component.scss']\n})\nexport class UserInfoPageComponent implements OnInit {\n  userService = inject(UserService)\n  authService = inject(AuthService);\n  editService = inject(EditService);\n  router = inject(Router);\n\n  user = {} as UserDetail;\n  userUpdateBase = {} as UserDetail;\n\n  constructor() {\n    this.authService.userInfoModel$.subscribe(x=>this.user = x!)\n  }\n\n  ngOnInit() {\n  }\n\n  openPersonEdit(){\n    this.editService.openPersonEditModal(this.user.person.id, this.router.url)\n    this.router.navigate(['/people'])\n  }\n\n    updateField(field: string) {\n      const patch: Partial = {};\n      \n      if ((this.userUpdateBase as any)[field] !== (this.user as any)[field]) {\n        (patch as any)[field] = (this.user as any)[field];\n        this.userService.Patch(this.user.id, patch)\n        .subscribe(() => this.authService.userInfo())\n      }\n    }\n        \n    \n    onBlur(field: string, isValid?: boolean) {\n      console.log(isValid,field)\n      if (isValid) {\n        this.updateField(field);\n      }\n    }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n            User Information\n          \n          \n          \n            \n              User name\n              @if(userName.invalid && userName.touched){\n                is required\n              }\n            \n            \n          \n          \n          \n            \n              User email\n              @if(userMail.invalid && userMail.touched){\n                   must be a valid email address\n              }\n            \n            \n          \n          \n            \n              Identity\n            \n          \n        \n      \n    \n    \n\n    \n                \n                    ./user-info-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        User Information                                                        User name              @if(userName.invalid && userName.touched){                is required              }                                                                                User email              @if(userMail.invalid && userMail.touched){                   must be a valid email address              }                                                                      Identity                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInfoPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserListComponent.html":{"url":"components/UserListComponent.html","title":"component - UserListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user-list/user-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            AsyncPipe\n                            ReactiveFormsModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./user-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeCreateModal\n                            \n                            \n                                activeEditModal\n                            \n                            \n                                creatingUser\n                            \n                            \n                                editingUser\n                            \n                            \n                                editingUserBase\n                            \n                            \n                                    Private\n                                editService\n                            \n                            \n                                password2\n                            \n                            \n                                passwordMismatch\n                            \n                            \n                                    Protected\n                                persons$\n                            \n                            \n                                    Private\n                                personService\n                            \n                            \n                                roles\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Protected\n                                searchUsers\n                            \n                            \n                                    Protected\n                                users$\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeCreateModal\n                            \n                            \n                                closeEditModal\n                            \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                changeRole\n                            \n                            \n                                checkPasswords\n                            \n                            \n                                normalizeString\n                            \n                            \n                                onBlur\n                            \n                            \n                                openCreateModal\n                            \n                            \n                                openEditModal\n                            \n                            \n                                openPersonEdit\n                            \n                            \n                                refresh\n                            \n                            \n                                refreshPersons\n                            \n                            \n                                unDelete\n                            \n                            \n                                updateField\n                            \n                            \n                                validateAndTryCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/user-list/user-list.component.ts:38\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeCreateModal\n                        \n                    \n                \n            \n            \n                \ncloseCreateModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeEditModal\n                        \n                    \n                \n            \n            \n                \ncloseEditModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeRole\n                        \n                    \n                \n            \n            \n                \nchangeRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:126\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswords\n                        \n                    \n                \n            \n            \n                \ncheckPasswords()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:153\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        normalizeString\n                        \n                    \n                \n            \n            \n                \nnormalizeString(ob: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ob\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBlur\n                        \n                    \n                \n            \n            \n                \nonBlur(field: string, isValid?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isValid\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openCreateModal\n                        \n                    \n                \n            \n            \n                \nopenCreateModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditModal\n                        \n                    \n                \n            \n            \n                \nopenEditModal(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPersonEdit\n                        \n                    \n                \n            \n            \n                \nopenPersonEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshPersons\n                        \n                    \n                \n            \n            \n                \nrefreshPersons()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unDelete\n                        \n                    \n                \n            \n            \n                \nunDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateField\n                        \n                    \n                \n            \n            \n                \nupdateField(field: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateAndTryCreate\n                        \n                    \n                \n            \n            \n                \nvalidateAndTryCreate(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeCreateModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activeEditModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatingUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserCreate\n\n                    \n                \n                \n                    \n                        Default value : {} as UserCreate\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDetail\n\n                    \n                \n                \n                    \n                        Default value : {} as UserDetail\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingUserBase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDetail\n\n                    \n                \n                \n                    \n                        Default value : {} as UserDetail\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EditService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMismatch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        persons$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.personService.persons$\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        personService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PersonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"\",\"Admin\",\"UserManger\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        searchUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.userService.users$\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { AsyncPipe } from '@angular/common';\nimport { FormsModule, NgForm, ReactiveFormsModule } from '@angular/forms';\nimport { UserCreate, UserDetail, UserPatch } from '../../models/user.interface';\nimport { PersonService } from '../../services/person.service';\nimport { EditService } from '../../services/Edit.service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-user-list',\n  standalone:true,\n  imports:[AsyncPipe,ReactiveFormsModule,FormsModule],\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent{\n  private userService=inject(UserService)\n  private personService=inject(PersonService)\n  private editService=inject(EditService)\n  private router=inject(Router)\n\n  roles = [\"\",\"Admin\",\"UserManger\"]\n\n  protected users$ = this.userService.users$;\n  protected persons$ = this.personService.persons$;\n\n  protected searchUsers = \"\"\n  password2: string = '';\n  passwordMismatch: boolean = false;\n\n  activeCreateModal:boolean = false;\n  activeEditModal:boolean = false;\n\n  creatingUser:UserCreate = {} as UserCreate;\n  editingUser:UserDetail = {} as UserDetail;\n  editingUserBase:UserDetail = {} as UserDetail;\n\n  constructor() {\n  }\n\n  openPersonEdit(){\n    this.editService.openPersonEditModal(this.editingUser.person.id, this.router.url)\n  }\n\n  refresh(){\n    this.userService.updateUsers()\n    this.editingUserBase  = JSON.parse(JSON.stringify(this.editingUser))\n  }\n\n  refreshPersons(){\n    this.personService.updatePersons()\n  }\n\n  openCreateModal(){\n    this.creatingUser.name = this.searchUsers;\n    this.activeCreateModal=true\n  }\n\n  closeCreateModal(){\n    this.activeCreateModal=false\n    this.password2 = \"\"\n    this.creatingUser = {} as UserCreate\n  }\n\n  openEditModal(id:string){\n    this.users$.subscribe(\n      x => {\n        this.editingUser = x.find(y => y.id == id)!;\n      }\n    )\n    this.editingUserBase  = JSON.parse(JSON.stringify(this.editingUser))\n    this.activeEditModal = true\n  }\n\n  closeEditModal(){\n    this.activeEditModal=false\n    this.creatingUser = {} as UserCreate  \n    this.editingUserBase  = JSON.parse(JSON.stringify(this.editingUser))\n  }\n\n  validateAndTryCreate(form: NgForm){\n    if (form.invalid) {\n      Object.values(form.controls).forEach(control => {\n        control.markAsTouched();\n      });\n      this.checkPasswords()\n    }\n    else{\n      this.create()\n    }\n  }\n\n  create(){\n    this.userService.create(this.creatingUser)\n    .subscribe(\n      x => {\n        this.refresh()\n        this.closeCreateModal()\n      }\n    )\n  }\n\n\n  delete(){\n    this.userService.delete(this.editingUser.id)\n    .subscribe(\n      x =>\n      {\n        this.refresh()\n      }\n    )\n  }\n\n  unDelete(){\n    this.userService.unDelete(this.editingUser.id)\n    .subscribe(\n      x =>\n      {\n        this.refresh()\n      }\n    )\n  }\n\n  changeRole(){\n    console.log(this.editingUser)\n    if(this.editingUser.role == \"\") this.userService.removeRole(this.editingUser.id).subscribe(x=>this.refresh());\n    else  this.userService.addRole(this.editingUser.id,this.editingUser.role).subscribe(x=>this.refresh());\n  }\n  \n  updateField(field: string) {\n    const patch: Partial = {};\n    \n    if ((this.editingUserBase as any)[field] !== (this.editingUser as any)[field]) {\n      (patch as any)[field] = (this.editingUser as any)[field];\n      this.userService.Patch(this.editingUser.id, patch)\n      .subscribe(() => this.refresh());\n    }\n  }\n      \n  \n    onBlur(field: string, isValid?: boolean) {\n      if (isValid) {\n        this.updateField(field);\n      }\n    }\n\n  normalizeString(ob:string){\n    return ob.normalize().toUpperCase().replaceAll(' ', \"\").trim()\n  }\n\n  checkPasswords() {\n    this.passwordMismatch = (this.creatingUser.password !== this.password2) || (this.creatingUser.password == \"\");\n    console.log(this.passwordMismatch)\n  }\n}\n\n    \n\n    \n        \n  Users\n  \n    \n      @if(searchUsers != \"\"){\n        x\n      }\n    \n      +\n    \n  \n\n  \n    @if (users$ | async; as users) {\n    @for (user of users$ | async; track user) {\n    @if (normalizeString(user.userName).indexOf(normalizeString(searchUsers)) != -1) {\n    \n      {{ user.id }}\n      {{ user.userName }}\n    \n    }\n    }\n    }\n    @else {\n    Žádná data 😦\n    }\n  \n\n\n  @if (activeCreateModal) {\n  \n    \n      \n        Creating\n        x\n      \n      \n        \n        \n          \n            User name\n            @if(userName.invalid && userName.touched){\n            is required\n            }\n          \n          \n        \n        \n        \n          \n            User email\n            @if(userMail.invalid && userMail.touched){\n            must be a valid email address\n            }\n          \n          \n        \n        \n          Identity of user\n          \n            none\n            @for(person of persons$ | async;track person){\n            {{person.firstName}}\n            }\n          \n        \n        \n          \n            Create\n          \n        \n      \n\n    \n  \n  }\n\n  @if (activeEditModal) {\n  \n    \n      \n        Editing User\n        x\n      \n      \n        \n        \n          \n            User name\n            @if(userName.invalid && userName.touched){\n            is required\n            }\n            \n              @if(!editingUser.emailConfirmed){\n                not\n              }\n              confirmed\n          \n          \n        \n        \n        \n          \n            User email\n            @if(email.invalid && email.touched){\n            must be a valid email address\n            }\n          \n          \n        \n        \n        \n          \n            User Role\n          \n          \n            @for(role of roles;track role){\n              {{role==\"\"?'None':role}}\n            }\n          \n        \n        \n          \n            Identity\n          \n            @if(editingUser.deleted){\n              Undelete\n            }\n            @else {\n              Delete\n            }\n        \n      \n    \n  \n  }\n\n    \n\n    \n                \n                    ./user-list.component.scss\n                \n                .user{\n    @apply border p-5 shadow my-3 w-56 h-64 flex flex-col rounded-lg ;\n    transition: transform 0.3s ease-in-out;\n  }\n  .user>p{\n    @apply flex-1 break-words text-wrap overflow-hidden\n  }\n  \n  .user button{\n    @apply border pl-3 pr-3 rounded-md\n  }\n  \n  .user:hover{\n    cursor: pointer;\n    box-shadow: 0 0.5rem 1rem rgba(95, 95, 95, 0.5);\n    transform: translateY(-0.5rem);\n  }\n  \n  .inputs>input,.inputs>select{\n    @apply w-full\n  }\n  .inputs>*{\n    @apply my-1\n  }\n  \n  .editing_inputs>*{\n    @apply w-1/2 flex flex-col flex-1 mx-1\n  }\n  .editing_inputs{\n    @apply justify-between content-between\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Users            @if(searchUsers != \"\"){        x      }          +            @if (users$ | async; as users) {    @for (user of users$ | async; track user) {    @if (normalizeString(user.userName).indexOf(normalizeString(searchUsers)) != -1) {          {{ user.id }}      {{ user.userName }}        }    }    }    @else {    Žádná data 😦    }    @if (activeCreateModal) {                    Creating        x                                                  User name            @if(userName.invalid && userName.touched){            is required            }                                                                  User email            @if(userMail.invalid && userMail.touched){            must be a valid email address            }                                              Identity of user                      none            @for(person of persons$ | async;track person){            {{person.firstName}}            }                                                Create                                }  @if (activeEditModal) {                    Editing User        x                                                  User name            @if(userName.invalid && userName.touched){            is required            }                          @if(!editingUser.emailConfirmed){                not              }              confirmed                                                                  User email            @if(email.invalid && email.touched){            must be a valid email address            }                                                                  User Role                                @for(role of roles;track role){              {{role==\"\"?\\'None\\':role}}            }                                                Identity                      @if(editingUser.deleted){              Undelete            }            @else {              Delete            }                      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPatch.html":{"url":"interfaces/UserPatch.html","title":"interface - UserPatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserPatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            userName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PersonDetailModel } from \"./person.interface\";\n\nexport interface UserDetail {\n  deleted:boolean;\n  emailConfirmed:boolean;\n  role:string;\n  id: string;\n  userName: string;\n  email: string;\n  person: PersonDetailModel;\n}\n\nexport interface UserCreate {\n  name:string;\n  email:string;\n  personId:string;\n  password:string;\n}\n\nexport interface UserPatch {\n  userName: string;\n  email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Private\n                                users\n                            \n                            \n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRole\n                            \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                generatePatch\n                            \n                            \n                                changePassword\n                            \n                            \n                                Patch\n                            \n                            \n                                removeRole\n                            \n                            \n                                unDelete\n                            \n                            \n                                updateUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRole\n                        \n                    \n                \n            \n            \n                \naddRole(id: string, role: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                role\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(model: UserCreate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            UserCreate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatePatch\n                        \n                    \n                \n            \n            \n                \ngeneratePatch(model: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:53\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Patch\n                        \n                    \n                \n            \n            \n                \nPatch(id: string, model: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                model\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRole\n                        \n                    \n                \n            \n            \n                \nremoveRole(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unDelete\n                        \n                    \n                \n            \n            \n                \nunDelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUsers\n                        \n                    \n                \n            \n            \n                \nupdateUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"/api/v1/User\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.users.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { UserCreate, UserDetail, UserPatch } from '../models/user.interface';\nimport { PersonCreateModel } from '../models/person.interface';\nimport { query } from '@angular/animations';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  protected readonly baseUrl = \"/api/v1/User\"\n  private users = new BehaviorSubject([]);\n  users$ = this.users.asObservable();\n\n\n  constructor(private httpClient: HttpClient) {\n    this.updateUsers()\n   }\n\n   updateUsers(){\n    this.httpClient.get(this.baseUrl)\n    .subscribe(x => {this.users.next(x);console.log(x)})\n   }\n\n   create(model:UserCreate){\n    return this.httpClient.post(`${this.baseUrl}/CreateUser`,model)\n   }\n   \n  Patch(id:string,model:Partial){\n    const url = `${this.baseUrl}/${id}`\n    var patch = this.generatePatch(model);\n    console.log(patch)\n    return this.httpClient.patch(url,patch)\n  }\n  \n  delete(id:string){\n    return this.httpClient.delete(`${this.baseUrl}/SoftDelete/${id}`)\n  }\n\n  unDelete(id:string){\n    return this.httpClient.get(`${this.baseUrl}/UndeleteUser/${id}`)\n  }\n  \n  addRole(id:string,role:string){\n    return this.httpClient.get(`${this.baseUrl}/AddRole`,{params:{userId:id,role:role}})\n  }\n  \n  removeRole(id:string){\n    return this.httpClient.get(`${this.baseUrl}/RemoveRole`,{params:{userId:id}})\n  }\n\n  generatePatch(model: Partial): any[] {\n    const patch: any[] = [];\n\n    Object.keys(model).forEach((key) => {\n\n        patch.push({\n          op: 'replace',\n          path: `${key}`,\n          value: (model as any)[key],\n        });\n\n    });\n\n    return patch;\n  }\n\n  changePassword(email:string){\n    return this.httpClient.get(`${this.baseUrl}/ChangePassword/${email}`)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ValidateEmailPageComponent.html":{"url":"components/ValidateEmailPageComponent.html","title":"component - ValidateEmailPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ValidateEmailPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/validate-email-page/validate-email-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-validateEmail-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n            \n                styleUrls\n                ./validate-email-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./validate-email-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                lastError$\n                            \n                            \n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/validate-email-page/validate-email-page.component.ts:16\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/validate-email-page/validate-email-page.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/validate-email-page/validate-email-page.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastError$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/validate-email-page/validate-email-page.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/validate-email-page/validate-email-page.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { ActivatedRoute, RouterLink } from '@angular/router';\nimport { TokenModel } from '../../models/auth.interface';\n\n@Component({\n  selector: 'app-validateEmail-page',\n  standalone:true,\n  imports:[RouterLink],\n  templateUrl: './validate-email-page.component.html',\n  styleUrls: ['./validate-email-page.component.scss']\n})\nexport class ValidateEmailPageComponent implements OnInit {\n  lastError$:any;\n  private readonly authService = inject(AuthService);\n  route=inject(ActivatedRoute);\n\n\n  constructor() { }\n\n  ngOnInit() {\n    this.route.queryParamMap.subscribe(params => {\n\n      this.authService.validateEmail({email:params.get(\"Email\")!,token:params.get(\"Token\")!}).subscribe(\n      {\n        next:()=>{\n\n        },\n        error:(error: any)=>{\n          this.lastError$=error.error\n          console.log(this.lastError$)\n        }\n      }\n    )\n  });\n    \n  }\n\n}\n\n    \n\n    \n        \n  \n    Confirm email\n    @if (lastError$ != null) {\n      \n        {{lastError$[\"errorMessage\"].errors[0][\"errorMessage\"]}}\n      \n    }\n    @else{\n      \n        Email was confirmed succesfuly, you can go to the login page and login\n            \n    }\n    \n      Go to Login\n    \n  \n\n    \n\n    \n                \n                    ./validate-email-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Confirm email    @if (lastError$ != null) {              {{lastError$[\"errorMessage\"].errors[0][\"errorMessage\"]}}          }    @else{              Email was confirmed succesfuly, you can go to the login page and login                }          Go to Login      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ValidateEmailPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/cdk : ^18.2.12\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            @tailwindcss/postcss : ^4.0.12\n        \n            flowbite : ^2.5.2\n        \n            postcss : ^8.5.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PersonStatus   (src/.../person.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/person.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        PersonStatus\n                    \n                \n                        \n                            \n                                 Other\n                            \n                        \n                        \n                            \n                                Value : other\n                            \n                        \n                        \n                            \n                                 Child\n                            \n                        \n                        \n                            \n                                Value : child\n                            \n                        \n                        \n                            \n                                 Instruktor\n                            \n                        \n                        \n                            \n                                Value : instruktor\n                            \n                        \n                        \n                            \n                                 Leader\n                            \n                        \n                        \n                            \n                                Value : leader\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSkarabeusUi\nThis project was generated with Angular CLI version 17.3.11.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    18 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideRouter(routes),provideHttpClient()]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
