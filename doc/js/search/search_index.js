var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.627,1,1.243]],["body/components/AppComponent.html",[0,1.015,1,2.145,2,1.893,3,0.244,4,0.183,5,1.506,6,1.506,7,1.506,8,0.183,9,3.28,10,1.342,11,2.829,12,2.829,13,2.409,14,1.788,15,1.599,16,2.006,17,4.915,18,2.006,19,5.12,20,2.757,21,5.12,22,0.238,23,0.393,24,5.758,25,1.353,26,3.558,27,1.28,28,3.843,29,1.016,30,0.022,31,1.599,32,0.238,33,0.419,34,0.96,35,0.96,36,5.12,37,3.843,38,0.954,39,0.81,40,1.421,41,5.12,42,2.909,43,0.21,44,0.858,45,1.506,46,2.006,47,2.006,48,1.506,49,2.027,50,1.506,51,0.558,52,1.506,53,1.342,54,1.421,55,1.135,56,2.578,57,1.342,58,1.506,59,1.421,60,1.506,61,2.406,62,1.421,63,1.421,64,1.342,65,1.506,66,1.342,67,1.506,68,1.342,69,1.342,70,1.342,71,1.506,72,1.342,73,1.506,74,1.342,75,1.421,76,1.342,77,1.893,78,1.342,79,1.342,80,1.421,81,1.421,82,1.506,83,1.506,84,0.015,85,0.015]],["title/guards/AuthGuard.html",[86,2.694,87,2.694]],["body/guards/AuthGuard.html",[3,0.278,4,0.188,8,0.188,13,1.857,22,0.244,25,1.377,27,1.303,29,1.043,30,0.022,32,0.322,35,0.987,38,1.098,39,0.832,40,1.459,43,0.216,44,0.881,51,0.568,69,1.379,77,2.295,84,0.015,85,0.015,87,3.945,88,3.947,89,3.369,90,6.453,91,1.82,92,3.369,93,2.929,94,3.396,95,3.947,96,1.627,97,1.303,98,3.947,99,6.206,100,5.835,101,6.206,102,3.947,103,3.02,104,3.596,105,1.627,106,1.744,107,3.369,108,3.947,109,3.947,110,5.212,111,3.369,112,2.125,113,3.369,114,2.287,115,3.947,116,1.983,117,2.125,118,2.167,119,2.295,120,3.947,121,3.947,122,2.703,123,3.947,124,3.947,125,5.212,126,5.212,127,3.947,128,3.947,129,3.945,130,5.212,131,3.947,132,2.988,133,4.417,134,3.947,135,3.947,136,3.947,137,3.947,138,3.947,139,3.947]],["title/injectables/AuthService.html",[93,1.572,105,1.111]],["body/injectables/AuthService.html",[3,0.157,4,0.157,8,0.157,13,1.554,22,0.204,23,0.354,25,1.22,27,1.711,29,1.603,30,0.022,31,1.441,32,0.356,33,0.36,34,1.516,35,1.516,38,1.069,39,0.696,40,1.221,43,0.18,44,0.737,51,0.581,69,1.612,80,1.707,84,0.014,85,0.014,91,1.859,93,2.04,94,2.896,96,1.662,97,1.33,104,3.084,105,1.441,106,1.459,107,2.818,111,2.818,116,1.659,118,2.872,119,2.324,129,2.499,140,1.659,141,2.818,142,3.084,143,2.957,144,2.896,145,6.284,146,3.494,147,4.919,148,5.763,149,4.616,150,3.301,151,2.865,152,3.301,153,2.675,154,4.616,155,3.339,156,3.301,157,1.913,158,3.301,159,3.301,160,3.301,161,2.674,162,3.301,163,4.616,164,3.301,165,4.616,166,3.301,167,2.485,168,3.301,169,1.809,170,4.616,171,3.301,172,4.616,173,2.499,174,1.659,175,1.554,176,2.818,177,1.777,178,3.301,179,1.554,180,2.261,181,4.616,182,3.301,183,3.301,184,3.301,185,5.322,186,4.616,187,2.675,188,4.616,189,4.616,190,3.301,191,2.818,192,3.301,193,3.301,194,3.301,195,2.818,196,3.301,197,3.301,198,3.301,199,3.301,200,3.301]],["title/components/ChangePasswordPageComponent.html",[0,0.627,53,1.243]],["body/components/ChangePasswordPageComponent.html",[0,0.755,1,0.793,2,1.296,3,0.167,4,0.108,5,0.89,6,0.89,7,0.89,8,0.108,10,0.793,11,2.617,12,2.617,14,0.793,15,1.094,16,0.89,18,1.373,22,0.14,23,0.269,25,0.926,26,2.788,27,1.621,29,1.272,30,0.022,31,1.502,32,0.297,33,0.382,34,1.431,35,1.431,38,0.91,39,0.479,40,0.84,43,0.124,44,0.507,45,0.89,46,1.373,47,1.373,48,0.89,49,1.588,50,0.89,51,0.467,52,0.89,53,1.68,54,2.367,55,2.154,56,2.153,57,0.793,58,0.89,59,0.84,60,0.89,61,1.885,62,0.84,63,0.84,64,0.793,65,0.89,66,0.793,67,0.89,68,0.793,69,1.816,70,0.793,71,0.89,72,0.793,73,0.89,74,0.793,75,0.84,76,0.793,77,1.296,78,0.793,79,0.793,80,0.84,81,1.922,82,0.89,83,0.89,84,0.01,85,0.01,91,1.495,93,2.126,94,2.15,96,0.709,97,0.568,103,2.031,112,1.223,117,1.887,118,2.523,129,1.72,143,2.855,144,1.141,146,3.642,151,2.304,153,2.48,161,1.141,167,1.223,173,1.72,174,1.141,175,1.069,195,1.939,201,1.425,202,5.596,203,5.596,204,1.069,205,2.685,206,2.199,207,2.199,208,2.199,209,2.15,210,1.761,211,3.505,212,3.642,213,4.28,214,3.653,215,2.992,216,4.106,217,3.505,218,2.992,219,1.939,220,2.272,221,1.556,222,2.272,223,3.24,224,1.939,225,1.72,226,2.48,227,2.199,228,1.939,229,1.72,230,1.556,231,1.72,232,1.549,233,1.556,234,1.939,235,1.939,236,1.939,237,1.939,238,1.425,239,1.316,240,1.223,241,2.272,242,1.72,243,1.939,244,1.556,245,2.272,246,1.939,247,2.272,248,2.272,249,1.939,250,1.939,251,1.939,252,1.72,253,2.272,254,2.272,255,2.272,256,2.272,257,2.272,258,2.272,259,1.72,260,1.72,261,1.939,262,2.272,263,2.272,264,2.272,265,1.939,266,3.505,267,2.272,268,1.549,269,3.505,270,3.505,271,1.035,272,2.653,273,2.992,274,3.505,275,2.401,276,3.505,277,3.505,278,3.505,279,3.505,280,3.018,281,3.505,282,1.549,283,2.992,284,3.505,285,3.505,286,3.505]],["title/components/DefaultComponent.html",[0,0.627,57,1.243]],["body/components/DefaultComponent.html",[0,0.909,1,1.088,2,1.638,3,0.211,4,0.148,5,1.221,6,1.221,7,1.221,8,0.148,10,1.088,11,2.754,12,2.754,14,1.547,15,1.383,16,1.736,17,3.781,18,1.736,20,2.385,22,0.193,23,0.34,25,1.171,27,1.586,29,1.363,30,0.022,31,1.754,34,1.483,35,1.289,38,0.983,39,0.657,40,1.152,42,2.358,43,0.17,44,0.695,45,1.221,46,1.736,47,1.736,48,1.221,49,1.854,50,1.221,51,0.483,52,1.221,53,1.088,54,1.152,55,0.92,56,2.416,57,1.962,58,1.221,59,1.152,60,1.221,61,2.201,62,1.152,63,1.152,64,1.088,65,1.221,66,1.088,67,2.02,68,1.088,69,1.088,70,1.088,71,1.221,72,1.088,73,1.221,74,1.088,75,1.907,76,1.088,77,2.549,78,1.088,79,1.088,80,1.152,81,1.152,82,1.221,83,1.221,84,0.013,85,0.013,91,1.801,93,2.278,112,1.677,147,4.794,175,1.466,226,2.988,227,1.954,238,2.779,287,2.658,288,3.354,289,3.034,290,4.43,291,4.43,292,5.156,293,2.278,294,4.252,295,5.617,296,4.43,297,3.115,298,3.115,299,3.115,300,3.115,301,3.115,302,3.781,303,1.677,304,3.115,305,3.115,306,5.156,307,2.658,308,3.115,309,2.358,310,3.034,311,4.43,312,4.43,313,4.43,314,4.43,315,3.781,316,4.43,317,4.43,318,3.354,319,3.034,320,3.354,321,4.43,322,4.43]],["title/interfaces/DishAddIngredientModel.html",[323,0.273,324,1.788]],["body/interfaces/DishAddIngredientModel.html",[3,0.228,4,0.228,8,0.228,22,0.295,23,0.452,30,0.022,32,0.395,33,0.784,43,0.374,51,0.696,84,0.017,85,0.017,282,2.602,323,0.525,324,2.959,325,1.263,326,2.769,327,6.383,328,4.372,329,4.832,330,2.112,331,1.007,332,2.402,333,2.998,334,2.402,335,2.998,336,2.402,337,2.998,338,4.004,339,2.998,340,2.998,341,2.998,342,3.695,343,2.998,344,2.402]],["title/interfaces/DishCreate.html",[323,0.273,334,1.788]],["body/interfaces/DishCreate.html",[3,0.232,4,0.232,8,0.232,22,0.3,23,0.456,30,0.022,32,0.368,33,0.786,43,0.376,51,0.763,84,0.018,85,0.018,323,0.527,324,2.442,325,1.284,326,2.816,330,2.147,331,1.024,332,3.367,333,3.048,334,2.989,335,3.048,336,2.442,337,3.048,338,4.034,339,3.048,340,3.048,341,3.048,342,3.732,343,3.048,344,2.442]],["title/interfaces/DishDetail.html",[323,0.273,330,1.572]],["body/interfaces/DishDetail.html",[3,0.222,4,0.222,8,0.222,22,0.288,23,0.445,30,0.022,32,0.408,33,0.79,43,0.371,51,0.755,84,0.017,85,0.017,323,0.521,324,2.341,325,1.231,326,2.7,330,2.562,331,1.392,332,3.318,333,2.923,334,2.341,335,2.923,336,3.171,337,2.923,338,3.959,339,2.923,340,2.923,341,2.923,342,3.637,343,2.923,344,2.341,345,5.386,346,3.97]],["title/interfaces/DishIngredientModel.html",[323,0.273,344,1.788]],["body/interfaces/DishIngredientModel.html",[3,0.232,4,0.232,8,0.232,22,0.3,23,0.456,30,0.022,32,0.368,33,0.786,43,0.376,51,0.701,84,0.018,85,0.018,323,0.527,324,2.442,325,1.284,326,2.816,328,4.404,329,4.868,330,2.147,331,1.024,332,2.442,333,3.048,334,2.442,335,3.048,336,2.442,337,3.048,338,4.034,339,3.048,340,3.048,341,3.048,342,3.732,343,3.048,344,2.989]],["title/injectables/DishService.html",[105,1.111,347,2.694]],["body/injectables/DishService.html",[3,0.135,4,0.135,8,0.135,13,1.333,22,0.175,23,0.317,25,1.094,27,1.678,29,1.671,30,0.022,31,1.864,32,0.405,33,0.689,34,1.222,35,1.344,38,0.947,39,0.597,43,0.155,44,0.633,51,0.689,84,0.012,85,0.012,91,0.99,96,2.013,97,1.58,103,3.115,104,2.398,105,1.292,106,1.252,114,1.642,116,1.424,118,2.032,119,1.808,133,4.88,140,1.424,142,2.832,143,2.3,144,3,153,2.398,157,1.642,169,1.622,174,1.424,176,2.418,177,2.632,187,1.642,191,4.588,293,2.16,319,4.09,324,2.456,330,1.252,331,1.03,334,2.456,336,1.424,344,2.456,346,2.834,347,3.132,348,2.418,349,4.138,350,4.138,351,2.596,352,4.138,353,4.138,354,4.138,355,4.138,356,5.376,357,1.778,358,4.138,359,2.833,360,2.833,361,2.833,362,2.833,363,3.132,364,3.098,365,2.833,366,1.778,367,3.132,368,2.833,369,3,370,2.833,371,2.833,372,2.833,373,4.138,374,2.833,375,2.833,376,2.833,377,2.833,378,4.138,379,2.833,380,2.833,381,4.138,382,4.138,383,2.145,384,2.833,385,1.642,386,4.138,387,2.833,388,2.628,389,3.32,390,2.596,391,3.532,392,3.532,393,2.145,394,2.833,395,2.833,396,2.833,397,4.138,398,4.889,399,4.889,400,2.833,401,2.833,402,2.833,403,2.833,404,2.833,405,2.833,406,2.418,407,2.833,408,2.145,409,1.778,410,1.778,411,1.778,412,1.778,413,1.778]],["title/injectables/EditService.html",[105,1.111,414,1.916]],["body/injectables/EditService.html",[3,0.13,4,0.13,8,0.13,13,1.287,15,1.495,22,0.169,23,0.309,25,1.066,27,1.772,29,1.717,30,0.022,31,1.995,32,0.395,33,0.77,34,1.647,35,1.647,38,0.793,39,0.576,43,0.149,44,0.611,49,0.903,51,0.643,84,0.012,85,0.012,96,1.841,97,1.474,105,1.259,106,1.208,116,1.374,118,2.772,119,1.011,140,1.374,169,2.452,177,1.472,226,3.416,268,1.208,282,1.781,328,1.873,389,3.733,414,2.171,415,2.334,416,4.032,417,4.032,418,5.896,419,5.896,420,5.896,421,4.789,422,4.087,423,4.789,424,4.032,425,5.285,426,5.285,427,5.285,428,4.032,429,4.032,430,4.032,431,4.032,432,4.032,433,4.032,434,5.285,435,2.735,436,2.735,437,2.735,438,2.735,439,2.735,440,4.032,441,2.735,442,2.735,443,2.735,444,4.032,445,2.735,446,2.334,447,2.735,448,2.735,449,4.032,450,2.735,451,2.07,452,2.735,453,4.032,454,2.735,455,3.441,456,2.735,457,5.896,458,2.735,459,4.032,460,2.735,461,2.735,462,4.032,463,2.735,464,2.735,465,4.032,466,2.735,467,2.735,468,2.735,469,2.735,470,2.735,471,1.287,472,1.716,473,2.735,474,2.735,475,2.735,476,4.789,477,6.258,478,2.735,479,2.735,480,2.735,481,2.735,482,2.735,483,2.735,484,2.735,485,2.735,486,2.735,487,2.735,488,2.735,489,2.735]],["title/interfaces/EventCreateModel.html",[323,0.273,490,2.232]],["body/interfaces/EventCreateModel.html",[3,0.2,4,0.2,8,0.2,22,0.259,23,0.416,30,0.022,32,0.416,33,0.809,38,0.898,43,0.296,51,0.717,84,0.016,85,0.016,268,1.851,319,2.87,323,0.416,325,1.107,330,2.395,331,0.883,332,3.305,490,3.4,491,3.172,492,4.505,493,4.979,494,5.421,495,4.505,496,3.576,497,2.004,498,2.723,499,2.629,500,3.4,501,3.904,502,3.984,503,3.984,504,3.191,505,4.808,506,2.256,507,3.576,508,3.172,509,3.576]],["title/interfaces/EventDetailModel.html",[323,0.273,506,1.916]],["body/interfaces/EventDetailModel.html",[3,0.185,4,0.185,8,0.185,22,0.24,23,0.396,30,0.022,32,0.432,33,0.804,38,0.855,43,0.282,51,0.7,84,0.015,85,0.015,97,1.289,268,2.837,282,2.28,319,4.225,323,0.396,325,1.027,330,2.726,331,1.3,332,3.226,490,2.438,491,2.942,492,4.397,493,4.86,494,3.317,495,4.397,496,3.317,497,2.281,498,3.1,499,2.438,500,3.236,501,3.824,502,3.87,503,3.87,504,3.1,505,4.67,506,2.777,507,5.265,508,4.67,509,3.317,510,5.791]],["title/pipes/EventPipe.html",[511,2.232,512,2.437]],["body/pipes/EventPipe.html",[3,0.221,4,0.221,8,0.221,10,1.62,14,1.62,15,1.448,25,1.226,27,1.159,29,1.226,30,0.022,32,0.287,33,0.687,34,1.159,38,0.958,39,0.978,43,0.253,44,1.035,51,0.687,63,2.329,84,0.017,85,0.017,96,1.448,97,1.159,117,2.497,119,2.329,132,4.376,169,2.583,240,2.497,388,2.403,504,2.905,506,3.549,511,3.626,512,3.959,513,3.511,514,3.959,515,3.511,516,5.781,517,6.298,518,4.638,519,2.91,520,4.934,521,3.511,522,4.638,523,4.638,524,4.638,525,5.781,526,4.638,527,4.638,528,3.959]],["title/injectables/EventService.html",[105,1.111,529,2.437]],["body/injectables/EventService.html",[3,0.135,4,0.135,8,0.135,13,1.333,22,0.175,23,0.317,25,1.094,27,1.695,29,1.704,30,0.022,31,0.885,32,0.41,33,0.79,34,1.222,35,1.344,38,0.891,39,0.597,43,0.155,44,0.633,51,0.703,84,0.012,85,0.012,91,0.99,96,2.045,97,1.611,104,1.642,105,1.292,106,1.252,114,1.642,116,1.424,119,2.384,140,1.424,142,2.832,143,2.3,144,3,153,2.832,169,2.107,174,1.424,177,2.632,293,2.638,320,4.52,328,4.09,331,1.259,351,2.596,357,1.778,363,3.132,364,2.873,366,1.778,367,3.132,369,2.701,385,1.642,388,2.483,389,3.078,390,1.778,393,3.132,408,2.145,409,1.778,410,1.778,411,1.778,412,1.778,413,1.778,451,4.52,490,3.067,506,1.525,521,2.145,529,2.834,530,2.418,531,4.138,532,4.138,533,2.596,534,2.596,535,4.138,536,4.138,537,5.376,538,4.138,539,4.138,540,2.833,541,4.138,542,2.833,543,2.145,544,2.833,545,2.145,546,2.833,547,2.833,548,2.145,549,2.833,550,4.138,551,2.833,552,4.138,553,2.833,554,2.833,555,4.138,556,2.833,557,2.833,558,4.138,559,2.833,560,2.418,561,2.418,562,2.833,563,2.833,564,2.833,565,2.833,566,2.833,567,2.833,568,2.145,569,2.833,570,2.145,571,2.418,572,2.833,573,2.833,574,2.145,575,2.833,576,2.833,577,2.833,578,3.532,579,2.833,580,2.833]],["title/components/FoodPageComponent.html",[0,0.627,64,1.243]],["body/components/FoodPageComponent.html",[0,1.04,1,1.409,2,1.955,3,0.252,4,0.192,5,1.58,6,1.58,7,1.58,8,0.192,10,1.409,11,2.845,12,2.845,14,1.846,15,1.65,16,2.071,18,2.071,20,2.846,30,0.021,38,0.876,39,0.85,43,0.22,44,0.9,45,1.58,46,2.071,47,2.071,48,1.58,49,2.066,50,1.58,51,0.577,52,1.58,53,1.409,54,1.491,55,1.191,56,2.613,57,1.409,58,1.58,59,2.314,60,1.58,61,2.452,62,1.491,63,1.491,64,2.186,65,2.311,66,1.409,67,1.58,68,1.409,69,1.409,70,1.409,71,1.58,72,1.409,73,1.58,74,1.409,75,1.491,76,1.409,77,1.955,78,1.409,79,1.409,80,1.491,81,2.181,82,1.58,83,1.58,84,0.016,85,0.016,204,1.898,209,2.656,210,2.656,581,3.442,582,3.442,583,6.259,584,4.033,585,3.442,586,3.442]],["title/components/HomePageComponent.html",[0,0.627,66,1.243]],["body/components/HomePageComponent.html",[0,0.553,1,0.502,2,0.895,3,0.115,4,0.068,5,0.563,6,0.563,7,0.563,8,0.068,10,0.502,11,2.364,12,2.364,14,0.845,15,0.979,16,0.948,18,0.948,20,1.303,22,0.194,23,0.186,25,0.639,26,2.131,27,1.633,29,1.572,30,0.022,31,1.616,32,0.355,33,0.614,34,1.243,35,1.243,38,0.824,39,0.303,40,0.531,43,0.078,44,0.321,45,0.563,46,0.948,47,0.948,48,0.563,49,1.563,50,0.563,51,0.6,52,0.563,53,0.502,54,0.531,55,0.424,56,1.744,57,0.502,58,0.563,59,0.531,60,0.563,61,1.441,62,0.531,63,1.518,64,0.502,65,0.563,66,1.285,67,1.855,68,0.502,69,0.502,70,0.502,71,0.563,72,0.502,73,0.563,74,0.502,75,0.531,76,0.502,77,0.895,78,0.502,79,0.502,80,0.531,81,1.159,82,0.563,83,0.563,84,0.007,85,0.007,94,1.575,96,1.616,97,1.293,113,1.226,118,2.151,119,1.646,122,0.984,167,0.773,169,1.609,175,0.676,204,0.676,209,1.216,210,1.216,218,1.226,219,1.226,221,0.984,224,1.226,230,0.984,231,1.087,232,0.635,233,0.984,244,0.984,268,1.069,280,2.792,282,2.363,303,0.773,320,3.917,331,0.303,332,1.216,346,3.243,383,1.087,388,1.968,414,1.98,422,3.14,446,1.226,493,1.831,495,0.984,504,1.575,505,1.087,506,2.786,508,1.831,512,1.657,521,1.087,528,3.14,529,2.519,568,1.087,587,5.61,588,5.61,589,2.42,590,1.657,591,3.679,592,2.42,593,3.679,594,2.42,595,2.42,596,3.679,597,3.679,598,2.42,599,2.42,600,2.42,601,3.679,602,2.42,603,3.135,604,2.42,605,3.135,606,2.42,607,2.42,608,2.42,609,2.42,610,1.436,611,5.349,612,1.436,613,4.106,614,1.436,615,1.436,616,1.436,617,1.436,618,2.42,619,5.175,620,1.436,621,1.436,622,1.436,623,1.226,624,1.436,625,1.436,626,1.436,627,1.436,628,1.436,629,1.436,630,4.451,631,1.436,632,1.436,633,2.42,634,1.436,635,1.436,636,1.436,637,1.436,638,1.436,639,1.436,640,1.226,641,1.436,642,1.226,643,1.657,644,2.42,645,2.42,646,2.42,647,2.42,648,1.436,649,1.436,650,1.226,651,1.436,652,1.436,653,1.436,654,0.984,655,1.436,656,1.436,657,1.436,658,1.436,659,1.436,660,1.436,661,1.436,662,1.436,663,1.436,664,1.436,665,2.42,666,1.436,667,2.42,668,1.087,669,1.436,670,1.436,671,1.436,672,1.436,673,1.436,674,1.436,675,2.743,676,1.436,677,1.436,678,1.436,679,1.436,680,2.42,681,1.436,682,1.436,683,1.436,684,2.42,685,1.436,686,1.436,687,1.436,688,1.436,689,1.436,690,3.135,691,1.436,692,4.163,693,4.106,694,1.436,695,2.42,696,3.135,697,1.436,698,1.436,699,1.436,700,1.436,701,1.436,702,1.436,703,2.42,704,2.42,705,1.436,706,1.436,707,1.436,708,1.436,709,1.436,710,1.436,711,1.436,712,1.436,713,1.436,714,1.436,715,2.42,716,1.436,717,1.436,718,1.436,719,2.42,720,1.436,721,1.436,722,2.42,723,1.436,724,1.436,725,1.436,726,1.436,727,1.436,728,1.436,729,2.42,730,2.42,731,1.436,732,1.436,733,1.436,734,2.42,735,1.436,736,1.436,737,2.42,738,1.226,739,1.436,740,1.436,741,1.436,742,2.42,743,1.436,744,1.436,745,1.436,746,1.436,747,1.436,748,1.436,749,2.42,750,2.42,751,2.42,752,2.42,753,2.42,754,3.679,755,3.679,756,2.42,757,4.049,758,3.679,759,2.42,760,2.42,761,3.679,762,2.42,763,2.42,764,3.14,765,2.42,766,3.679,767,2.42,768,3.679,769,2.42,770,2.42,771,2.42,772,2.42,773,3.679,774,3.679,775,2.42,776,3.679,777,2.42,778,4.451,779,2.42,780,2.42,781,2.065,782,2.42,783,2.42,784,2.42,785,2.42,786,2.42,787,2.42,788,2.42,789,1.303,790,2.42,791,2.42,792,2.42,793,2.42]],["title/interfaces/IngredientCreate.html",[323,0.273,794,2.232]],["body/interfaces/IngredientCreate.html",[3,0.246,4,0.246,8,0.246,22,0.319,23,0.474,30,0.021,32,0.382,33,0.763,43,0.337,51,0.763,84,0.018,85,0.018,282,3.023,323,0.474,325,1.366,331,1.089,794,3.874,795,3.911,796,5.293,797,3.242]],["title/interfaces/IngredientDetail.html",[323,0.273,797,2.232]],["body/interfaces/IngredientDetail.html",[3,0.242,4,0.242,8,0.242,22,0.314,23,0.469,30,0.021,32,0.405,33,0.78,43,0.334,51,0.759,84,0.018,85,0.018,282,3.005,323,0.469,325,1.342,331,1.434,794,3.185,795,3.843,796,5.268,797,3.833]],["title/interfaces/IngredientDishDetail.html",[323,0.273,336,1.788]],["body/interfaces/IngredientDishDetail.html",[3,0.217,4,0.217,8,0.217,22,0.282,23,0.439,30,0.022,32,0.426,33,0.788,43,0.369,51,0.751,84,0.017,85,0.017,282,3.042,323,0.518,324,2.289,325,1.204,326,2.639,329,4.728,330,2.013,331,1.381,332,2.289,333,2.858,334,2.289,335,2.858,336,2.872,337,2.858,338,3.919,339,2.858,340,2.858,341,2.858,342,3.586,343,2.858,344,2.289,796,4.728,798,6.246,799,6.246]],["title/injectables/IngredientService.html",[105,1.111,800,2.694]],["body/injectables/IngredientService.html",[3,0.163,4,0.163,8,0.163,13,1.608,22,0.211,23,0.363,25,1.25,27,1.684,29,1.623,30,0.022,31,1.067,32,0.403,33,0.693,34,1.355,35,1.462,38,0.969,39,0.72,43,0.187,44,0.763,51,0.67,84,0.014,85,0.014,91,1.194,96,1.983,97,1.535,104,1.98,105,1.476,106,1.51,114,1.98,116,1.717,118,2.254,119,2.163,140,1.717,142,3.141,143,2.551,144,3.192,157,1.98,169,1.853,174,1.717,177,2.919,293,2.395,331,0.997,345,5.422,346,3.238,351,2.966,357,2.144,363,3.579,364,3.086,366,2.144,367,3.579,369,2.94,385,1.98,388,2.553,389,3.15,390,2.966,391,2.917,392,4.036,393,2.587,406,2.917,408,2.587,409,2.144,410,2.144,411,2.144,412,2.144,413,2.144,578,2.917,794,3.401,797,2.144,800,3.579,801,2.917,802,4.728,803,4.728,804,4.728,805,5.85,806,4.728,807,3.418,808,3.418,809,3.418,810,3.418,811,3.418,812,4.728,813,3.418,814,3.418,815,4.728,816,3.418,817,3.418,818,4.728,819,3.418,820,3.418,821,3.418,822,3.418,823,3.418]],["title/interfaces/LoginModel.html",[155,2.062,323,0.273]],["body/interfaces/LoginModel.html",[3,0.245,4,0.245,8,0.245,22,0.318,23,0.472,30,0.021,32,0.381,33,0.773,43,0.36,55,2.017,84,0.018,85,0.018,151,2.768,155,3.567,161,3.093,271,2.017,323,0.506,325,1.359,824,3.521,825,2.979,826,3.892,827,2.979,828,2.979]],["title/components/LoginPageComponent.html",[0,0.627,68,1.243]],["body/components/LoginPageComponent.html",[0,0.732,1,0.756,2,1.249,3,0.161,4,0.103,5,0.849,6,0.849,7,0.849,8,0.103,10,0.756,11,2.593,12,2.593,14,1.18,15,1.817,16,1.323,18,1.323,20,1.818,22,0.134,23,0.259,25,0.893,27,1.582,29,1.097,30,0.022,31,1.464,32,0.134,34,1.455,35,1.455,38,0.893,39,0.456,40,0.801,43,0.118,44,0.483,45,0.849,46,1.323,47,1.323,48,0.849,49,1.548,50,0.849,51,0.368,52,0.849,53,0.756,54,0.801,55,1.766,56,2.111,57,0.756,58,0.849,59,0.801,60,0.849,61,1.838,62,0.801,63,0.801,64,0.756,65,0.849,66,0.756,67,0.849,68,1.638,69,2.176,70,0.756,71,0.849,72,0.756,73,0.849,74,0.756,75,0.801,76,0.756,77,1.249,78,0.756,79,0.756,80,0.801,81,1.535,82,0.849,83,0.849,84,0.01,85,0.01,93,2.072,94,2.356,103,1.957,112,1.166,133,3.849,143,2.978,157,1.255,167,1.818,169,2.111,175,1.019,187,1.255,204,1.019,206,2.605,207,2.605,209,1.697,210,1.697,212,3.55,221,1.483,226,2.406,227,2.119,230,1.483,233,1.483,238,2.605,239,1.255,242,1.639,252,2.557,268,2.702,271,1.869,288,3.143,293,3.064,303,1.166,388,0.9,640,1.848,650,1.848,675,1.255,829,5.475,830,5.475,831,4.152,832,4.152,833,4.152,834,4.152,835,3.377,836,2.717,837,4.69,838,4.152,839,4.69,840,2.165,841,2.165,842,2.165,843,3.377,844,2.165,845,4.69,846,5.627,847,5.387,848,2.165,849,3.377,850,2.165,851,2.557,852,2.165,853,2.165,854,2.165,855,1.639,856,2.165,857,2.165,858,2.165,859,4.69,860,2.165,861,3.377,862,2.165,863,2.165,864,2.165,865,3.377,866,3.377,867,3.377,868,3.377,869,4.69,870,3.69,871,4.69,872,3.55,873,3.55,874,3.377,875,5.821,876,3.377,877,3.377,878,4.69,879,3.377,880,3.377,881,1.848,882,3.377,883,2.882,884,3.377,885,3.377,886,3.377,887,3.377,888,3.377,889,1.848]],["title/components/NotFoundPageComponent.html",[0,0.627,70,1.243]],["body/components/NotFoundPageComponent.html",[0,1.033,1,1.389,2,1.937,3,0.25,4,0.19,5,1.559,6,1.559,7,1.559,8,0.19,10,1.389,11,2.841,12,2.841,14,1.83,15,1.636,16,2.053,18,2.053,20,2.82,30,0.021,38,0.868,39,0.838,40,1.471,43,0.217,44,0.888,45,1.559,46,2.053,47,2.053,48,1.559,49,2.055,50,1.559,51,0.571,52,1.559,53,1.389,54,1.471,55,1.175,56,2.603,57,1.389,58,1.559,59,1.471,60,1.559,61,2.439,62,1.471,63,1.471,64,1.389,65,1.559,66,1.389,67,2.295,68,1.389,69,1.389,70,2.174,71,1.559,72,1.389,73,1.559,74,1.389,75,1.471,76,1.389,77,1.937,78,1.389,79,1.389,80,1.471,81,2.166,82,1.559,83,1.559,84,0.015,85,0.015,204,1.872,209,2.632,210,2.632,238,3.675,275,3.588,890,3.395,891,5.99,892,3.395,893,5.239]],["title/interfaces/PasswordResetModel.html",[151,1.916,323,0.273]],["body/interfaces/PasswordResetModel.html",[3,0.248,4,0.248,8,0.248,22,0.322,23,0.476,30,0.021,32,0.322,33,0.748,43,0.362,55,2.026,84,0.018,85,0.018,151,3.339,155,3.017,161,3.329,271,1.538,323,0.508,325,1.376,824,3.566,825,3.017,826,3.941,827,3.594,828,3.017]],["title/components/PeoplePageComponent.html",[0,0.627,72,1.243]],["body/components/PeoplePageComponent.html",[0,0.97,1,1.229,2,1.784,3,0.23,4,0.168,5,1.378,6,1.378,7,1.378,8,0.168,10,1.229,11,2.799,12,2.799,14,1.229,15,1.098,16,1.89,18,1.89,22,0.217,23,0.37,27,1.206,30,0.022,32,0.217,34,0.879,35,0.879,38,1.028,39,0.741,43,0.192,44,0.785,45,1.378,46,1.89,47,1.89,48,1.378,49,1.955,50,1.378,51,0.6,52,1.378,53,1.229,54,1.301,55,1.039,56,2.511,57,1.229,58,1.378,59,1.301,60,1.378,61,2.321,62,1.301,63,1.301,64,1.229,65,1.378,66,1.229,67,1.378,68,1.229,69,1.229,70,1.229,71,1.378,72,2.069,73,2.619,74,2.069,75,1.301,76,1.229,77,2.507,78,1.923,79,1.229,80,1.301,81,2.035,82,1.378,83,1.378,84,0.014,85,0.014,91,1.229,92,3.002,93,2.617,96,1.098,97,0.879,112,1.894,201,2.207,204,1.655,205,2.207,208,3.026,209,2.766,210,2.424,229,3.651,240,1.894,289,3.304,293,2.432,302,4.117,303,1.894,310,3.304,385,2.038,586,4.117,894,4.698,895,4.698,896,3.518,897,2.663,898,3.518,899,2.663,900,3.518,901,3.518,902,4.824,903,4.824]],["title/interfaces/PersonCreateModel.html",[323,0.273,471,1.674]],["body/interfaces/PersonCreateModel.html",[3,0.148,4,0.148,8,0.148,22,0.193,23,0.34,30,0.022,32,0.432,33,0.812,43,0.307,84,0.013,85,0.013,97,1.757,232,2.915,268,3.245,271,1.753,323,0.396,325,0.823,331,0.657,471,2.085,497,1.152,498,2.226,500,1.954,501,2.567,502,2.779,503,2.779,504,1.565,827,1.805,904,1.954,905,4.064,906,4.492,907,4.492,908,4.492,909,4.492,910,4.492,911,4.492,912,4.064,913,4.492,914,3.903,915,4.492,916,4.492,917,4.492,918,4.064,919,3.723,920,3.354,921,2.358,922,2.133,923,2.358,924,2.779,925,2.779,926,2.779]],["title/interfaces/PersonDetailModel.html",[323,0.273,497,1.316]],["body/interfaces/PersonDetailModel.html",[3,0.165,4,0.165,8,0.165,22,0.214,23,0.366,30,0.022,32,0.404,33,0.809,43,0.322,84,0.014,85,0.014,97,1.741,232,2.727,268,3.253,271,1.41,323,0.419,325,0.916,331,0.73,471,1.63,497,1.765,498,2.744,500,2.173,501,2.765,502,2.994,503,2.994,504,1.741,827,2.765,904,2.173,905,3.269,906,3.613,907,4.672,908,4.672,909,3.613,910,4.672,911,4.672,912,3.269,913,3.613,915,3.613,916,4.672,917,4.672,918,4.227,919,3.871,920,3.613,921,2.622,922,2.373,923,2.622,924,2.994,925,2.994,926,2.994]],["title/pipes/PersonPipe.html",[511,2.232,590,2.437]],["body/pipes/PersonPipe.html",[3,0.226,4,0.226,8,0.226,10,1.654,14,1.654,15,1.478,25,1.251,27,1.184,29,1.251,30,0.022,32,0.293,33,0.693,34,1.184,38,0.97,39,0.998,43,0.259,44,1.057,51,0.693,84,0.017,85,0.017,96,1.478,97,1.184,117,2.549,119,2.165,132,3.584,240,2.549,472,2.971,497,2.351,498,3.194,501,3.683,511,3.673,513,3.584,515,3.584,519,2.971,520,4.998,590,4.01,789,3.422,927,4.041,928,5.856,929,4.735,930,4.735,931,4.735,932,4.735,933,4.432,934,4.735,935,4.735]],["title/injectables/PersonService.html",[105,1.111,936,2.232]],["body/injectables/PersonService.html",[3,0.155,4,0.155,8,0.155,13,1.531,15,1.016,22,0.201,23,0.351,25,1.208,27,1.666,29,1.594,30,0.022,31,1.016,32,0.405,33,0.658,34,1.431,35,1.508,38,0.949,39,0.686,43,0.178,44,0.726,49,1.509,51,0.682,75,2.313,84,0.013,85,0.013,91,1.137,96,2.006,97,1.563,104,2.648,105,1.427,106,1.438,114,1.885,116,1.635,118,2.196,119,2.313,140,1.635,142,3.06,143,2.485,144,3.143,153,3.495,169,2.364,174,1.635,177,2.843,232,2.019,293,2.333,331,0.963,351,2.867,357,2.041,364,3.031,366,2.041,369,3.031,385,1.885,388,1.9,389,1.752,390,2.041,409,2.041,410,2.041,411,2.041,412,2.041,413,2.041,455,2.777,471,2.485,472,2.041,497,1.203,533,2.867,534,2.867,543,2.463,545,2.463,548,2.463,568,3.459,570,2.463,571,2.777,574,2.463,675,1.885,936,2.867,937,2.777,938,4.569,939,4.569,940,3.254,941,3.254,942,3.9,943,3.254,944,3.254,945,3.254,946,3.254,947,4.569,948,4.569,949,3.254,950,3.254,951,4.569,952,3.254,953,3.254,954,3.254,955,3.254,956,3.254,957,3.254,958,3.254,959,3.254,960,3.254,961,3.254,962,3.254,963,3.254,964,3.254,965,3.254,966,2.777,967,2.777,968,2.777,969,2.777]],["title/components/PersonsListComponent.html",[0,0.627,74,1.243]],["body/components/PersonsListComponent.html",[0,0.557,1,0.507,2,0.903,3,0.238,4,0.069,5,0.569,6,0.569,7,0.569,8,0.069,10,0.507,11,2.371,12,2.371,14,0.853,15,1.156,16,0.957,18,0.957,20,1.314,22,0.09,23,0.187,25,0.645,26,2.146,27,1.646,29,1.525,30,0.022,31,1.765,32,0.341,33,0.617,34,1.468,35,1.413,38,0.861,39,0.306,40,0.537,43,0.079,44,0.324,45,0.569,46,0.957,47,0.957,48,0.569,49,1.477,50,0.569,51,0.705,52,0.569,53,0.507,54,0.537,55,0.429,56,1.753,57,0.507,58,0.569,59,0.537,60,0.569,61,1.451,62,0.537,63,0.537,64,0.507,65,0.569,66,0.507,67,0.569,68,0.507,69,0.507,70,0.507,71,0.569,72,0.507,73,1.238,74,1.294,75,2.237,76,0.507,77,0.903,78,0.507,79,0.507,80,0.537,81,0.537,82,0.569,83,0.569,84,0.007,85,0.007,91,1.103,94,1.587,96,1.29,97,1.032,103,0.841,106,0.641,119,0.537,122,2.537,157,1.414,167,0.782,175,0.683,187,2.146,206,1.982,207,1.982,223,2.804,225,1.099,226,1.83,232,1.396,239,0.841,244,0.994,259,1.099,260,1.099,271,1.475,280,2.323,282,2.102,288,2.391,289,2.164,293,1.396,294,2.804,303,0.782,309,3.781,310,2.537,331,0.515,364,0.729,369,1.861,388,1.015,389,1.314,414,1.701,471,1.944,472,1.531,492,2.537,495,2.537,497,1.655,504,1.861,519,0.911,533,2.807,534,1.531,643,0.994,654,0.994,668,1.099,675,2.894,757,1.848,789,1.994,870,2.537,881,2.084,889,2.084,897,5.011,905,1.672,912,2.537,914,2.804,918,2.537,919,0.911,924,2.323,925,2.323,926,2.323,933,1.848,936,1.982,970,5.65,971,1.099,972,2.084,973,2.084,974,2.084,975,3.161,976,3.161,977,2.441,978,2.441,979,2.441,980,4.131,981,2.441,982,2.441,983,3.161,984,3.161,985,2.441,986,2.084,987,1.848,988,3.161,989,2.084,990,3.704,991,3.704,992,1.848,993,2.441,994,1.452,995,1.452,996,1.452,997,2.441,998,1.452,999,1.452,1000,1.239,1001,1.452,1002,1.239,1003,1.848,1004,2.804,1005,1.452,1006,1.848,1007,1.452,1008,1.239,1009,1.452,1010,1.452,1011,1.452,1012,1.239,1013,1.848,1014,1.239,1015,1.452,1016,1.239,1017,3.159,1018,1.239,1019,1.452,1020,3.704,1021,1.452,1022,1.452,1023,2.084,1024,1.239,1025,1.239,1026,1.239,1027,1.239,1028,1.239,1029,1.239,1030,1.239,1031,1.452,1032,1.452,1033,1.239,1034,1.239,1035,1.452,1036,1.452,1037,1.452,1038,1.452,1039,1.452,1040,1.452,1041,1.452,1042,1.452,1043,1.452,1044,1.452,1045,1.452,1046,4.475,1047,3.159,1048,1.239,1049,1.452,1050,2.441,1051,1.452,1052,2.441,1053,2.441,1054,1.239,1055,1.452,1056,1.239,1057,1.239,1058,1.452,1059,1.239,1060,1.239,1061,1.239,1062,1.452,1063,1.239,1064,1.452,1065,1.452,1066,1.452,1067,1.452,1068,1.452,1069,3.704,1070,1.452,1071,2.804,1072,1.452,1073,1.099,1074,1.452,1075,2.441,1076,1.452,1077,1.452,1078,1.452,1079,1.452,1080,1.239,1081,1.239,1082,1.239,1083,1.239,1084,2.441,1085,2.441,1086,2.441,1087,2.084,1088,2.084,1089,2.441,1090,2.441,1091,2.441,1092,2.441,1093,4.995,1094,3.704,1095,3.704,1096,3.704,1097,3.704,1098,4.995,1099,2.441,1100,3.159,1101,3.161,1102,2.441,1103,3.159,1104,2.084,1105,2.441,1106,2.441,1107,3.704,1108,2.441,1109,2.441,1110,2.441,1111,2.441,1112,2.441,1113,2.441,1114,3.159,1115,3.159]],["title/interfaces/SmallPersonDetailModel.html",[323,0.273,498,1.788]],["body/interfaces/SmallPersonDetailModel.html",[3,0.161,4,0.161,8,0.161,22,0.209,23,0.36,30,0.022,32,0.425,33,0.81,43,0.318,84,0.014,85,0.014,97,1.655,232,3.039,268,3.226,271,1.807,282,2.075,323,0.414,325,0.894,331,1.228,471,1.592,497,1.251,498,2.71,500,2.123,501,2.721,502,2.946,503,2.946,504,1.7,827,1.961,904,2.123,905,4.191,906,4.632,907,3.555,908,3.555,909,4.632,910,3.555,911,3.555,912,4.191,913,4.632,914,4.082,915,4.632,916,3.555,917,3.555,918,3.216,919,3.383,920,3.555,921,2.561,922,3.99,923,2.561,924,2.946,925,2.946,926,2.946,1116,5.393]],["title/interfaces/TokenModel.html",[161,1.788,323,0.273]],["body/interfaces/TokenModel.html",[3,0.245,4,0.245,8,0.245,22,0.318,23,0.472,30,0.021,32,0.381,33,0.773,43,0.36,55,1.518,84,0.018,85,0.018,151,2.768,155,2.979,161,3.311,271,2.017,323,0.506,325,1.359,824,3.521,825,2.979,826,3.892,827,2.979,828,2.979,1117,6.59]],["title/interfaces/UserCreate.html",[323,0.273,1118,1.916]],["body/interfaces/UserCreate.html",[3,0.227,4,0.227,8,0.227,22,0.295,23,0.451,30,0.022,32,0.412,33,0.799,38,0.79,43,0.348,51,0.696,55,1.883,84,0.017,85,0.017,179,2.244,271,2.019,323,0.489,325,1.26,331,1.005,451,4.827,497,2.175,499,2.991,789,2.567,825,2.763,828,2.763,1118,3.166,1119,3.266,1120,3.61,1121,3.61,1122,3.61,1123,4.452,1124,3.61,1125,3.61,1126,2.396]],["title/interfaces/UserDetail.html",[179,1.674,323,0.273]],["body/interfaces/UserDetail.html",[3,0.217,4,0.217,8,0.217,22,0.281,23,0.438,30,0.022,32,0.432,33,0.795,38,0.753,43,0.341,84,0.017,85,0.017,179,2.686,232,2.892,271,1.991,323,0.479,325,1.201,331,1.38,497,2.42,499,2.851,789,3.524,825,2.634,828,2.634,922,4.274,1118,2.447,1119,3.113,1120,3.441,1121,3.441,1122,3.441,1123,5.104,1124,3.441,1125,3.441,1126,2.284,1127,6.24,1128,4.724]],["title/components/UserInfoPageComponent.html",[0,0.627,76,1.243]],["body/components/UserInfoPageComponent.html",[0,0.803,1,0.877,2,1.4,3,0.344,4,0.12,5,0.984,6,0.984,7,0.984,8,0.12,10,0.877,11,2.664,12,2.664,14,0.877,15,0.784,16,0.984,18,1.483,22,0.155,23,0.29,25,1,26,2.937,27,1.616,29,1.34,30,0.022,31,1.582,32,0.234,33,0.623,34,1.428,35,1.428,38,0.983,39,0.53,40,0.929,43,0.137,44,0.561,45,0.984,46,1.483,47,1.483,48,0.984,49,1.673,50,0.984,51,0.623,52,0.984,53,0.877,54,0.929,55,0.742,56,2.239,57,0.877,58,0.984,59,0.929,60,0.984,61,1.986,62,0.929,63,0.929,64,0.877,65,0.984,66,0.877,67,0.984,68,0.877,69,0.877,70,0.877,71,0.984,72,0.877,73,0.984,74,0.877,75,0.929,76,1.77,77,2.546,78,0.877,79,0.877,80,0.929,81,1.684,82,0.984,83,0.984,84,0.011,85,0.011,91,1.59,93,2.24,94,2.547,96,1.182,97,0.946,112,1.353,117,2.038,167,2.038,175,1.182,179,2.559,180,1.721,187,1.456,201,1.576,204,1.182,205,2.857,206,2.374,207,2.374,208,2.374,209,2.288,210,1.902,221,1.721,227,2.374,228,2.144,231,1.902,232,2.012,233,2.592,235,2.144,236,2.144,239,1.456,240,1.353,271,1.497,307,2.144,364,1.262,369,2.288,388,1.045,414,2.729,519,1.576,623,2.144,642,2.144,643,2.592,654,1.721,675,1.456,836,2.937,851,2.865,855,1.902,870,2.592,872,2.865,873,2.865,987,2.865,992,2.865,1003,2.865,1004,3.837,1006,2.865,1013,2.865,1071,3.837,1073,1.902,1126,1.262,1129,5.59,1130,5.59,1131,4.554,1132,4.326,1133,2.512,1134,2.512,1135,2.512,1136,2.512,1137,2.512,1138,2.144,1139,2.512,1140,2.512,1141,3.785,1142,2.512,1143,2.512,1144,3.785,1145,3.23,1146,3.23,1147,3.23,1148,3.23,1149,3.23]],["title/components/UserListComponent.html",[0,0.627,78,1.243]],["body/components/UserListComponent.html",[0,0.536,1,0.482,2,0.864,3,0.111,4,0.066,5,0.54,6,0.54,7,0.54,8,0.066,10,0.482,11,2.339,12,2.339,14,0.482,15,0.73,16,0.54,18,0.916,22,0.085,23,0.179,25,0.618,27,1.678,29,1.577,30,0.022,31,1.836,32,0.358,33,0.619,34,1.47,35,1.47,38,0.843,39,0.291,40,0.51,43,0.075,44,0.308,45,0.54,46,0.916,47,0.916,48,0.54,49,1.183,50,0.54,51,0.591,52,0.54,53,0.482,54,0.51,55,0.407,56,1.707,57,0.482,58,0.54,59,0.51,60,0.54,61,1.404,62,0.51,63,0.51,64,0.482,65,0.54,66,0.482,67,0.54,68,0.482,69,0.482,70,0.482,71,0.54,72,0.482,73,0.54,74,0.482,75,1.611,76,0.482,77,2.451,78,1.252,79,0.482,80,0.51,81,0.51,82,0.54,83,0.54,84,0.007,85,0.007,91,1.063,94,1.529,96,1.252,97,1.002,118,2.31,119,0.51,144,0.693,157,1.354,167,0.742,174,0.693,175,0.649,179,2.185,180,0.944,187,2.076,201,0.865,205,0.865,206,1.466,207,1.466,208,1.466,214,2.597,216,3.058,223,2.712,225,1.044,226,2.525,232,2.052,239,0.799,240,0.742,244,0.944,259,1.044,260,1.044,261,1.177,265,1.177,271,1.443,272,1.77,280,2.733,289,1.601,293,2.249,294,2.712,303,0.742,309,2.712,310,2.454,315,1.995,318,1.044,331,0.493,364,0.693,369,1.529,388,0.573,414,1.638,515,1.77,519,0.865,533,2.733,534,2.733,643,0.944,654,0.944,668,1.044,675,3.052,692,1.044,757,1.77,764,2.597,789,1.259,836,1.763,851,1.044,855,1.044,870,2.454,872,2.712,873,2.712,899,5.101,933,1.77,936,1.909,971,1.044,972,1.995,973,1.995,974,2.597,975,3.058,976,3.058,983,3.058,984,3.058,986,1.995,987,1.77,988,3.058,989,1.995,992,1.77,1000,1.177,1002,1.177,1003,1.77,1004,2.712,1006,1.77,1008,1.177,1012,1.177,1013,1.77,1014,1.177,1016,1.177,1018,1.177,1023,1.995,1024,1.177,1025,1.177,1026,1.177,1027,1.177,1028,1.177,1029,1.177,1030,1.177,1033,1.177,1034,1.177,1048,1.177,1054,1.177,1056,1.177,1057,1.177,1059,1.177,1060,1.177,1061,1.177,1063,1.177,1071,2.712,1073,1.044,1080,1.177,1081,1.177,1082,1.177,1083,1.177,1087,1.995,1088,1.995,1101,1.177,1104,1.995,1118,2.346,1126,0.693,1128,2.712,1132,3.058,1138,1.177,1145,3.058,1146,3.058,1147,1.995,1148,1.995,1149,3.058,1150,5.751,1151,2.338,1152,2.338,1153,2.338,1154,3.043,1155,3.043,1156,3.043,1157,4.627,1158,3.583,1159,3.583,1160,3.719,1161,2.338,1162,2.338,1163,1.379,1164,1.379,1165,1.379,1166,1.379,1167,1.379,1168,1.379,1169,1.379,1170,1.379,1171,1.379,1172,1.379,1173,1.379,1174,1.379,1175,1.379,1176,2.338,1177,1.379,1178,1.379,1179,1.379,1180,1.379,1181,1.379,1182,1.379,1183,2.338,1184,1.379,1185,2.338,1186,1.379,1187,1.379,1188,1.379,1189,1.379,1190,1.379,1191,1.379,1192,1.379,1193,1.379,1194,1.379,1195,1.379,1196,3.583,1197,3.043,1198,1.379,1199,1.379,1200,1.379,1201,2.338,1202,2.338,1203,1.379,1204,3.043,1205,1.379,1206,1.379,1207,1.379,1208,1.379,1209,1.379,1210,1.379,1211,1.379,1212,1.379,1213,2.338,1214,1.379,1215,2.338,1216,2.338,1217,2.338,1218,2.338,1219,2.338,1220,2.338,1221,2.338,1222,2.338,1223,2.338,1224,2.338,1225,2.338,1226,1.379,1227,2.338,1228,4.644,1229,2.338,1230,1.379,1231,1.379,1232,2.338,1233,3.043,1234,1.379,1235,1.379,1236,1.379,1237,4.357,1238,2.338,1239,2.338,1240,1.379,1241,1.379,1242,1.379,1243,1.379,1244,1.379,1245,1.379,1246,1.379,1247,1.379,1248,1.379,1249,1.379,1250,1.379,1251,1.379,1252,1.379,1253,1.379,1254,1.379,1255,1.379,1256,1.379,1257,1.379,1258,1.379,1259,2.338,1260,1.379,1261,1.379,1262,2.338,1263,1.379,1264,1.379,1265,1.379,1266,1.379,1267,2.338,1268,1.379,1269,1.379,1270,1.379,1271,2.338,1272,1.379,1273,1.379]],["title/interfaces/UserPatch.html",[323,0.273,1126,1.788]],["body/interfaces/UserPatch.html",[3,0.235,4,0.235,8,0.235,22,0.305,23,0.46,30,0.022,32,0.371,33,0.788,38,0.817,43,0.354,84,0.018,85,0.018,179,2.32,271,2.039,323,0.496,325,1.303,331,1.039,497,2.219,499,3.093,789,2.654,825,2.856,828,2.856,1118,2.654,1119,3.376,1120,3.732,1121,3.732,1122,3.732,1123,5.225,1124,3.732,1125,3.732,1126,3.016]],["title/injectables/UserService.html",[105,1.111,836,2.062]],["body/injectables/UserService.html",[3,0.144,4,0.144,8,0.144,13,1.422,22,0.187,23,0.333,25,1.146,27,1.714,29,1.731,30,0.022,31,0.944,32,0.416,33,0.759,34,1.267,35,1.385,38,1.012,39,0.637,43,0.165,44,0.675,49,0.998,51,0.715,84,0.013,85,0.013,91,1.056,96,2.075,97,1.637,105,1.354,106,1.335,114,1.751,116,1.519,118,2.108,119,2.379,140,1.519,142,2.938,143,2.386,144,3.068,146,3.282,153,3.399,169,1.699,174,1.519,177,2.73,179,1.422,180,2.07,271,0.893,293,2.241,331,1.236,351,2.72,357,1.896,364,2.947,366,1.896,369,2.947,385,1.751,388,1.803,389,1.627,390,1.896,409,1.896,410,1.896,411,1.896,412,1.896,413,1.896,471,1.422,472,1.896,533,2.72,534,2.72,543,2.288,545,2.288,548,2.288,560,2.58,561,2.58,570,2.288,574,2.288,836,2.512,942,3.701,966,2.58,967,2.58,968,2.58,969,2.58,1118,2.73,1126,1.519,1128,3.282,1157,5.211,1160,3.701,1274,2.58,1275,4.336,1276,4.336,1277,5.54,1278,4.336,1279,3.023,1280,3.023,1281,3.023,1282,3.023,1283,3.023,1284,3.023,1285,3.023,1286,3.023,1287,3.023,1288,3.023,1289,3.023,1290,3.023,1291,3.023,1292,4.336,1293,3.023,1294,3.023,1295,4.336,1296,3.023,1297,2.58,1298,3.023,1299,3.023,1300,3.023,1301,3.023,1302,3.023,1303,3.023,1304,3.023,1305,3.023,1306,3.023,1307,3.023,1308,3.023,1309,3.023,1310,3.023]],["title/components/ValidateEmailPageComponent.html",[0,0.627,79,1.243]],["body/components/ValidateEmailPageComponent.html",[0,0.91,1,1.09,2,1.64,3,0.211,4,0.149,5,1.222,6,1.222,7,1.222,8,0.149,10,1.09,11,2.754,12,2.754,14,1.09,15,0.974,16,1.222,18,1.738,22,0.193,23,0.34,25,1.172,26,3.257,27,1.484,29,0.824,30,0.022,31,0.974,32,0.193,34,1.109,35,1.109,38,0.931,39,0.658,40,1.154,43,0.17,44,0.696,45,1.222,46,1.738,47,1.738,48,1.222,49,1.856,50,1.222,51,0.484,52,1.222,53,1.09,54,1.154,55,0.921,56,2.418,57,1.09,58,1.222,59,1.154,60,1.222,61,2.202,62,1.154,63,1.154,64,1.09,65,1.222,66,1.09,67,1.222,68,1.09,69,2.217,70,1.09,71,1.222,72,1.09,73,1.222,74,1.09,75,1.154,76,1.09,77,1.64,78,1.09,79,1.963,80,1.908,81,2.196,82,1.222,83,1.222,84,0.013,85,0.013,91,1.802,93,2.483,103,1.808,112,1.679,117,2.388,118,2.146,143,2.428,161,1.567,173,2.361,175,1.468,201,1.957,204,1.468,205,3.237,208,2.782,209,2.593,210,2.229,212,4.255,215,3.785,227,2.782,229,3.357,230,2.137,234,2.663,237,2.663,238,2.782,240,1.679,242,2.361,243,2.663,246,2.663,249,2.663,250,2.663,251,2.663,252,2.361,268,1.96,271,2.118,272,3.357,273,3.785,275,3.849,283,3.785,1311,5.266,1312,5.266,1313,5.938,1314,3.12,1315,3.12,1316,3.12,1317,4.435]],["title/coverage.html",[1318,4.149]],["body/coverage.html",[0,1.226,1,1.095,3,0.212,8,0.149,9,2.675,30,0.022,32,0.194,53,1.095,55,1.314,57,1.095,59,1.159,62,1.159,64,1.095,66,1.095,68,1.095,70,1.095,72,1.095,74,1.095,76,1.095,78,1.095,79,1.095,84,0.013,85,0.013,86,2.372,87,2.372,89,2.675,93,1.385,105,1.984,141,2.675,151,1.687,155,1.816,161,1.575,169,1.228,179,1.475,202,2.675,203,2.675,204,3.056,271,1.314,287,2.675,323,0.545,324,1.575,326,3.446,330,1.385,334,1.575,336,1.575,344,1.575,347,2.372,348,2.675,414,1.687,415,2.675,471,1.475,490,1.966,491,3.368,497,1.159,498,1.575,506,1.687,511,2.791,512,2.146,514,2.675,529,2.146,530,2.675,581,2.675,582,2.675,585,2.675,587,2.675,588,2.675,590,2.146,692,5.617,794,1.966,795,3.368,797,1.966,800,2.372,801,2.675,824,3.543,829,2.675,830,2.675,836,1.816,890,2.675,891,3.798,892,2.675,894,2.675,895,2.675,897,2.372,899,2.372,904,3.246,927,2.675,936,1.966,937,2.675,970,2.675,971,4.263,1118,1.687,1119,3.543,1126,1.575,1129,2.675,1130,2.675,1150,2.675,1274,2.675,1311,2.675,1312,2.675,1318,2.675,1319,3.134,1320,3.134,1321,3.134,1322,6.607,1323,2.675,1324,3.134,1325,2.675,1326,5.948,1327,3.134,1328,3.134,1329,3.134,1330,3.134,1331,3.134,1332,3.134,1333,3.134,1334,5.174,1335,3.134,1336,4.45,1337,4.45,1338,4.45,1339,3.134,1340,3.134,1341,5.174,1342,5.174,1343,3.134,1344,4.45,1345,3.134,1346,3.134,1347,4.45,1348,3.134,1349,3.134]],["title/dependencies.html",[1350,2.248,1351,3.654]],["body/dependencies.html",[30,0.022,39,1.073,40,1.882,42,3.853,84,0.018,85,0.018,106,2.249,239,2.949,303,2.74,1297,4.344,1351,4.344,1352,7.213,1353,5.09,1354,5.09,1355,5.09,1356,6.119,1357,6.119,1358,5.09,1359,5.09,1360,5.09,1361,5.09,1362,5.09,1363,5.09,1364,5.09,1365,5.09,1366,5.09,1367,5.09,1368,5.09]],["title/miscellaneous/enumerations.html",[1369,2.034,1370,3.654]],["body/miscellaneous/enumerations.html",[22,0.338,30,0.021,35,1.742,84,0.019,85,0.019,904,3.433,919,4.007,924,4.007,925,4.007,926,4.007,1369,3.748,1370,4.671,1371,5.472]],["title/index.html",[22,0.184,1372,2.969,1373,2.969]],["body/index.html",[0,1.095,4,0.214,30,0.017,51,0.49,54,1.662,81,1.662,84,0.017,85,0.017,117,2.42,122,3.079,169,1.761,275,3.079,318,3.403,383,4.7,492,4.7,738,3.837,781,3.837,883,3.837,1350,3.403,1374,4.495,1375,5.668,1376,4.495,1377,6.208,1378,6.208,1379,3.837,1380,4.495,1381,4.495,1382,5.668,1383,6.721,1384,6.967,1385,4.495,1386,4.495,1387,4.495,1388,4.495,1389,4.495,1390,4.495,1391,4.495,1392,4.495,1393,4.495,1394,6.208,1395,4.495,1396,6.519,1397,4.495,1398,4.495,1399,4.495,1400,4.495,1401,5.668,1402,5.668,1403,6.519,1404,4.495,1405,5.668,1406,5.668,1407,4.495,1408,4.495,1409,4.495,1410,4.495,1411,5.668,1412,4.495,1413,4.495,1414,4.495,1415,4.495,1416,6.208,1417,4.495,1418,3.403,1419,4.495]],["title/modules.html",[1420,4.149]],["body/modules.html",[30,0.019,84,0.019,85,0.019,1420,4.936]],["title/overview.html",[1418,3.68]],["body/overview.html",[2,2.079,30,0.019,84,0.019,85,0.019,86,4.257,140,2.826,280,3.528,325,1.486,513,4.257,1418,4.257,1421,5.623,1422,5.623,1423,5.623,1424,5.623]],["title/properties.html",[23,0.328,1350,2.248]],["body/properties.html",[23,0.44,30,0.02,84,0.019,85,0.019,1379,4.894,1425,5.734]],["title/miscellaneous/variables.html",[1369,2.034,1426,3.654]],["body/miscellaneous/variables.html",[22,0.342,30,0.021,32,0.342,34,1.383,35,1.383,84,0.019,85,0.019,1323,4.721,1325,5.486,1369,3.789,1426,4.721,1427,5.532,1428,5.532,1429,5.532,1430,5.532]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":692,"title":{},"body":{"components/HomePageComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1425,"title":{},"body":{"properties.html":{}}}],["0.14.10",{"_index":1368,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":1242,"title":{},"body":{"components/UserListComponent.html":{}}}],["0.5",{"_index":1263,"title":{},"body":{"components/UserListComponent.html":{}}}],["0.5rem",{"_index":1259,"title":{},"body":{"components/UserListComponent.html":{}}}],["0/1",{"_index":1326,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1347,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1339,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1341,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1344,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1342,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1340,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1335,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1346,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":1343,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":1332,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1322,"title":{},"body":{"coverage.html":{}}}],["0/33",{"_index":1333,"title":{},"body":{"coverage.html":{}}}],["0/37",{"_index":1328,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1336,"title":{},"body":{"coverage.html":{}}}],["0/45",{"_index":1331,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1337,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1345,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1338,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1334,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":280,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{},"overview.html":{}}}],["1,2,3,4].filter(x=>!rowsfull.includes(x))[0",{"_index":720,"title":{},"body":{"components/HomePageComponent.html":{}}}],["1/2",{"_index":1268,"title":{},"body":{"components/UserListComponent.html":{}}}],["14",{"_index":1421,"title":{},"body":{"overview.html":{}}}],["17.3.11",{"_index":1380,"title":{},"body":{"index.html":{}}}],["18",{"_index":1424,"title":{},"body":{"overview.html":{}}}],["18.2.0",{"_index":1352,"title":{},"body":{"dependencies.html":{}}}],["18.2.12",{"_index":1354,"title":{},"body":{"dependencies.html":{}}}],["1][6",{"_index":746,"title":{},"body":{"components/HomePageComponent.html":{}}}],["1rem",{"_index":1260,"title":{},"body":{"components/UserListComponent.html":{}}}],["2",{"_index":1423,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":1366,"title":{},"body":{"dependencies.html":{}}}],["2.5.2",{"_index":1361,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":764,"title":{},"body":{"components/HomePageComponent.html":{},"components/UserListComponent.html":{}}}],["4.0.12",{"_index":1360,"title":{},"body":{"dependencies.html":{}}}],["404",{"_index":893,"title":{},"body":{"components/NotFoundPageComponent.html":{}}}],["5",{"_index":1231,"title":{},"body":{"components/UserListComponent.html":{}}}],["56",{"_index":1234,"title":{},"body":{"components/UserListComponent.html":{}}}],["6",{"_index":696,"title":{},"body":{"components/HomePageComponent.html":{}}}],["64",{"_index":1236,"title":{},"body":{"components/UserListComponent.html":{}}}],["7",{"_index":1422,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":1364,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":278,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["8.5.3",{"_index":1363,"title":{},"body":{"dependencies.html":{}}}],["8601",{"_index":503,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["95",{"_index":1262,"title":{},"body":{"components/UserListComponent.html":{}}}],["a.key.gettime",{"_index":680,"title":{},"body":{"components/HomePageComponent.html":{}}}],["acountcreation",{"_index":211,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["acountcreation=false",{"_index":245,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["activatedroute",{"_index":237,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["activatedroutesnapshot",{"_index":99,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":905,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["activecreatemodal",{"_index":975,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["activecreatemodal:boolean",{"_index":1189,"title":{},"body":{"components/UserListComponent.html":{}}}],["activecreatemodal=false",{"_index":1038,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["activeeditmodal",{"_index":976,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["activeeditmodal:boolean",{"_index":1190,"title":{},"body":{"components/UserListComponent.html":{}}}],["activeeditmodal=false",{"_index":1037,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["actual_component",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["add",{"_index":781,"title":{},"body":{"components/HomePageComponent.html":{},"index.html":{}}}],["adddishtoevent",{"_index":531,"title":{},"body":{"injectables/EventService.html":{}}}],["adddishtoevent(id",{"_index":539,"title":{},"body":{"injectables/EventService.html":{}}}],["addeventstodays",{"_index":597,"title":{},"body":{"components/HomePageComponent.html":{}}}],["addingredienttodish",{"_index":349,"title":{},"body":{"injectables/DishService.html":{}}}],["addingredienttodish(model",{"_index":359,"title":{},"body":{"injectables/DishService.html":{}}}],["addingredienttodish(model:dishaddingredientmodel",{"_index":395,"title":{},"body":{"injectables/DishService.html":{}}}],["addpersontoevent",{"_index":532,"title":{},"body":{"injectables/EventService.html":{}}}],["addpersontoevent(id",{"_index":541,"title":{},"body":{"injectables/EventService.html":{}}}],["address",{"_index":873,"title":{},"body":{"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["addrole",{"_index":1275,"title":{},"body":{"injectables/UserService.html":{}}}],["addrole(id",{"_index":1279,"title":{},"body":{"injectables/UserService.html":{}}}],["addrole(id:string,role:string",{"_index":1305,"title":{},"body":{"injectables/UserService.html":{}}}],["adjust",{"_index":113,"title":{},"body":{"guards/AuthGuard.html":{},"components/HomePageComponent.html":{}}}],["admin",{"_index":903,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["admin\",\"usermanger",{"_index":1183,"title":{},"body":{"components/UserListComponent.html":{}}}],["again",{"_index":885,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["age",{"_index":1116,"title":{},"body":{"interfaces/SmallPersonDetailModel.html":{}}}],["age?:number|null",{"_index":921,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["alert(x.error.message",{"_index":1077,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["amount",{"_index":798,"title":{},"body":{"interfaces/IngredientDishDetail.html":{}}}],["amount:number",{"_index":339,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["amout",{"_index":327,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{}}}],["amout:number",{"_index":343,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["angular",{"_index":1377,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1297,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1353,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":303,"title":{},"body":{"components/DefaultComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1355,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":239,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1356,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"dependencies.html":{}}}],["any)[field",{"_index":1071,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["any)[key",{"_index":413,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["any)[x",{"_index":1069,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["api/v1/auth",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["api/v1/dish",{"_index":378,"title":{},"body":{"injectables/DishService.html":{}}}],["api/v1/event",{"_index":555,"title":{},"body":{"injectables/EventService.html":{}}}],["api/v1/ingredient",{"_index":815,"title":{},"body":{"injectables/IngredientService.html":{}}}],["api/v1/person",{"_index":948,"title":{},"body":{"injectables/PersonService.html":{}}}],["api/v1/user",{"_index":1292,"title":{},"body":{"injectables/UserService.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1325,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1389,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apply",{"_index":1228,"title":{},"body":{"components/UserListComponent.html":{}}}],["args",{"_index":517,"title":{},"body":{"pipes/EventPipe.html":{}}}],["artifacts",{"_index":1397,"title":{},"body":{"index.html":{}}}],["async",{"_index":310,"title":{},"body":{"components/DefaultComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["async;track",{"_index":1220,"title":{},"body":{"components/UserListComponent.html":{}}}],["asyncpipe",{"_index":289,"title":{},"body":{"components/DefaultComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["authenticated",{"_index":126,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authguard",{"_index":87,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["authservice",{"_index":93,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/LoginPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["authservice:authservice",{"_index":901,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["authservice=inject(authservice",{"_index":305,"title":{},"body":{"components/DefaultComponent.html":{}}}],["automatically",{"_index":1390,"title":{},"body":{"index.html":{}}}],["available",{"_index":125,"title":{},"body":{"guards/AuthGuard.html":{}}}],["back",{"_index":888,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["baseurl",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["before",{"_index":705,"title":{},"body":{"components/HomePageComponent.html":{}}}],["behaviorsubject",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["behaviorsubject(null",{"_index":457,"title":{},"body":{"injectables/EditService.html":{}}}],["between",{"_index":1271,"title":{},"body":{"components/UserListComponent.html":{}}}],["birth",{"_index":1097,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["boolean",{"_index":232,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["border",{"_index":1229,"title":{},"body":{"components/UserListComponent.html":{}}}],["box",{"_index":1258,"title":{},"body":{"components/UserListComponent.html":{}}}],["break",{"_index":1245,"title":{},"body":{"components/UserListComponent.html":{}}}],["browser",{"_index":1357,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1396,"title":{},"body":{"index.html":{}}}],["button",{"_index":1251,"title":{},"body":{"components/UserListComponent.html":{}}}],["calendar",{"_index":591,"title":{},"body":{"components/HomePageComponent.html":{}}}],["calendar:keyvalue",{"_index":659,"title":{},"body":{"components/HomePageComponent.html":{}}}],["calendar[0",{"_index":756,"title":{},"body":{"components/HomePageComponent.html":{}}}],["calendarmonth",{"_index":416,"title":{},"body":{"injectables/EditService.html":{}}}],["calendarmonth:number=new",{"_index":473,"title":{},"body":{"injectables/EditService.html":{}}}],["calendaryear",{"_index":417,"title":{},"body":{"injectables/EditService.html":{}}}],["calendaryear:number=new",{"_index":474,"title":{},"body":{"injectables/EditService.html":{}}}],["can't",{"_index":881,"title":{},"body":{"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{}}}],["can\\'t",{"_index":889,"title":{},"body":{"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{}}}],["canactivate",{"_index":90,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":98,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capabilities",{"_index":1414,"title":{},"body":{"index.html":{}}}],["case",{"_index":132,"title":{},"body":{"guards/AuthGuard.html":{},"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{}}}],["case(2",{"_index":1099,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["case(3",{"_index":1102,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["catcherror",{"_index":108,"title":{},"body":{"guards/AuthGuard.html":{}}}],["catcherror((err",{"_index":131,"title":{},"body":{"guards/AuthGuard.html":{}}}],["change",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"index.html":{}}}],["changepassword",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/UserService.html":{}}}],["changepassword(email",{"_index":1284,"title":{},"body":{"injectables/UserService.html":{}}}],["changepassword(email:string",{"_index":1309,"title":{},"body":{"injectables/UserService.html":{}}}],["changepassword(model",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["changepassword(model:passwordresetmodel",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["changepasswordpagecomponent",{"_index":53,"title":{"components/ChangePasswordPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["changerole",{"_index":1158,"title":{},"body":{"components/UserListComponent.html":{}}}],["characters",{"_index":279,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["check",{"_index":883,"title":{},"body":{"components/LoginPageComponent.html":{},"index.html":{}}}],["checkform",{"_index":985,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["checkform(form",{"_index":997,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["checking",{"_index":879,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["checkpasswords",{"_index":216,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserListComponent.html":{}}}],["child",{"_index":924,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"miscellaneous/enumerations.html":{}}}],["choice",{"_index":1410,"title":{},"body":{"index.html":{}}}],["class",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["cli",{"_index":1378,"title":{},"body":{"index.html":{}}}],["closecreatemodal",{"_index":983,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["closedishedit",{"_index":425,"title":{},"body":{"injectables/EditService.html":{}}}],["closeeditmodal",{"_index":984,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["closeeventedit",{"_index":426,"title":{},"body":{"injectables/EditService.html":{}}}],["closepersonedit",{"_index":427,"title":{},"body":{"injectables/EditService.html":{}}}],["code",{"_index":738,"title":{},"body":{"components/HomePageComponent.html":{},"index.html":{}}}],["col",{"_index":1238,"title":{},"body":{"components/UserListComponent.html":{}}}],["combinelatest",{"_index":1032,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["command",{"_index":1411,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":288,"title":{},"body":{"components/DefaultComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{}}}],["commonmodule,routeroutlet,routerlink,asyncpipe",{"_index":304,"title":{},"body":{"components/DefaultComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"overview.html":{}}}],["components/dish",{"_index":584,"title":{},"body":{"components/FoodPageComponent.html":{}}}],["components/persons",{"_index":896,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["components/user",{"_index":898,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["confirm",{"_index":283,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["confirmed",{"_index":272,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["confirmpassword.touched",{"_index":285,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["conntact",{"_index":886,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["console.error('authguard",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.error('error",{"_index":402,"title":{},"body":{"injectables/DishService.html":{}}}],["console.error(error",{"_index":399,"title":{},"body":{"injectables/DishService.html":{}}}],["console.log(\"delll",{"_index":723,"title":{},"body":{"components/HomePageComponent.html":{}}}],["console.log(isvalid,field",{"_index":1143,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["console.log(patch",{"_index":967,"title":{},"body":{"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["console.log(this.editingperson$,this.editingpersonbase",{"_index":1065,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["console.log(this.editinguser",{"_index":1208,"title":{},"body":{"components/UserListComponent.html":{}}}],["console.log(this.lasterror",{"_index":252,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/LoginPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["console.log(this.passwordmismatch",{"_index":1214,"title":{},"body":{"components/UserListComponent.html":{}}}],["console.log(url",{"_index":1051,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["console.log(x",{"_index":562,"title":{},"body":{"injectables/EventService.html":{}}}],["const",{"_index":388,"title":{},"body":{"injectables/DishService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":91,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"components/PeoplePageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["constructor(authservice",{"_index":92,"title":{},"body":{"guards/AuthGuard.html":{},"components/PeoplePageComponent.html":{}}}],["constructor(httpclient",{"_index":357,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":385,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"components/PeoplePageComponent.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["content",{"_index":1272,"title":{},"body":{"components/UserListComponent.html":{}}}],["control.markastouched",{"_index":260,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["coverage",{"_index":1318,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":533,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["create(model",{"_index":543,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["create(model:eventcreatemodel",{"_index":572,"title":{},"body":{"injectables/EventService.html":{}}}],["create(model:personcreatemodel):observable",{"_index":964,"title":{},"body":{"injectables/PersonService.html":{}}}],["create(model:usercreate",{"_index":1300,"title":{},"body":{"injectables/UserService.html":{}}}],["createdish",{"_index":350,"title":{},"body":{"injectables/DishService.html":{}}}],["createdish(data",{"_index":361,"title":{},"body":{"injectables/DishService.html":{}}}],["createdish(data:dishcreate):observable",{"_index":405,"title":{},"body":{"injectables/DishService.html":{}}}],["createingredient",{"_index":802,"title":{},"body":{"injectables/IngredientService.html":{}}}],["createingredient(data",{"_index":807,"title":{},"body":{"injectables/IngredientService.html":{}}}],["createingredient(data:ingredientcreate",{"_index":823,"title":{},"body":{"injectables/IngredientService.html":{}}}],["creating",{"_index":1104,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["creatingperson",{"_index":977,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["creatingperson:personcreatemodel",{"_index":1039,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["creatinguser",{"_index":1151,"title":{},"body":{"components/UserListComponent.html":{}}}],["creatinguser:usercreate",{"_index":1191,"title":{},"body":{"components/UserListComponent.html":{}}}],["currentmonth",{"_index":592,"title":{},"body":{"components/HomePageComponent.html":{}}}],["currentmonth+1",{"_index":750,"title":{},"body":{"components/HomePageComponent.html":{}}}],["currentmonth=this.editservice.calendarmonth",{"_index":660,"title":{},"body":{"components/HomePageComponent.html":{}}}],["currentweek",{"_index":702,"title":{},"body":{"components/HomePageComponent.html":{}}}],["currentweek.push({key:new",{"_index":708,"title":{},"body":{"components/HomePageComponent.html":{}}}],["currentyear",{"_index":593,"title":{},"body":{"components/HomePageComponent.html":{}}}],["currentyear=this.editservice.calendaryear",{"_index":661,"title":{},"body":{"components/HomePageComponent.html":{}}}],["cursor",{"_index":1256,"title":{},"body":{"components/UserListComponent.html":{}}}],["d",{"_index":667,"title":{},"body":{"components/HomePageComponent.html":{}}}],["data",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["data).pipe",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["date",{"_index":504,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"components/HomePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["date().getdate(),1",{"_index":647,"title":{},"body":{"components/HomePageComponent.html":{}}}],["date().getfullyear",{"_index":455,"title":{},"body":{"injectables/EditService.html":{},"injectables/PersonService.html":{}}}],["date().getmonth",{"_index":453,"title":{},"body":{"injectables/EditService.html":{}}}],["date(date.getfullyear(),date.getmonth(),date.getdate(),1",{"_index":525,"title":{},"body":{"pipes/EventPipe.html":{}}}],["date(event.end",{"_index":527,"title":{},"body":{"pipes/EventPipe.html":{}}}],["date(event.start",{"_index":524,"title":{},"body":{"pipes/EventPipe.html":{}}}],["date(this.currentyear",{"_index":645,"title":{},"body":{"components/HomePageComponent.html":{}}}],["date(y.dateofbirth).getfullyear",{"_index":961,"title":{},"body":{"injectables/PersonService.html":{}}}],["date(y.dateofbirth).toisostring().split('t')[0",{"_index":963,"title":{},"body":{"injectables/PersonService.html":{}}}],["date(y.end).toisostring().split('t')[0",{"_index":567,"title":{},"body":{"injectables/EventService.html":{}}}],["date(y.start).toisostring().split('t')[0",{"_index":565,"title":{},"body":{"injectables/EventService.html":{}}}],["date(year",{"_index":690,"title":{},"body":{"components/HomePageComponent.html":{}}}],["date:\"d",{"_index":762,"title":{},"body":{"components/HomePageComponent.html":{}}}],["date:\"e",{"_index":759,"title":{},"body":{"components/HomePageComponent.html":{}}}],["date:\"fulldate",{"_index":778,"title":{},"body":{"components/HomePageComponent.html":{}}}],["dateofbirth",{"_index":906,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["dateofbirth.touched",{"_index":1113,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["datepipe",{"_index":589,"title":{},"body":{"components/HomePageComponent.html":{}}}],["datepipe,personpipe,eventpipe",{"_index":655,"title":{},"body":{"components/HomePageComponent.html":{}}}],["day",{"_index":630,"title":{},"body":{"components/HomePageComponent.html":{}}}],["day.key",{"_index":761,"title":{},"body":{"components/HomePageComponent.html":{}}}],["day.value!.length",{"_index":765,"title":{},"body":{"components/HomePageComponent.html":{}}}],["day.value?.slice(0,3",{"_index":767,"title":{},"body":{"components/HomePageComponent.html":{}}}],["daybefore",{"_index":742,"title":{},"body":{"components/HomePageComponent.html":{}}}],["daybefore.value!.includes(event",{"_index":747,"title":{},"body":{"components/HomePageComponent.html":{}}}],["daybefore.value!.slice(0,3).includes(event",{"_index":748,"title":{},"body":{"components/HomePageComponent.html":{}}}],["daybefore:any",{"_index":740,"title":{},"body":{"components/HomePageComponent.html":{}}}],["daybeforebreak",{"_index":598,"title":{},"body":{"components/HomePageComponent.html":{}}}],["daybeforebreak(week",{"_index":610,"title":{},"body":{"components/HomePageComponent.html":{}}}],["days",{"_index":704,"title":{},"body":{"components/HomePageComponent.html":{}}}],["daysinmonth",{"_index":699,"title":{},"body":{"components/HomePageComponent.html":{}}}],["default",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"miscellaneous/variables.html":{}}}],["default'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["default.component.html",{"_index":290,"title":{},"body":{"components/DefaultComponent.html":{}}}],["default.component.scss",{"_index":291,"title":{},"body":{"components/DefaultComponent.html":{}}}],["defaultcomponent",{"_index":57,"title":{"components/DefaultComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["defined",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["delete",{"_index":534,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["delete(id",{"_index":545,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["delete(id:string",{"_index":570,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["deleted",{"_index":922,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/UserDetail.html":{}}}],["deleted:boolean",{"_index":1120,"title":{},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["dependencies",{"_index":1351,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":332,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientDishDetail.html":{}}}],["description:string",{"_index":335,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["detail",{"_index":752,"title":{},"body":{"components/HomePageComponent.html":{}}}],["dev",{"_index":1386,"title":{},"body":{"index.html":{}}}],["development",{"_index":1381,"title":{},"body":{"index.html":{}}}],["directive",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["directives",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1395,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1400,"title":{},"body":{"index.html":{}}}],["dish",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["dish.interface",{"_index":496,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{}}}],["dishaddingredientmodel",{"_index":324,"title":{"interfaces/DishAddIngredientModel.html":{}},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"interfaces/IngredientDishDetail.html":{},"coverage.html":{}}}],["dishcreate",{"_index":334,"title":{"interfaces/DishCreate.html":{}},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"interfaces/IngredientDishDetail.html":{},"coverage.html":{}}}],["dishdetail",{"_index":330,"title":{"interfaces/DishDetail.html":{}},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/IngredientDishDetail.html":{},"coverage.html":{}}}],["dishes",{"_index":319,"title":{},"body":{"components/DefaultComponent.html":{},"injectables/DishService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{}}}],["dishid",{"_index":328,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishIngredientModel.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{}}}],["dishid:string",{"_index":342,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["dishingredientmodel",{"_index":344,"title":{"interfaces/DishIngredientModel.html":{}},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"interfaces/IngredientDishDetail.html":{},"coverage.html":{}}}],["dishlistcomponent",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["dishservice",{"_index":347,"title":{"injectables/DishService.html":{}},"body":{"injectables/DishService.html":{},"coverage.html":{}}}],["dist",{"_index":1399,"title":{},"body":{"index.html":{}}}],["dn",{"_index":1087,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["documentation",{"_index":1319,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["dropdownvisible",{"_index":292,"title":{},"body":{"components/DefaultComponent.html":{}}}],["dt",{"_index":638,"title":{},"body":{"components/HomePageComponent.html":{}}}],["dynamic",{"_index":1358,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":134,"title":{},"body":{"guards/AuthGuard.html":{}}}],["e2e",{"_index":1408,"title":{},"body":{"index.html":{}}}],["ease",{"_index":1243,"title":{},"body":{"components/UserListComponent.html":{}}}],["editdishid",{"_index":418,"title":{},"body":{"injectables/EditService.html":{}}}],["editeventid",{"_index":419,"title":{},"body":{"injectables/EditService.html":{}}}],["editing",{"_index":1088,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["editing_inputs",{"_index":1267,"title":{},"body":{"components/UserListComponent.html":{}}}],["editingperson",{"_index":978,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["editingperson$:persondetailmodel",{"_index":1040,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["editingpersonbase",{"_index":979,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["editingpersonbase:persondetailmodel",{"_index":1041,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["editingpersonpage",{"_index":980,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["editinguser",{"_index":1152,"title":{},"body":{"components/UserListComponent.html":{}}}],["editinguser:userdetail",{"_index":1192,"title":{},"body":{"components/UserListComponent.html":{}}}],["editinguserbase",{"_index":1153,"title":{},"body":{"components/UserListComponent.html":{}}}],["editinguserbase:userdetail",{"_index":1193,"title":{},"body":{"components/UserListComponent.html":{}}}],["editpersonid",{"_index":420,"title":{},"body":{"injectables/EditService.html":{}}}],["editservice",{"_index":414,"title":{"injectables/EditService.html":{}},"body":{"injectables/EditService.html":{},"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["editservice=inject(editservice",{"_index":1034,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["element",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["email",{"_index":271,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["email.touched",{"_index":1223,"title":{},"body":{"components/UserListComponent.html":{}}}],["email:string",{"_index":825,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["emailconfirmed",{"_index":1127,"title":{},"body":{"interfaces/UserDetail.html":{}}}],["emailconfirmed:boolean",{"_index":1121,"title":{},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["emailoffather",{"_index":907,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["emailofmother",{"_index":908,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["emitted",{"_index":123,"title":{},"body":{"guards/AuthGuard.html":{}}}],["end",{"_index":492,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"components/PersonsListComponent.html":{},"index.html":{}}}],["enddate",{"_index":526,"title":{},"body":{"pipes/EventPipe.html":{}}}],["ends",{"_index":787,"title":{},"body":{"components/HomePageComponent.html":{}}}],["enum",{"_index":923,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["enumerations",{"_index":1370,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{}}}],["error",{"_index":133,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DishService.html":{},"components/LoginPageComponent.html":{}}}],["error.error",{"_index":860,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["error:(err",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{}}}],["error:(error",{"_index":250,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["error:x",{"_index":1076,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["event",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"pipes/EventPipe.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["event.id",{"_index":768,"title":{},"body":{"components/HomePageComponent.html":{}}}],["event.name",{"_index":528,"title":{},"body":{"pipes/EventPipe.html":{},"components/HomePageComponent.html":{}}}],["eventcolor",{"_index":773,"title":{},"body":{"components/HomePageComponent.html":{}}}],["eventcreatemodel",{"_index":490,"title":{"interfaces/EventCreateModel.html":{}},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"injectables/EventService.html":{},"coverage.html":{}}}],["eventdetailmodel",{"_index":506,"title":{"interfaces/EventDetailModel.html":{}},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"coverage.html":{}}}],["eventend",{"_index":771,"title":{},"body":{"components/HomePageComponent.html":{}}}],["eventid",{"_index":446,"title":{},"body":{"injectables/EditService.html":{},"components/HomePageComponent.html":{}}}],["eventlistcomponent",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["eventondate",{"_index":599,"title":{},"body":{"components/HomePageComponent.html":{}}}],["eventondate(date",{"_index":614,"title":{},"body":{"components/HomePageComponent.html":{}}}],["eventpipe",{"_index":512,"title":{"pipes/EventPipe.html":{}},"body":{"pipes/EventPipe.html":{},"components/HomePageComponent.html":{},"coverage.html":{}}}],["events",{"_index":320,"title":{},"body":{"components/DefaultComponent.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{}}}],["events.filter(x=>x.rowingrid",{"_index":727,"title":{},"body":{"components/HomePageComponent.html":{}}}],["events.foreach(x",{"_index":714,"title":{},"body":{"components/HomePageComponent.html":{}}}],["events:eventdetailmodel",{"_index":656,"title":{},"body":{"components/HomePageComponent.html":{}}}],["events].map(x",{"_index":718,"title":{},"body":{"components/HomePageComponent.html":{}}}],["eventservice",{"_index":529,"title":{"injectables/EventService.html":{}},"body":{"injectables/EventService.html":{},"components/HomePageComponent.html":{},"coverage.html":{}}}],["eventstart",{"_index":769,"title":{},"body":{"components/HomePageComponent.html":{}}}],["event|event:\"enddate",{"_index":772,"title":{},"body":{"components/HomePageComponent.html":{}}}],["event|event:\"startdate",{"_index":770,"title":{},"body":{"components/HomePageComponent.html":{}}}],["execute",{"_index":1405,"title":{},"body":{"index.html":{}}}],["export",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["extends",{"_index":827,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{}}}],["false",{"_index":226,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/EditService.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["father's",{"_index":1103,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["father\\'s",{"_index":1115,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["fathers",{"_index":1091,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["fb",{"_index":831,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["female",{"_index":1096,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["field",{"_index":1006,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["files",{"_index":1392,"title":{},"body":{"index.html":{}}}],["fill",{"_index":703,"title":{},"body":{"components/HomePageComponent.html":{}}}],["filterevents",{"_index":600,"title":{},"body":{"components/HomePageComponent.html":{}}}],["filterevents(events",{"_index":616,"title":{},"body":{"components/HomePageComponent.html":{}}}],["filterevents(events:(eventdetailmodel",{"_index":726,"title":{},"body":{"components/HomePageComponent.html":{}}}],["find",{"_index":882,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["first",{"_index":122,"title":{},"body":{"guards/AuthGuard.html":{},"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"index.html":{}}}],["firstdayofmonth",{"_index":689,"title":{},"body":{"components/HomePageComponent.html":{}}}],["firstdayofmonth.getday",{"_index":694,"title":{},"body":{"components/HomePageComponent.html":{}}}],["firstempty",{"_index":719,"title":{},"body":{"components/HomePageComponent.html":{}}}],["firstname",{"_index":909,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["firstname.touched",{"_index":1106,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["flex",{"_index":1237,"title":{},"body":{"components/UserListComponent.html":{}}}],["flowbite",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"dependencies.html":{}}}],["food",{"_index":583,"title":{},"body":{"components/FoodPageComponent.html":{}}}],["foodpagecomponent",{"_index":64,"title":{"components/FoodPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["for(day",{"_index":760,"title":{},"body":{"components/HomePageComponent.html":{}}}],["for(event",{"_index":766,"title":{},"body":{"components/HomePageComponent.html":{}}}],["for(person",{"_index":1219,"title":{},"body":{"components/UserListComponent.html":{}}}],["for(role",{"_index":1224,"title":{},"body":{"components/UserListComponent.html":{}}}],["for(week",{"_index":755,"title":{},"body":{"components/HomePageComponent.html":{}}}],["form",{"_index":225,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["form.invalid",{"_index":1060,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["form.invalid||this.passwordmismatch",{"_index":258,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["format",{"_index":501,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["formbuilder",{"_index":853,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["formcontrol",{"_index":846,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["formsmodule",{"_index":207,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["found",{"_index":891,"title":{},"body":{"components/NotFoundPageComponent.html":{},"coverage.html":{}}}],["found'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["full",{"_index":1101,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["fullname",{"_index":932,"title":{},"body":{"pipes/PersonPipe.html":{}}}],["fullnameoffather",{"_index":910,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["fullnameofmother",{"_index":911,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["further",{"_index":1415,"title":{},"body":{"index.html":{}}}],["gender",{"_index":912,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["gender.touched",{"_index":1111,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["gender:true,status:'other",{"_index":1017,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["generate",{"_index":383,"title":{},"body":{"injectables/DishService.html":{},"components/HomePageComponent.html":{},"index.html":{}}}],["generatecalendar",{"_index":601,"title":{},"body":{"components/HomePageComponent.html":{}}}],["generated",{"_index":1376,"title":{},"body":{"index.html":{}}}],["generatepatch",{"_index":351,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["generatepatch(model",{"_index":942,"title":{},"body":{"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["generatepatch(updated",{"_index":363,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{}}}],["get(`${this.baseurl",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcalendargrid",{"_index":602,"title":{},"body":{"components/HomePageComponent.html":{}}}],["getcalendargrid(year",{"_index":618,"title":{},"body":{"components/HomePageComponent.html":{}}}],["getting",{"_index":1372,"title":{"index.html":{}},"body":{}}],["go",{"_index":275,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ValidateEmailPageComponent.html":{},"index.html":{}}}],["guard",{"_index":86,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":88,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h",{"_index":1235,"title":{},"body":{"components/UserListComponent.html":{}}}],["hash",{"_index":737,"title":{},"body":{"components/HomePageComponent.html":{}}}],["help",{"_index":1416,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":1250,"title":{},"body":{"components/UserListComponent.html":{}}}],["home",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["homepagecomponent",{"_index":66,"title":{"components/HomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["html",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["http://localhost:4200",{"_index":1388,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["httpparams",{"_index":384,"title":{},"body":{"injectables/DishService.html":{}}}],["i,1),value:undefined",{"_index":709,"title":{},"body":{"components/HomePageComponent.html":{}}}],["id",{"_index":331,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{}}}],["id:string",{"_index":337,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["identifier",{"_index":1320,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":1149,"title":{},"body":{"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["if(!editinguser.emailconfirmed",{"_index":1221,"title":{},"body":{"components/UserListComponent.html":{}}}],["if(!resetingpassword",{"_index":865,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["if((this.editingpersonbase",{"_index":1068,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(acountcreation",{"_index":270,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["if(authservice.userinfomodel$|async",{"_index":866,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["if(d!=undefined",{"_index":671,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(dateofbirth.invalid",{"_index":1112,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(day.value!.length",{"_index":763,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(daybeforebreak(week,week.indexof(day),event",{"_index":775,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(editinguser.deleted",{"_index":1227,"title":{},"body":{"components/UserListComponent.html":{}}}],["if(email.invalid",{"_index":1222,"title":{},"body":{"components/UserListComponent.html":{}}}],["if(firstempty==undefined",{"_index":721,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(firstname.invalid",{"_index":1105,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(gender.invalid",{"_index":1110,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(index",{"_index":741,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(lasterror$?.errors.password",{"_index":874,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["if(lasterror$?.errors[\"email",{"_index":869,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["if(lastname.invalid",{"_index":1108,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(params.get(\"email\")&&params.get(\"token",{"_index":247,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["if(password.invalid",{"_index":276,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["if(passwordmismatch",{"_index":284,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["if(search",{"_index":1084,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(searchusers",{"_index":1215,"title":{},"body":{"components/UserListComponent.html":{}}}],["if(sentreset",{"_index":876,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["if(this.calendar.indexof(week",{"_index":744,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(this.editinguser.role",{"_index":1209,"title":{},"body":{"components/UserListComponent.html":{}}}],["if(this.editservice.openpersoncreate",{"_index":1043,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(url",{"_index":1052,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(user",{"_index":312,"title":{},"body":{"components/DefaultComponent.html":{}}}],["if(user?.role",{"_index":902,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["if(usermail.invalid",{"_index":1147,"title":{},"body":{"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["if(username.invalid",{"_index":1145,"title":{},"body":{"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["if(viewday",{"_index":776,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(viewday.value?.length",{"_index":780,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(viewday||vieweventdetail",{"_index":751,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(vieweventdetail",{"_index":754,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(x!=\"id",{"_index":1067,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["if(x.rowingrid",{"_index":715,"title":{},"body":{"components/HomePageComponent.html":{}}}],["if(y.dateofbirth==undefined",{"_index":959,"title":{},"body":{"injectables/PersonService.html":{}}}],["implements",{"_index":117,"title":{},"body":{"guards/AuthGuard.html":{},"components/ChangePasswordPageComponent.html":{},"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{},"index.html":{}}}],["import",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["imports:[asyncpipe,reactiveformsmodule,formsmodule",{"_index":1187,"title":{},"body":{"components/UserListComponent.html":{}}}],["imports:[formsmodule,reactiveformsmodule",{"_index":1135,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["imports:[reactiveformsmodule,formsmodule",{"_index":241,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["imports:[routerlink",{"_index":1316,"title":{},"body":{"components/ValidateEmailPageComponent.html":{}}}],["inbox",{"_index":880,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["index:number,event:eventdetailmodel):boolean",{"_index":739,"title":{},"body":{"components/HomePageComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["information",{"_index":1144,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["ingredient",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["ingredientcreate",{"_index":794,"title":{"interfaces/IngredientCreate.html":{}},"body":{"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"injectables/IngredientService.html":{},"coverage.html":{}}}],["ingredientdetail",{"_index":797,"title":{"interfaces/IngredientDetail.html":{}},"body":{"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"injectables/IngredientService.html":{},"coverage.html":{}}}],["ingredientdishdetail",{"_index":336,"title":{"interfaces/IngredientDishDetail.html":{}},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"interfaces/IngredientDishDetail.html":{},"coverage.html":{}}}],["ingredientid",{"_index":329,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["ingredientid:string",{"_index":338,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["ingredients",{"_index":345,"title":{},"body":{"interfaces/DishDetail.html":{},"injectables/IngredientService.html":{}}}],["ingredients:ingredientdishdetail[]|undefined",{"_index":333,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["ingredientservice",{"_index":800,"title":{"injectables/IngredientService.html":{}},"body":{"injectables/IngredientService.html":{},"coverage.html":{}}}],["initflowbite",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["inject",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["inject(activatedroute",{"_index":234,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["inject(authservice",{"_index":227,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["inject(editservice",{"_index":643,"title":{},"body":{"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["inject(eventservice",{"_index":644,"title":{},"body":{"components/HomePageComponent.html":{}}}],["inject(formbuilder",{"_index":843,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["inject(httpclient",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject(personservice",{"_index":1025,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["inject(router",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["inject(userservice",{"_index":851,"title":{},"body":{"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["injectable",{"_index":105,"title":{"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":635,"title":{},"body":{"components/HomePageComponent.html":{}}}],["inputs",{"_index":1266,"title":{},"body":{"components/UserListComponent.html":{}}}],["inputs>input,.inputs>select",{"_index":1265,"title":{},"body":{"components/UserListComponent.html":{}}}],["instruktor",{"_index":925,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"miscellaneous/enumerations.html":{}}}],["interface",{"_index":323,"title":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{},"coverage.html":{}}}],["interfaces",{"_index":325,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{},"overview.html":{}}}],["invalid",{"_index":1093,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["iso",{"_index":502,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["isstandalone",{"_index":1031,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["issue",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{}}}],["isvalid",{"_index":1004,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["json.parse(json.stringify(this.editingperson",{"_index":1020,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["json.parse(json.stringify(this.editinguser",{"_index":1197,"title":{},"body":{"components/UserListComponent.html":{}}}],["justify",{"_index":1270,"title":{},"body":{"components/UserListComponent.html":{}}}],["karma",{"_index":1407,"title":{},"body":{"index.html":{}}}],["key",{"_index":412,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["keyvalue",{"_index":611,"title":{},"body":{"components/HomePageComponent.html":{}}}],["last",{"_index":1094,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["lastdayofmonth",{"_index":691,"title":{},"body":{"components/HomePageComponent.html":{}}}],["lastdayofmonth.getdate",{"_index":700,"title":{},"body":{"components/HomePageComponent.html":{}}}],["lasterror",{"_index":212,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/LoginPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["lasterror$.errors[\"errormessage\"][0",{"_index":269,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["lasterror$:any",{"_index":242,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/LoginPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["lasterror$?.errors[\"error",{"_index":868,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["lasterror$[\"errormessage\"].errors[0][\"errormessage",{"_index":1317,"title":{},"body":{"components/ValidateEmailPageComponent.html":{}}}],["lastname",{"_index":913,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["lastname.touched",{"_index":1109,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["leader",{"_index":926,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"miscellaneous/enumerations.html":{}}}],["legend",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["letter",{"_index":281,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["lg",{"_index":1240,"title":{},"body":{"components/UserListComponent.html":{}}}],["list",{"_index":972,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["list.component",{"_index":586,"title":{},"body":{"components/FoodPageComponent.html":{},"components/PeoplePageComponent.html":{}}}],["list.component.html",{"_index":973,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.scss",{"_index":974,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts",{"_index":971,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["list.component.ts:106",{"_index":1165,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:116",{"_index":1014,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:126",{"_index":1166,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:127",{"_index":1005,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:132",{"_index":1175,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:133",{"_index":1011,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:143",{"_index":1169,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:149",{"_index":1168,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:150",{"_index":996,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:153",{"_index":1167,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:162",{"_index":1001,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:19",{"_index":1186,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:20",{"_index":1182,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:21",{"_index":1180,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:22",{"_index":1184,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:24",{"_index":1026,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:25",{"_index":1022,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:26",{"_index":1027,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:27",{"_index":1024,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:29",{"_index":1028,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:30",{"_index":1029,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:31",{"_index":1181,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:32",{"_index":1021,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:33",{"_index":1178,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:34",{"_index":1016,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:35",{"_index":1015,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:36",{"_index":1179,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:37",{"_index":1018,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list.component.ts:38",{"_index":1162,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:39",{"_index":1019,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:40",{"_index":993,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:43",{"_index":1172,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:45",{"_index":999,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:47",{"_index":1173,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:51",{"_index":995,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:52",{"_index":1174,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:56",{"_index":1170,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:61",{"_index":1163,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:62",{"_index":1009,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:67",{"_index":1171,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:69",{"_index":994,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:75",{"_index":998,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:77",{"_index":1164,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:83",{"_index":1177,"title":{},"body":{"components/UserListComponent.html":{}}}],["list.component.ts:86",{"_index":1007,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:91",{"_index":1010,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["list.component.ts:95",{"_index":1012,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["list/dish",{"_index":585,"title":{},"body":{"components/FoodPageComponent.html":{},"coverage.html":{}}}],["list/event",{"_index":1330,"title":{},"body":{"coverage.html":{}}}],["list/persons",{"_index":897,"title":{},"body":{"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"coverage.html":{}}}],["list/user",{"_index":899,"title":{},"body":{"components/PeoplePageComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["logged",{"_index":867,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["login",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["login(data",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginform",{"_index":832,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["loginmodel",{"_index":155,"title":{"interfaces/LoginModel.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/TokenModel.html":{},"coverage.html":{}}}],["loginpagecomponent",{"_index":68,"title":{"components/LoginPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["logout",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"components/DefaultComponent.html":{}}}],["male",{"_index":1095,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["map",{"_index":107,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["mapedevents",{"_index":717,"title":{},"body":{"components/HomePageComponent.html":{}}}],["mapedevents.sort(x=>x.rowingrid",{"_index":725,"title":{},"body":{"components/HomePageComponent.html":{}}}],["match",{"_index":286,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["matching",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["md",{"_index":1254,"title":{},"body":{"components/UserListComponent.html":{}}}],["meaning",{"_index":128,"title":{},"body":{"guards/AuthGuard.html":{}}}],["menu",{"_index":314,"title":{},"body":{"components/DefaultComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"pipes/EventPipe.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["methods",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["miscellaneous",{"_index":1369,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["models/auth.interface",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["models/dish.interface",{"_index":382,"title":{},"body":{"injectables/DishService.html":{}}}],["models/event.interface",{"_index":521,"title":{},"body":{"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{}}}],["models/ingredient.interface",{"_index":819,"title":{},"body":{"injectables/IngredientService.html":{}}}],["models/person.interface",{"_index":472,"title":{},"body":{"injectables/EditService.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"injectables/UserService.html":{}}}],["models/user.interface",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["modules",{"_index":1420,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monday",{"_index":698,"title":{},"body":{"components/HomePageComponent.html":{}}}],["month",{"_index":619,"title":{},"body":{"components/HomePageComponent.html":{}}}],["more",{"_index":1417,"title":{},"body":{"index.html":{}}}],["mother's",{"_index":1100,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["mother\\'s",{"_index":1114,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["mothers",{"_index":1090,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["mx",{"_index":1269,"title":{},"body":{"components/UserListComponent.html":{}}}],["name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/UserCreate.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"index.html":{}}}],["name:string",{"_index":1124,"title":{},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["navigate",{"_index":1387,"title":{},"body":{"index.html":{}}}],["need",{"_index":1412,"title":{},"body":{"index.html":{}}}],["needed",{"_index":115,"title":{},"body":{"guards/AuthGuard.html":{}}}],["needs",{"_index":871,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["network",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{}}}],["new",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":103,"title":{},"body":{"guards/AuthGuard.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["next:(x",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["next:x",{"_index":1079,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["nextmonth",{"_index":603,"title":{},"body":{"components/HomePageComponent.html":{}}}],["ng",{"_index":1384,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":223,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["ngoninit",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["nickname",{"_index":914,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["nickname:string",{"_index":920,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["none",{"_index":1218,"title":{},"body":{"components/UserListComponent.html":{}}}],["nonnullable",{"_index":847,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["normalizestring",{"_index":986,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["normalizestring(ob",{"_index":1000,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["normalizestring(ob:string",{"_index":1081,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["normalizestring(person.firstname).indexof(normalizestring(search",{"_index":1085,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["normalizestring(user.username).indexof(normalizestring(searchusers",{"_index":1216,"title":{},"body":{"components/UserListComponent.html":{}}}],["notfoundpagecomponent",{"_index":70,"title":{"components/NotFoundPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["null",{"_index":268,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{},"components/ValidateEmailPageComponent.html":{}}}],["number",{"_index":282,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"injectables/EditService.html":{},"interfaces/EventDetailModel.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["ob",{"_index":1002,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["ob.normalize().touppercase().replaceall",{"_index":1082,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["object.keys(model).foreach((key",{"_index":969,"title":{},"body":{"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["object.keys(this.editingpersonbase).foreach",{"_index":1066,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["object.keys(updated).foreach((key",{"_index":408,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{}}}],["object.values(form.controls).foreach(control",{"_index":259,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["observable",{"_index":104,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{}}}],["of(false",{"_index":130,"title":{},"body":{"guards/AuthGuard.html":{}}}],["of(true",{"_index":127,"title":{},"body":{"guards/AuthGuard.html":{}}}],["onblur",{"_index":987,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["onblur(field",{"_index":1003,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["oninit",{"_index":205,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["onsubmit",{"_index":837,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["op",{"_index":410,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["open",{"_index":313,"title":{},"body":{"components/DefaultComponent.html":{}}}],["opencreatemodal",{"_index":988,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["opendishcreate",{"_index":421,"title":{},"body":{"injectables/EditService.html":{}}}],["opendishcreatemodal",{"_index":428,"title":{},"body":{"injectables/EditService.html":{}}}],["opendishcreatemodal(url",{"_index":438,"title":{},"body":{"injectables/EditService.html":{}}}],["opendishcreatemodal(url:string",{"_index":486,"title":{},"body":{"injectables/EditService.html":{}}}],["opendisheditmodal",{"_index":429,"title":{},"body":{"injectables/EditService.html":{}}}],["opendisheditmodal(dishid",{"_index":440,"title":{},"body":{"injectables/EditService.html":{}}}],["openeditmodal",{"_index":989,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["openeditmodal(id",{"_index":1008,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["openeditmodal(id:string",{"_index":1054,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["openeventcreate",{"_index":422,"title":{},"body":{"injectables/EditService.html":{},"components/HomePageComponent.html":{}}}],["openeventcreatemodal",{"_index":430,"title":{},"body":{"injectables/EditService.html":{}}}],["openeventcreatemodal(url",{"_index":442,"title":{},"body":{"injectables/EditService.html":{}}}],["openeventcreatemodal(url:string",{"_index":488,"title":{},"body":{"injectables/EditService.html":{}}}],["openeventedit",{"_index":604,"title":{},"body":{"components/HomePageComponent.html":{}}}],["openeventedit(id",{"_index":625,"title":{},"body":{"components/HomePageComponent.html":{}}}],["openeventedit(id:string",{"_index":735,"title":{},"body":{"components/HomePageComponent.html":{}}}],["openeventeditmodal",{"_index":431,"title":{},"body":{"injectables/EditService.html":{}}}],["openeventeditmodal(eventid",{"_index":444,"title":{},"body":{"injectables/EditService.html":{}}}],["openpersoncreate",{"_index":423,"title":{},"body":{"injectables/EditService.html":{}}}],["openpersoncreatemodal",{"_index":432,"title":{},"body":{"injectables/EditService.html":{}}}],["openpersoncreatemodal(url",{"_index":447,"title":{},"body":{"injectables/EditService.html":{}}}],["openpersoncreatemodal(url:string",{"_index":484,"title":{},"body":{"injectables/EditService.html":{}}}],["openpersonedit",{"_index":1132,"title":{},"body":{"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["openpersoneditmodal",{"_index":433,"title":{},"body":{"injectables/EditService.html":{}}}],["openpersoneditmodal(personid",{"_index":449,"title":{},"body":{"injectables/EditService.html":{}}}],["optional",{"_index":97,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["out",{"_index":318,"title":{},"body":{"components/DefaultComponent.html":{},"components/UserListComponent.html":{},"index.html":{}}}],["overflow",{"_index":1249,"title":{},"body":{"components/UserListComponent.html":{}}}],["overview",{"_index":1418,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":1230,"title":{},"body":{"components/UserListComponent.html":{}}}],["package",{"_index":1350,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["page.component.html",{"_index":210,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["page.component.scss",{"_index":209,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["page.component.ts",{"_index":204,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:114",{"_index":622,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:125",{"_index":627,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:136",{"_index":637,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:14",{"_index":1315,"title":{},"body":{"components/ValidateEmailPageComponent.html":{}}}],["page.component.ts:141",{"_index":615,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:15",{"_index":1314,"title":{},"body":{"components/ValidateEmailPageComponent.html":{}}}],["page.component.ts:16",{"_index":229,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["page.component.ts:17",{"_index":228,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:172",{"_index":617,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:176",{"_index":629,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:18",{"_index":235,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:181",{"_index":632,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:186",{"_index":624,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:19",{"_index":236,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:191",{"_index":626,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:196",{"_index":634,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:20",{"_index":1134,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["page.component.ts:209",{"_index":612,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:21",{"_index":230,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["page.component.ts:22",{"_index":231,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:23",{"_index":233,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:24",{"_index":852,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:25",{"_index":218,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{}}}],["page.component.ts:26",{"_index":650,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{}}}],["page.component.ts:27",{"_index":649,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:28",{"_index":844,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:29",{"_index":221,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:31",{"_index":640,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{}}}],["page.component.ts:32",{"_index":642,"title":{},"body":{"components/HomePageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:33",{"_index":848,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:34",{"_index":648,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:37",{"_index":623,"title":{},"body":{"components/HomePageComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["page.component.ts:38",{"_index":850,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:42",{"_index":840,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:48",{"_index":1133,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["page.component.ts:50",{"_index":224,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{}}}],["page.component.ts:56",{"_index":842,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:60",{"_index":841,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:62",{"_index":219,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{}}}],["page.component.ts:74",{"_index":620,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:75",{"_index":220,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["page/change",{"_index":203,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"coverage.html":{}}}],["page/food",{"_index":582,"title":{},"body":{"components/FoodPageComponent.html":{},"coverage.html":{}}}],["page/home",{"_index":588,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["page/login",{"_index":830,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["page/not",{"_index":892,"title":{},"body":{"components/NotFoundPageComponent.html":{},"coverage.html":{}}}],["page/people",{"_index":895,"title":{},"body":{"components/PeoplePageComponent.html":{},"coverage.html":{}}}],["page/user",{"_index":1130,"title":{},"body":{"components/UserInfoPageComponent.html":{},"coverage.html":{}}}],["page/validate",{"_index":1312,"title":{},"body":{"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["parameters",{"_index":96,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["params.get(\"email",{"_index":256,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["params.get(\"passwordtoken",{"_index":254,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["partial",{"_index":364,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["participants",{"_index":508,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"components/HomePageComponent.html":{}}}],["password",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["password.touched",{"_index":277,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["password2",{"_index":1154,"title":{},"body":{"components/UserListComponent.html":{}}}],["password:string",{"_index":828,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["passwordcheck",{"_index":213,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["passwordmismatch",{"_index":214,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserListComponent.html":{}}}],["passwordresetmodel",{"_index":151,"title":{"interfaces/PasswordResetModel.html":{}},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/TokenModel.html":{},"coverage.html":{}}}],["patch",{"_index":369,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["patch(id",{"_index":548,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["patch(id:string,model:partial",{"_index":574,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["patch.push",{"_index":409,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["patch:partial",{"_index":1064,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["patchdish",{"_index":352,"title":{},"body":{"injectables/DishService.html":{}}}],["patchdish(id",{"_index":368,"title":{},"body":{"injectables/DishService.html":{}}}],["patchdish(id:string|undefined,patch:partial",{"_index":387,"title":{},"body":{"injectables/DishService.html":{}}}],["patchingredient",{"_index":803,"title":{},"body":{"injectables/IngredientService.html":{}}}],["patchingredient(id",{"_index":810,"title":{},"body":{"injectables/IngredientService.html":{}}}],["patchingredient(id:string|undefined,patch:partial",{"_index":821,"title":{},"body":{"injectables/IngredientService.html":{}}}],["patchingredientdish",{"_index":353,"title":{},"body":{"injectables/DishService.html":{}}}],["patchingredientdish(id",{"_index":371,"title":{},"body":{"injectables/DishService.html":{}}}],["patchingredientdish(id:string,patch:partial",{"_index":400,"title":{},"body":{"injectables/DishService.html":{}}}],["path",{"_index":114,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["people",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["peoplepagecomponent",{"_index":72,"title":{"components/PeoplePageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["person",{"_index":789,"title":{},"body":{"components/HomePageComponent.html":{},"pipes/PersonPipe.html":{},"components/PersonsListComponent.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{}}}],["person.age",{"_index":1086,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["person.firstname",{"_index":933,"title":{},"body":{"pipes/PersonPipe.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["person.interface",{"_index":499,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["person.lastname",{"_index":935,"title":{},"body":{"pipes/PersonPipe.html":{}}}],["person.nickname!=null?person.nickname",{"_index":934,"title":{},"body":{"pipes/PersonPipe.html":{}}}],["person:\"fullname",{"_index":792,"title":{},"body":{"components/HomePageComponent.html":{}}}],["personal",{"_index":1089,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["personcreatemodel",{"_index":471,"title":{"interfaces/PersonCreateModel.html":{}},"body":{"injectables/EditService.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["persondetailmodel",{"_index":497,"title":{"interfaces/PersonDetailModel.html":{}},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{},"coverage.html":{}}}],["persondetailmodel|smallpersondetailmodel",{"_index":930,"title":{},"body":{"pipes/PersonPipe.html":{}}}],["personid",{"_index":451,"title":{},"body":{"injectables/EditService.html":{},"injectables/EventService.html":{},"interfaces/UserCreate.html":{}}}],["personid:string",{"_index":1125,"title":{},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["personpipe",{"_index":590,"title":{"pipes/PersonPipe.html":{}},"body":{"components/HomePageComponent.html":{},"pipes/PersonPipe.html":{},"coverage.html":{}}}],["persons",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["personservice",{"_index":936,"title":{"injectables/PersonService.html":{}},"body":{"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{},"coverage.html":{}}}],["personservice=inject(personservice",{"_index":1033,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["personslistcomponent",{"_index":74,"title":{"components/PersonsListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["personstatus",{"_index":919,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"miscellaneous/enumerations.html":{}}}],["phone",{"_index":1098,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["phonenumber",{"_index":915,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["phonenumberoffather",{"_index":916,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["phonenumberofmother",{"_index":917,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["pipe",{"_index":511,"title":{"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{}},"body":{"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{},"coverage.html":{}}}],["pipes",{"_index":513,"title":{},"body":{"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{},"overview.html":{}}}],["pipes/event.pipe",{"_index":653,"title":{},"body":{"components/HomePageComponent.html":{}}}],["pipes/person.pipe",{"_index":652,"title":{},"body":{"components/HomePageComponent.html":{}}}],["pipetransform",{"_index":520,"title":{},"body":{"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{}}}],["pl",{"_index":1252,"title":{},"body":{"components/UserListComponent.html":{}}}],["place",{"_index":493,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"components/HomePageComponent.html":{}}}],["placeholders",{"_index":706,"title":{},"body":{"components/HomePageComponent.html":{}}}],["platform",{"_index":1409,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":1257,"title":{},"body":{"components/UserListComponent.html":{}}}],["popreturnurl",{"_index":434,"title":{},"body":{"injectables/EditService.html":{}}}],["post(`${this.baseurl}/logout",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["postcss",{"_index":1362,"title":{},"body":{"dependencies.html":{}}}],["pr",{"_index":1253,"title":{},"body":{"components/UserListComponent.html":{}}}],["previous",{"_index":707,"title":{},"body":{"components/HomePageComponent.html":{}}}],["previusmonth",{"_index":605,"title":{},"body":{"components/HomePageComponent.html":{}}}],["price",{"_index":799,"title":{},"body":{"interfaces/IngredientDishDetail.html":{}}}],["price:number",{"_index":340,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["priceforunit",{"_index":796,"title":{},"body":{"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{}}}],["priceforunit:number",{"_index":341,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{}}}],["private",{"_index":118,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["project",{"_index":1375,"title":{},"body":{"index.html":{}}}],["properties",{"_index":23,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"properties.html":{}}}],["protected",{"_index":293,"title":{},"body":{"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/PeoplePageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["providedin",{"_index":116,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["providerouter(routes),providehttpclient",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["putdaytoview",{"_index":606,"title":{},"body":{"components/HomePageComponent.html":{}}}],["putdaytoview(day",{"_index":628,"title":{},"body":{"components/HomePageComponent.html":{}}}],["putdaytoview(day:keyvalue",{"_index":728,"title":{},"body":{"components/HomePageComponent.html":{}}}],["puteventtoview",{"_index":607,"title":{},"body":{"components/HomePageComponent.html":{}}}],["puteventtoview(eventid",{"_index":631,"title":{},"body":{"components/HomePageComponent.html":{}}}],["puteventtoview(eventid:string",{"_index":731,"title":{},"body":{"components/HomePageComponent.html":{}}}],["přihlásit",{"_index":321,"title":{},"body":{"components/DefaultComponent.html":{}}}],["query",{"_index":1296,"title":{},"body":{"injectables/UserService.html":{}}}],["reactiveformsmodule",{"_index":206,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["readonly",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["redirect",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{}}}],["reference",{"_index":1419,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":294,"title":{},"body":{"components/DefaultComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["refreshpersons",{"_index":1159,"title":{},"body":{"components/UserListComponent.html":{}}}],["reload",{"_index":1391,"title":{},"body":{"index.html":{}}}],["remove",{"_index":990,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["removedish",{"_index":354,"title":{},"body":{"injectables/DishService.html":{}}}],["removedish(id",{"_index":373,"title":{},"body":{"injectables/DishService.html":{}}}],["removedishfromevent",{"_index":535,"title":{},"body":{"injectables/EventService.html":{}}}],["removedishfromevent(id",{"_index":550,"title":{},"body":{"injectables/EventService.html":{}}}],["removeingredient",{"_index":804,"title":{},"body":{"injectables/IngredientService.html":{}}}],["removeingredient(id",{"_index":812,"title":{},"body":{"injectables/IngredientService.html":{}}}],["removeingredientfromdish",{"_index":355,"title":{},"body":{"injectables/DishService.html":{}}}],["removeingredientfromdish(model",{"_index":375,"title":{},"body":{"injectables/DishService.html":{}}}],["removeingredientfromdish(model:dishingredientmodel",{"_index":403,"title":{},"body":{"injectables/DishService.html":{}}}],["removepersonfromevent",{"_index":536,"title":{},"body":{"injectables/EventService.html":{}}}],["removepersonfromevent(id",{"_index":552,"title":{},"body":{"injectables/EventService.html":{}}}],["removerole",{"_index":1276,"title":{},"body":{"injectables/UserService.html":{}}}],["removerole(id",{"_index":1287,"title":{},"body":{"injectables/UserService.html":{}}}],["removerole(id:string",{"_index":1307,"title":{},"body":{"injectables/UserService.html":{}}}],["replace",{"_index":411,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["replaysubject",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{}}}],["replaysubject(1",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["request",{"_index":954,"title":{},"body":{"injectables/PersonService.html":{}}}],["request.subscribe",{"_index":957,"title":{},"body":{"injectables/PersonService.html":{}}}],["required",{"_index":870,"title":{},"body":{"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["res",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":875,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["resetemail",{"_index":849,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["resetform",{"_index":833,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["resetingpassword",{"_index":834,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["resetpassword",{"_index":838,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["resetpassword():void",{"_index":862,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["response",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{}}}],["responsible",{"_index":790,"title":{},"body":{"components/HomePageComponent.html":{}}}],["responsibleperson",{"_index":507,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{}}}],["responsiblepersonid",{"_index":494,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{}}}],["results",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":119,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["returnurl",{"_index":424,"title":{},"body":{"injectables/EditService.html":{}}}],["returnurl:any",{"_index":475,"title":{},"body":{"injectables/EditService.html":{}}}],["rgba(95",{"_index":1261,"title":{},"body":{"components/UserListComponent.html":{}}}],["role",{"_index":1128,"title":{},"body":{"interfaces/UserDetail.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["role:string",{"_index":1122,"title":{},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["role==\"\"?'none':role",{"_index":1226,"title":{},"body":{"components/UserListComponent.html":{}}}],["role==\"\"?\\'none\\':role",{"_index":1273,"title":{},"body":{"components/UserListComponent.html":{}}}],["roles",{"_index":1155,"title":{},"body":{"components/UserListComponent.html":{}}}],["roles;track",{"_index":1225,"title":{},"body":{"components/UserListComponent.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["rounded",{"_index":1239,"title":{},"body":{"components/UserListComponent.html":{}}}],["route",{"_index":215,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["route=inject(activatedroute",{"_index":243,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["router",{"_index":94,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["router=inject(router",{"_index":244,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["routerlink",{"_index":238,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["routeroutlet",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{}}}],["routerstatesnapshot",{"_index":101,"title":{},"body":{"guards/AuthGuard.html":{}}}],["rowingrid",{"_index":510,"title":{},"body":{"interfaces/EventDetailModel.html":{}}}],["rowingrid?:number|null",{"_index":509,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{}}}],["rowsfull.push(firstempty",{"_index":724,"title":{},"body":{"components/HomePageComponent.html":{}}}],["rowsfull.push(x.rowingrid",{"_index":716,"title":{},"body":{"components/HomePageComponent.html":{}}}],["rowsfull=[1",{"_index":713,"title":{},"body":{"components/HomePageComponent.html":{}}}],["run",{"_index":1383,"title":{},"body":{"index.html":{}}}],["running",{"_index":1401,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":106,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":111,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["saturday",{"_index":697,"title":{},"body":{"components/HomePageComponent.html":{}}}],["scaffolding",{"_index":1393,"title":{},"body":{"index.html":{}}}],["se",{"_index":322,"title":{},"body":{"components/DefaultComponent.html":{}}}],["search",{"_index":981,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["search:string",{"_index":1035,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["searchingredients",{"_index":982,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["searchingredients:string",{"_index":1036,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["searchusers",{"_index":1156,"title":{},"body":{"components/UserListComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["sent",{"_index":877,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["sentreset",{"_index":835,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["sentreset=false",{"_index":856,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["serve",{"_index":1385,"title":{},"body":{"index.html":{}}}],["server",{"_index":1382,"title":{},"body":{"index.html":{}}}],["services/auth.service",{"_index":112,"title":{},"body":{"guards/AuthGuard.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/LoginPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["services/edit.service",{"_index":654,"title":{},"body":{"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["services/event.service",{"_index":651,"title":{},"body":{"components/HomePageComponent.html":{}}}],["services/person.service",{"_index":1030,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["services/user.service",{"_index":855,"title":{},"body":{"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["seting",{"_index":274,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["shadow",{"_index":1232,"title":{},"body":{"components/UserListComponent.html":{}}}],["sign",{"_index":317,"title":{},"body":{"components/DefaultComponent.html":{}}}],["skarabeus",{"_index":311,"title":{},"body":{"components/DefaultComponent.html":{}}}],["skarabeus_ui",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["skarabeusui",{"_index":1374,"title":{},"body":{"index.html":{}}}],["smallpersondetailmodel",{"_index":498,"title":{"interfaces/SmallPersonDetailModel.html":{}},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"interfaces/SmallPersonDetailModel.html":{},"coverage.html":{}}}],["sort",{"_index":712,"title":{},"body":{"components/HomePageComponent.html":{}}}],["sort((a",{"_index":683,"title":{},"body":{"components/HomePageComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"index.html":{}}}],["spaces",{"_index":1107,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["spelling",{"_index":884,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["src/.../app.config.ts",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../person.interface.ts",{"_index":1371,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1323,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/dish",{"_index":1327,"title":{},"body":{"coverage.html":{}}}],["src/app/components/event",{"_index":1329,"title":{},"body":{"coverage.html":{}}}],["src/app/components/persons",{"_index":970,"title":{},"body":{"components/PersonsListComponent.html":{},"coverage.html":{}}}],["src/app/components/user",{"_index":1150,"title":{},"body":{"components/UserListComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":89,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts:10",{"_index":95,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:17",{"_index":102,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/layouts/default/default.component.ts",{"_index":287,"title":{},"body":{"components/DefaultComponent.html":{},"coverage.html":{}}}],["src/app/layouts/default/default.component.ts:15",{"_index":300,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.component.ts:17",{"_index":296,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.component.ts:22",{"_index":301,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.component.ts:23",{"_index":299,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.component.ts:27",{"_index":298,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/layouts/default/default.component.ts:31",{"_index":297,"title":{},"body":{"components/DefaultComponent.html":{}}}],["src/app/models/auth.interface.ts",{"_index":824,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/TokenModel.html":{},"coverage.html":{}}}],["src/app/models/dish.interface.ts",{"_index":326,"title":{},"body":{"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"interfaces/IngredientDishDetail.html":{},"coverage.html":{}}}],["src/app/models/event.interface.ts",{"_index":491,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"coverage.html":{}}}],["src/app/models/ingredient.interface.ts",{"_index":795,"title":{},"body":{"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"coverage.html":{}}}],["src/app/models/person.interface.ts",{"_index":904,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/user.interface.ts",{"_index":1119,"title":{},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{},"coverage.html":{}}}],["src/app/pages/change",{"_index":202,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/errors/not",{"_index":890,"title":{},"body":{"components/NotFoundPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/food",{"_index":581,"title":{},"body":{"components/FoodPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/home",{"_index":587,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["src/app/pages/login",{"_index":829,"title":{},"body":{"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/people",{"_index":894,"title":{},"body":{"components/PeoplePageComponent.html":{},"coverage.html":{}}}],["src/app/pages/user",{"_index":1129,"title":{},"body":{"components/UserInfoPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/validate",{"_index":1311,"title":{},"body":{"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["src/app/pipes/event.pipe.ts",{"_index":514,"title":{},"body":{"pipes/EventPipe.html":{},"coverage.html":{}}}],["src/app/pipes/event.pipe.ts:10",{"_index":518,"title":{},"body":{"pipes/EventPipe.html":{}}}],["src/app/pipes/person.pipe.ts",{"_index":927,"title":{},"body":{"pipes/PersonPipe.html":{},"coverage.html":{}}}],["src/app/pipes/person.pipe.ts:10",{"_index":929,"title":{},"body":{"pipes/PersonPipe.html":{}}}],["src/app/services/auth.service.ts",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:13",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:14",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:15",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:16",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:17",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:23",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:39",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:49",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:62",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:66",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/dish.service.ts",{"_index":348,"title":{},"body":{"injectables/DishService.html":{},"coverage.html":{}}}],["src/app/services/dish.service.ts:11",{"_index":379,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:12",{"_index":380,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:13",{"_index":358,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:20",{"_index":370,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:26",{"_index":377,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:32",{"_index":360,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:40",{"_index":372,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:49",{"_index":376,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:57",{"_index":362,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:62",{"_index":374,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/dish.service.ts:70",{"_index":365,"title":{},"body":{"injectables/DishService.html":{}}}],["src/app/services/edit.service.ts",{"_index":415,"title":{},"body":{"injectables/EditService.html":{},"coverage.html":{}}}],["src/app/services/edit.service.ts:10",{"_index":456,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:12",{"_index":464,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:13",{"_index":466,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:15",{"_index":461,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:16",{"_index":463,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:18",{"_index":458,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:19",{"_index":460,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:21",{"_index":470,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:23",{"_index":469,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:24",{"_index":468,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:25",{"_index":467,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:27",{"_index":450,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:32",{"_index":441,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:37",{"_index":445,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:42",{"_index":437,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:46",{"_index":435,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:50",{"_index":436,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:54",{"_index":448,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:59",{"_index":439,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:64",{"_index":443,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:69",{"_index":452,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/edit.service.ts:9",{"_index":454,"title":{},"body":{"injectables/EditService.html":{}}}],["src/app/services/event.service.ts",{"_index":530,"title":{},"body":{"injectables/EventService.html":{},"coverage.html":{}}}],["src/app/services/event.service.ts:10",{"_index":556,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:11",{"_index":557,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:12",{"_index":538,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:18",{"_index":554,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:31",{"_index":546,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:35",{"_index":544,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:39",{"_index":549,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:45",{"_index":542,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:50",{"_index":553,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:55",{"_index":540,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:60",{"_index":551,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/event.service.ts:69",{"_index":547,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/services/ingredient.service.ts",{"_index":801,"title":{},"body":{"injectables/IngredientService.html":{},"coverage.html":{}}}],["src/app/services/ingredient.service.ts:10",{"_index":816,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/ingredient.service.ts:11",{"_index":817,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/ingredient.service.ts:12",{"_index":806,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/ingredient.service.ts:19",{"_index":811,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/ingredient.service.ts:25",{"_index":814,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/ingredient.service.ts:31",{"_index":808,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/ingredient.service.ts:36",{"_index":813,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/ingredient.service.ts:41",{"_index":809,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/services/person.service.ts",{"_index":937,"title":{},"body":{"injectables/PersonService.html":{},"coverage.html":{}}}],["src/app/services/person.service.ts:10",{"_index":949,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/person.service.ts:11",{"_index":950,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/person.service.ts:12",{"_index":939,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/person.service.ts:19",{"_index":946,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/person.service.ts:42",{"_index":941,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/person.service.ts:46",{"_index":940,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/person.service.ts:50",{"_index":944,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/person.service.ts:57",{"_index":943,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/app/services/user.service.ts",{"_index":1274,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:12",{"_index":1293,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:13",{"_index":1294,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:14",{"_index":1278,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:21",{"_index":1291,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:26",{"_index":1281,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:30",{"_index":1286,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:37",{"_index":1282,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:41",{"_index":1290,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:45",{"_index":1280,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:49",{"_index":1288,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:53",{"_index":1283,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:69",{"_index":1285,"title":{},"body":{"injectables/UserService.html":{}}}],["standalone",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"pipes/EventPipe.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["standalone:true",{"_index":240,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"pipes/EventPipe.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["start",{"_index":495,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{}}}],["startdate",{"_index":523,"title":{},"body":{"pipes/EventPipe.html":{}}}],["started",{"_index":1373,"title":{"index.html":{}},"body":{}}],["starts",{"_index":785,"title":{},"body":{"components/HomePageComponent.html":{}}}],["startweekday",{"_index":693,"title":{},"body":{"components/HomePageComponent.html":{}}}],["state",{"_index":100,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":1321,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":918,"title":{},"body":{"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["stored",{"_index":1398,"title":{},"body":{"index.html":{}}}],["string",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{}}}],["stringtocolor",{"_index":608,"title":{},"body":{"components/HomePageComponent.html":{}}}],["stringtocolor((event.start+(event.rowingrid!/4",{"_index":774,"title":{},"body":{"components/HomePageComponent.html":{}}}],["stringtocolor(input",{"_index":633,"title":{},"body":{"components/HomePageComponent.html":{}}}],["stringtodate",{"_index":609,"title":{},"body":{"components/HomePageComponent.html":{}}}],["stringtodate(dt",{"_index":636,"title":{},"body":{"components/HomePageComponent.html":{}}}],["styles",{"_index":201,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["styleurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PersonsListComponent.html":{}}}],["styleurls",{"_index":208,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["subscribe",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DishService.html":{},"components/LoginPageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["subscribe((res",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["subscribe(x",{"_index":561,"title":{},"body":{"injectables/EventService.html":{},"injectables/UserService.html":{}}}],["subscribe(x=>{this.dishes.next(x",{"_index":394,"title":{},"body":{"injectables/DishService.html":{}}}],["subscribe(x=>{this.ingredients.next(x",{"_index":822,"title":{},"body":{"injectables/IngredientService.html":{}}}],["succesfuly",{"_index":273,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["sunday",{"_index":695,"title":{},"body":{"components/HomePageComponent.html":{}}}],["support",{"_index":887,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["switch",{"_index":1092,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["switch(args",{"_index":522,"title":{},"body":{"pipes/EventPipe.html":{}}}],["switch(format",{"_index":931,"title":{},"body":{"pipes/PersonPipe.html":{}}}],["switchmap",{"_index":109,"title":{},"body":{"guards/AuthGuard.html":{}}}],["switchmap(user",{"_index":124,"title":{},"body":{"guards/AuthGuard.html":{}}}],["t",{"_index":366,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["table",{"_index":1349,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1348,"title":{},"body":{"coverage.html":{}}}],["tailwindcss/postcss",{"_index":1359,"title":{},"body":{"dependencies.html":{}}}],["take",{"_index":110,"title":{},"body":{"guards/AuthGuard.html":{}}}],["take(1",{"_index":121,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tap",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["tap((response",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["test",{"_index":1404,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1413,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1403,"title":{},"body":{"index.html":{}}}],["text",{"_index":1247,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.acountcreation",{"_index":248,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.activecreatemodal",{"_index":1062,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.activecreatemodal=false",{"_index":1059,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.activecreatemodal=true",{"_index":1200,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.activeeditmodal",{"_index":1057,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.activeeditmodal=false",{"_index":1048,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.addeventstodays",{"_index":685,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.authservice.changepassword(this.model).subscribe",{"_index":263,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.authservice.login(data).subscribe",{"_index":858,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.authservice.logout",{"_index":308,"title":{},"body":{"components/DefaultComponent.html":{}}}],["this.authservice.userinfo",{"_index":307,"title":{},"body":{"components/DefaultComponent.html":{},"components/UserInfoPageComponent.html":{}}}],["this.authservice.userinfomodel",{"_index":302,"title":{},"body":{"components/DefaultComponent.html":{},"components/PeoplePageComponent.html":{}}}],["this.authservice.userinfomodel$.pipe",{"_index":120,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.userinfomodel$.subscribe(x=>this.user",{"_index":1136,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["this.authservice.validateemail({email:params.get(\"email\")!,token:params.get(\"token\")!}).subscribe",{"_index":249,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["this.baseurl",{"_index":392,"title":{},"body":{"injectables/DishService.html":{},"injectables/IngredientService.html":{}}}],["this.baseurl}/${id",{"_index":390,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["this.baseurl}/adddishtoevent/${id}/${dishid",{"_index":579,"title":{},"body":{"injectables/EventService.html":{}}}],["this.baseurl}/addingredienttodish",{"_index":396,"title":{},"body":{"injectables/DishService.html":{}}}],["this.baseurl}/addpersontoevent/${id}/${personid",{"_index":576,"title":{},"body":{"injectables/EventService.html":{}}}],["this.baseurl}/removedishfromevent/${id}/${dishid",{"_index":580,"title":{},"body":{"injectables/EventService.html":{}}}],["this.baseurl}/removeingredientfromdish",{"_index":404,"title":{},"body":{"injectables/DishService.html":{}}}],["this.baseurl}/removepersonfromevent/${id}/${personid",{"_index":577,"title":{},"body":{"injectables/EventService.html":{}}}],["this.baseurl}/updateingredientdish/${id",{"_index":401,"title":{},"body":{"injectables/DishService.html":{}}}],["this.calendar.foreach(x",{"_index":666,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.calendar.map",{"_index":686,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.calendar.some(z",{"_index":678,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.calendar=this.getcalendargrid(this.editservice.calendaryear,this.editservice.calendarmonth",{"_index":673,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.calendar[this.calendar.indexof(week",{"_index":745,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.changepassword",{"_index":262,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.checkpasswords",{"_index":261,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserListComponent.html":{}}}],["this.closecreatemodal",{"_index":1080,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.closeeditmodal",{"_index":1075,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.create",{"_index":1061,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.creatingperson",{"_index":1058,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.creatinguser",{"_index":1202,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.creatinguser.name",{"_index":1198,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.creatinguser.password",{"_index":1213,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.currentmonth,new",{"_index":646,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.dishes.asobservable",{"_index":381,"title":{},"body":{"injectables/DishService.html":{}}}],["this.dropdownvisible",{"_index":306,"title":{},"body":{"components/DefaultComponent.html":{}}}],["this.editdishid.asobservable",{"_index":459,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editdishid.next(dishid",{"_index":479,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editdishid.next(null",{"_index":482,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editeventid.asobservable",{"_index":462,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editeventid.next(eventid",{"_index":480,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editeventid.next(null",{"_index":483,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editingperson",{"_index":1046,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.editingpersonbase",{"_index":1047,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.editinguser",{"_index":1204,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.editinguserbase",{"_index":1196,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.editpersonid.asobservable",{"_index":465,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editpersonid.next(null",{"_index":481,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editpersonid.next(personid",{"_index":478,"title":{},"body":{"injectables/EditService.html":{}}}],["this.editservice.calendarmonth",{"_index":639,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.editservice.calendaryear",{"_index":641,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.editservice.closepersonedit",{"_index":1049,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.editservice.editpersonid$.subscribe(x=>{if(x!=null)this.openeditmodal(x",{"_index":1042,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.editservice.openeventcreatemodal(this.router.url",{"_index":733,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.editservice.openeventeditmodal(id,this.router.url",{"_index":736,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.editservice.openpersoncreate",{"_index":1045,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.editservice.openpersoneditmodal(this.editinguser.person.id",{"_index":1194,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.editservice.openpersoneditmodal(this.user.person.id",{"_index":1137,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["this.editservice.popreturnurl",{"_index":1050,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.events",{"_index":676,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.events.asobservable",{"_index":558,"title":{},"body":{"injectables/EventService.html":{}}}],["this.events.find(x=>x.id==eventid",{"_index":732,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.events.find(y=>y.id==x.id)!.rowingrid",{"_index":722,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.events.next(x",{"_index":569,"title":{},"body":{"injectables/EventService.html":{}}}],["this.eventservice.events$.subscribe",{"_index":674,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.fb.group",{"_index":845,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.generatecalendar",{"_index":664,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.generatepatch(model",{"_index":966,"title":{},"body":{"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["this.httpclient",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.delete(`${this.baseurl}/${id",{"_index":571,"title":{},"body":{"injectables/EventService.html":{},"injectables/PersonService.html":{}}}],["this.httpclient.delete(`${this.baseurl}/softdelete/${id",{"_index":1302,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.delete(url",{"_index":578,"title":{},"body":{"injectables/EventService.html":{},"injectables/IngredientService.html":{}}}],["this.httpclient.delete(url).subscribe",{"_index":407,"title":{},"body":{"injectables/DishService.html":{}}}],["this.httpclient.get(`${this.baseurl",{"_index":956,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.httpclient.get(`${this.baseurl}/addrole`,{params:{userid:id,role:role",{"_index":1306,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get(`${this.baseurl}/changepassword/${email",{"_index":1310,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get(`${this.baseurl}/removerole`,{params:{userid:id",{"_index":1308,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get(`${this.baseurl}/undeleteuser/${id",{"_index":1304,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.get(`${this.baseurl}/unfiltred",{"_index":955,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.httpclient.get(this.baseurl",{"_index":560,"title":{},"body":{"injectables/EventService.html":{},"injectables/UserService.html":{}}}],["this.httpclient.get(url",{"_index":393,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{}}}],["this.httpclient.patch(url,patch",{"_index":968,"title":{},"body":{"injectables/PersonService.html":{},"injectables/UserService.html":{}}}],["this.httpclient.patch(url,this.generatepatch(model",{"_index":575,"title":{},"body":{"injectables/EventService.html":{}}}],["this.httpclient.patch(url,this.generatepatch(patch",{"_index":391,"title":{},"body":{"injectables/DishService.html":{},"injectables/IngredientService.html":{}}}],["this.httpclient.post(`${this.baseurl}/changepassword`,model",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${this.baseurl}/createuser`,model",{"_index":1301,"title":{},"body":{"injectables/UserService.html":{}}}],["this.httpclient.post(`${this.baseurl}/login",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${this.baseurl}/validateemail`,model",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${this.baseurl}`,model",{"_index":573,"title":{},"body":{"injectables/EventService.html":{}}}],["this.httpclient.post(this.baseurl,model",{"_index":965,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.httpclient.post(url,data",{"_index":406,"title":{},"body":{"injectables/DishService.html":{},"injectables/IngredientService.html":{}}}],["this.httpclient.post(url,model).subscribe",{"_index":397,"title":{},"body":{"injectables/DishService.html":{}}}],["this.ingredients.asobservable",{"_index":818,"title":{},"body":{"injectables/IngredientService.html":{}}}],["this.lasterror",{"_index":859,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.lasterror$=err.error",{"_index":264,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.lasterror$=error.error",{"_index":251,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["this.loginform.getrawvalue",{"_index":857,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.model.email",{"_index":255,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.model.password",{"_index":266,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.model.token",{"_index":253,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.opencreatemodal",{"_index":1044,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.opendishcreate",{"_index":487,"title":{},"body":{"injectables/EditService.html":{}}}],["this.openeventcreate",{"_index":489,"title":{},"body":{"injectables/EditService.html":{}}}],["this.openpersoncreate",{"_index":485,"title":{},"body":{"injectables/EditService.html":{}}}],["this.password2",{"_index":1201,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.passwordcheck",{"_index":267,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["this.passwordmismatch",{"_index":265,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/UserListComponent.html":{}}}],["this.persons$.subscribe(x",{"_index":1055,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.persons.asobservable",{"_index":951,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.persons.next(x.map(y",{"_index":958,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.personservice.create(this.creatingperson",{"_index":1078,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.personservice.delete(this.editingperson$.id",{"_index":1074,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.personservice.patch(this.editingperson$.id",{"_index":1072,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.personservice.patch(this.editingperson$.id,patch",{"_index":1070,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.personservice.persons",{"_index":1023,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.personservice.updatepersons",{"_index":1063,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.putdaytoview(todaypair",{"_index":672,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.refresh",{"_index":309,"title":{},"body":{"components/DefaultComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["this.resetingpassword",{"_index":861,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.returnurl",{"_index":477,"title":{},"body":{"injectables/EditService.html":{}}}],["this.route.queryparammap.subscribe(params",{"_index":246,"title":{},"body":{"components/ChangePasswordPageComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["this.router.navigate",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate(['/events",{"_index":734,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.router.navigate(['/login",{"_index":129,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{}}}],["this.router.navigate(['/people",{"_index":1139,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["this.router.navigatebyurl(url",{"_index":1053,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["this.router.url",{"_index":1138,"title":{},"body":{"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["this.searchusers",{"_index":1199,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.sentreset=true",{"_index":864,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.stringtodate(a.start).gettime",{"_index":684,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.stringtodate(b.start).gettime",{"_index":711,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.stringtodate(event.start).gettime",{"_index":710,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.stringtodate(y.end).gettime",{"_index":682,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.stringtodate(y.start).gettime",{"_index":681,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.today.gettime",{"_index":670,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.today.sethours(1",{"_index":663,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.updatedishes",{"_index":386,"title":{},"body":{"injectables/DishService.html":{}}}],["this.updatedishes(),console.log(response",{"_index":398,"title":{},"body":{"injectables/DishService.html":{}}}],["this.updateevents",{"_index":559,"title":{},"body":{"injectables/EventService.html":{}}}],["this.updatefield(field",{"_index":1073,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["this.updateingredients",{"_index":820,"title":{},"body":{"injectables/IngredientService.html":{}}}],["this.updatepersons",{"_index":952,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.updateusers",{"_index":1298,"title":{},"body":{"injectables/UserService.html":{}}}],["this.user",{"_index":1141,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["this.userinfo",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userinfomodel.asobservable",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userinfomodel.next(null",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userinfomodel.next(x",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.users$.subscribe",{"_index":1203,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.users.asobservable",{"_index":1295,"title":{},"body":{"injectables/UserService.html":{}}}],["this.users.next(x);console.log(x",{"_index":1299,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.addrole(this.editinguser.id,this.editinguser.role).subscribe(x=>this.refresh",{"_index":1211,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.changepassword(this.resetform.getrawvalue().resetemail",{"_index":863,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.userservice.create(this.creatinguser",{"_index":1205,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.delete(this.editinguser.id",{"_index":1206,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.patch(this.editinguser.id",{"_index":1212,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.patch(this.user.id",{"_index":1142,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["this.userservice.removerole(this.editinguser.id).subscribe(x=>this.refresh",{"_index":1210,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.undelete(this.editinguser.id",{"_index":1207,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.updateusers",{"_index":1195,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userservice.users",{"_index":1185,"title":{},"body":{"components/UserListComponent.html":{}}}],["this.userupdatebase",{"_index":1140,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["this.viewday",{"_index":730,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.vieweventdetail",{"_index":729,"title":{},"body":{"components/HomePageComponent.html":{}}}],["time",{"_index":505,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"components/HomePageComponent.html":{}}}],["title",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["today",{"_index":594,"title":{},"body":{"components/HomePageComponent.html":{}}}],["today=new",{"_index":662,"title":{},"body":{"components/HomePageComponent.html":{}}}],["todaypair",{"_index":665,"title":{},"body":{"components/HomePageComponent.html":{}}}],["toggledropdown",{"_index":295,"title":{},"body":{"components/DefaultComponent.html":{}}}],["toggletoresetpassword",{"_index":839,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["token",{"_index":1117,"title":{},"body":{"interfaces/TokenModel.html":{}}}],["token:string",{"_index":826,"title":{},"body":{"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/TokenModel.html":{}}}],["tokenmodel",{"_index":161,"title":{"interfaces/TokenModel.html":{}},"body":{"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"interfaces/LoginModel.html":{},"interfaces/PasswordResetModel.html":{},"interfaces/TokenModel.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["track",{"_index":757,"title":{},"body":{"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["transform",{"_index":515,"title":{},"body":{"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{},"components/UserListComponent.html":{}}}],["transform(event",{"_index":516,"title":{},"body":{"pipes/EventPipe.html":{}}}],["transform(person",{"_index":928,"title":{},"body":{"pipes/PersonPipe.html":{}}}],["transition",{"_index":1241,"title":{},"body":{"components/UserListComponent.html":{}}}],["translatey",{"_index":1264,"title":{},"body":{"components/UserListComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["trim",{"_index":1083,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["true",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/EditService.html":{},"pipes/EventPipe.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["try",{"_index":878,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["tryvalidate",{"_index":217,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["tryvalidate(form",{"_index":222,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["tryvalidate(form:ngform",{"_index":257,"title":{},"body":{"components/ChangePasswordPageComponent.html":{}}}],["tslib",{"_index":1365,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"interfaces/DishAddIngredientModel.html":{},"interfaces/DishCreate.html":{},"interfaces/DishDetail.html":{},"interfaces/DishIngredientModel.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"pipes/EventPipe.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"interfaces/IngredientCreate.html":{},"interfaces/IngredientDetail.html":{},"interfaces/IngredientDishDetail.html":{},"injectables/IngredientService.html":{},"interfaces/LoginModel.html":{},"components/LoginPageComponent.html":{},"interfaces/PasswordResetModel.html":{},"components/PeoplePageComponent.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"pipes/PersonPipe.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"interfaces/SmallPersonDetailModel.html":{},"interfaces/TokenModel.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":346,"title":{},"body":{"interfaces/DishDetail.html":{},"injectables/DishService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{}}}],["undelete",{"_index":1160,"title":{},"body":{"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["undelete(id",{"_index":1289,"title":{},"body":{"injectables/UserService.html":{}}}],["undelete(id:string",{"_index":1303,"title":{},"body":{"injectables/UserService.html":{}}}],["unfiltred",{"_index":947,"title":{},"body":{"injectables/PersonService.html":{}}}],["unit",{"_index":1402,"title":{},"body":{"index.html":{}}}],["upcoming",{"_index":749,"title":{},"body":{"components/HomePageComponent.html":{}}}],["update",{"_index":991,"title":{},"body":{"components/PersonsListComponent.html":{}}}],["updated",{"_index":367,"title":{},"body":{"injectables/DishService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{}}}],["updatedishes",{"_index":356,"title":{},"body":{"injectables/DishService.html":{}}}],["updateevents",{"_index":537,"title":{},"body":{"injectables/EventService.html":{}}}],["updatefield",{"_index":992,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["updatefield(field",{"_index":1013,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["updateingredients",{"_index":805,"title":{},"body":{"injectables/IngredientService.html":{}}}],["updatepersons",{"_index":938,"title":{},"body":{"injectables/PersonService.html":{}}}],["updatepersons(unfiltred",{"_index":945,"title":{},"body":{"injectables/PersonService.html":{}}}],["updatepersons(unfiltred:boolean=true",{"_index":953,"title":{},"body":{"injectables/PersonService.html":{}}}],["updateusers",{"_index":1277,"title":{},"body":{"injectables/UserService.html":{}}}],["url",{"_index":389,"title":{},"body":{"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"injectables/IngredientService.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"injectables/UserService.html":{}}}],["url:string",{"_index":476,"title":{},"body":{"injectables/EditService.html":{}}}],["use",{"_index":1394,"title":{},"body":{"index.html":{}}}],["user",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["user.id",{"_index":1217,"title":{},"body":{"components/UserListComponent.html":{}}}],["user.role",{"_index":316,"title":{},"body":{"components/DefaultComponent.html":{}}}],["user.username",{"_index":315,"title":{},"body":{"components/DefaultComponent.html":{},"components/UserListComponent.html":{}}}],["user:hover",{"_index":1255,"title":{},"body":{"components/UserListComponent.html":{}}}],["user>p",{"_index":1244,"title":{},"body":{"components/UserListComponent.html":{}}}],["usercreate",{"_index":1118,"title":{"interfaces/UserCreate.html":{}},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userdetail",{"_index":179,"title":{"interfaces/UserDetail.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userinfo",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["userinfomodel",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["userinfopagecomponent",{"_index":76,"title":{"components/UserInfoPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["userlistcomponent",{"_index":78,"title":{"components/UserListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["userlistcomponent,asyncpipe",{"_index":900,"title":{},"body":{"components/PeoplePageComponent.html":{}}}],["usermail.touched",{"_index":1148,"title":{},"body":{"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["username",{"_index":1123,"title":{},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"interfaces/UserPatch.html":{}}}],["username.touched",{"_index":1146,"title":{},"body":{"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["userpatch",{"_index":1126,"title":{"interfaces/UserPatch.html":{}},"body":{"interfaces/UserCreate.html":{},"interfaces/UserDetail.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"interfaces/UserPatch.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["users",{"_index":1157,"title":{},"body":{"components/UserListComponent.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":836,"title":{"injectables/UserService.html":{}},"body":{"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userservice=inject(userservice",{"_index":1188,"title":{},"body":{"components/UserListComponent.html":{}}}],["userupdatebase",{"_index":1131,"title":{},"body":{"components/UserInfoPageComponent.html":{}}}],["uuid",{"_index":500,"title":{},"body":{"interfaces/EventCreateModel.html":{},"interfaces/EventDetailModel.html":{},"interfaces/PersonCreateModel.html":{},"interfaces/PersonDetailModel.html":{},"interfaces/SmallPersonDetailModel.html":{}}}],["valid",{"_index":872,"title":{},"body":{"components/LoginPageComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["validate",{"_index":1313,"title":{},"body":{"components/ValidateEmailPageComponent.html":{}}}],["validateandtrycreate",{"_index":1161,"title":{},"body":{"components/UserListComponent.html":{}}}],["validateandtrycreate(form",{"_index":1176,"title":{},"body":{"components/UserListComponent.html":{}}}],["validateemail",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{}}}],["validateemail(model",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateemail(model:tokenmodel",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateemailpagecomponent",{"_index":79,"title":{"components/ValidateEmailPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"components/ValidateEmailPageComponent.html":{},"coverage.html":{}}}],["validators",{"_index":854,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["value",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"components/PeoplePageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/EditService.html":{},"components/FoodPageComponent.html":{},"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"components/NotFoundPageComponent.html":{},"components/PeoplePageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["variable",{"_index":1324,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1426,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1379,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1406,"title":{},"body":{"index.html":{}}}],["view",{"_index":753,"title":{},"body":{"components/HomePageComponent.html":{}}}],["viewday",{"_index":595,"title":{},"body":{"components/HomePageComponent.html":{}}}],["viewday.key",{"_index":777,"title":{},"body":{"components/HomePageComponent.html":{}}}],["viewday.value",{"_index":779,"title":{},"body":{"components/HomePageComponent.html":{}}}],["viewday:keyvalue|undefined",{"_index":658,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail",{"_index":596,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail.description",{"_index":784,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail.end",{"_index":788,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail.name",{"_index":782,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail.participants.length",{"_index":793,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail.place",{"_index":783,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail.responsibleperson",{"_index":791,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail.start",{"_index":786,"title":{},"body":{"components/HomePageComponent.html":{}}}],["vieweventdetail:eventdetailmodel|undefined",{"_index":657,"title":{},"body":{"components/HomePageComponent.html":{}}}],["void",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ChangePasswordPageComponent.html":{},"components/DefaultComponent.html":{},"injectables/DishService.html":{},"injectables/EditService.html":{},"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/LoginPageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{},"injectables/UserService.html":{},"components/ValidateEmailPageComponent.html":{}}}],["w",{"_index":1233,"title":{},"body":{"components/UserListComponent.html":{}}}],["week",{"_index":613,"title":{},"body":{"components/HomePageComponent.html":{}}}],["week.key",{"_index":758,"title":{},"body":{"components/HomePageComponent.html":{}}}],["week[index",{"_index":743,"title":{},"body":{"components/HomePageComponent.html":{}}}],["weeks",{"_index":701,"title":{},"body":{"components/HomePageComponent.html":{}}}],["words",{"_index":1246,"title":{},"body":{"components/UserListComponent.html":{}}}],["wrap",{"_index":1248,"title":{},"body":{"components/UserListComponent.html":{}}}],["x",{"_index":675,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginPageComponent.html":{},"injectables/PersonService.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["x.filter(y",{"_index":677,"title":{},"body":{"components/HomePageComponent.html":{}}}],["x.find(y",{"_index":668,"title":{},"body":{"components/HomePageComponent.html":{},"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["x.map",{"_index":687,"title":{},"body":{"components/HomePageComponent.html":{}}}],["x.map(y",{"_index":563,"title":{},"body":{"injectables/EventService.html":{}}}],["y",{"_index":568,"title":{},"body":{"injectables/EventService.html":{},"components/HomePageComponent.html":{},"injectables/PersonService.html":{}}}],["y.age",{"_index":960,"title":{},"body":{"injectables/PersonService.html":{}}}],["y.dateofbirth",{"_index":962,"title":{},"body":{"injectables/PersonService.html":{}}}],["y.end",{"_index":566,"title":{},"body":{"injectables/EventService.html":{}}}],["y.id",{"_index":1056,"title":{},"body":{"components/PersonsListComponent.html":{},"components/UserListComponent.html":{}}}],["y.key.gettime",{"_index":669,"title":{},"body":{"components/HomePageComponent.html":{}}}],["y.start",{"_index":564,"title":{},"body":{"injectables/EventService.html":{}}}],["y.value=this.eventondate(y.key",{"_index":688,"title":{},"body":{"components/HomePageComponent.html":{}}}],["year",{"_index":621,"title":{},"body":{"components/HomePageComponent.html":{}}}],["yes",{"_index":519,"title":{},"body":{"pipes/EventPipe.html":{},"pipes/PersonPipe.html":{},"components/PersonsListComponent.html":{},"components/UserInfoPageComponent.html":{},"components/UserListComponent.html":{}}}],["z.some(a",{"_index":679,"title":{},"body":{"components/HomePageComponent.html":{}}}],["zone.js",{"_index":1367,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Skarabeus_Ui'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { initFlowbite } from 'flowbite';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'Skarabeus_Ui';\n\n  ngOnInit(): void {\n    initFlowbite();\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/guards/auth.guard.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                next\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, switchMap, take } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service'; // Adjust the import path if needed\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable {\n\n    return this.authService.userInfoModel$.pipe(\n      take(1),  // Only take the first emitted value from the observable\n      switchMap(user => {\n        if (user) {\n          // User info is available, user is authenticated\n          return of(true);\n        } else {\n          // User info is not available, meaning not authenticated\n          this.router.navigate(['/login']);\n          return of(false);\n        }\n      }),\n      catchError((err) => {\n        // In case of error (e.g., network error or other issue), redirect to login\n        console.error('AuthGuard Error: ', err);\n        this.router.navigate(['/login']);\n        return of(false);\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                    Readonly\n                                httpClient\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                    Private\n                                userInfoModel\n                            \n                            \n                                userInfoModel$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                userInfo\n                            \n                            \n                                validateEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(model: PasswordResetModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            PasswordResetModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(data: LoginModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInfo\n                        \n                    \n                \n            \n            \n                \nuserInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateEmail\n                        \n                    \n                \n            \n            \n                \nvalidateEmail(model: TokenModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            TokenModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/api/v1/Auth'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        httpClient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userInfoModel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInfoModel$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.userInfoModel.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { LoginModel, PasswordResetModel, TokenModel } from '../models/auth.interface';\nimport { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ReplaySubject, Observable, BehaviorSubject } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { UserDetail } from '../models/user.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private baseUrl = '/api/v1/Auth';\n  private readonly router = inject(Router);\n  private readonly httpClient = inject(HttpClient);\n  private userInfoModel = new ReplaySubject(1);\n  userInfoModel$ = this.userInfoModel.asObservable();\n\n  constructor(){\n    this.userInfo()\n  }\n\n  login(data: LoginModel): Observable {\n    return this.httpClient.post(`${this.baseUrl}/Login`, data).pipe(\n      tap((response) => {\n        this.httpClient\n        .get(`${this.baseUrl}`,{})\n        .subscribe({\n          next:(x)=>{\n            this.userInfoModel.next(x)\n            this.router.navigate(['/']);\n          }\n        })\n        return response;\n      })\n    );\n  }\n\n  logout(): void {\n    this.httpClient\n      .post(`${this.baseUrl}/Logout`, {})\n      .subscribe((res) => {\n        this.userInfo()\n        this.router.navigate(['/login']);\n        return res;\n      });\n  }\n\n  userInfo(){\n    return this.httpClient\n    .get(`${this.baseUrl}`,{})\n    .subscribe({\n      next:(x)=>{\n        this.userInfoModel.next(x)\n      },\n      error:(err)=>{\n        this.userInfoModel.next(null);\n      }\n    });\n  }\n\n  validateEmail(model:TokenModel){\n    return this.httpClient.post(`${this.baseUrl}/validateEmail`,model)\n  }\n\n  changePassword(model:PasswordResetModel){\n    return this.httpClient.post(`${this.baseUrl}/ChangePassword`,model)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePasswordPageComponent.html":{"url":"components/ChangePasswordPageComponent.html","title":"component - ChangePasswordPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangePasswordPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/change-password-page/change-password-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-password-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./change-password-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-password-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                acountCreation\n                            \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                lastError$\n                            \n                            \n                                model\n                            \n                            \n                                passwordCheck\n                            \n                            \n                                passwordMismatch\n                            \n                            \n                                    Private\n                                    Readonly\n                                route\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                checkPasswords\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                tryValidate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:25\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/change-password-page/change-password-page.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswords\n                        \n                    \n                \n            \n            \n                \ncheckPasswords()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/change-password-page/change-password-page.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/change-password-page/change-password-page.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tryValidate\n                        \n                    \n                \n            \n            \n                \ntryValidate(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/change-password-page/change-password-page.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        acountCreation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastError$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {} as PasswordResetModel\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordCheck\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMismatch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/change-password-page/change-password-page.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { PasswordResetModel, TokenModel } from '../../models/auth.interface';\nimport { FormsModule, NgForm, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-change-password-page',\n  standalone:true,\n  imports:[ReactiveFormsModule,FormsModule],\n  templateUrl: './change-password-page.component.html',\n  styleUrls: ['./change-password-page.component.scss']\n})\nexport class ChangePasswordPageComponent implements OnInit {\n  lastError$:any;\n  private readonly authService = inject(AuthService);\n  private readonly route=inject(ActivatedRoute);\n  private readonly router=inject(Router);\n\n  model = {} as PasswordResetModel\n  passwordCheck: string = '';\n  passwordMismatch: boolean = false;\n\n  acountCreation=false;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.route.queryParamMap.subscribe(params => {\n      if(params.get(\"Email\")&&params.get(\"Token\")){\n        this.acountCreation = true\n        this.authService.validateEmail({email:params.get(\"Email\")!,token:params.get(\"Token\")!}).subscribe(\n          {\n            next:()=>{\n\n            },\n            error:(error: any)=>{\n              this.lastError$=error.error\n              console.log(this.lastError$)\n            }\n          }\n        )\n      }\n        this.model.token = params.get(\"PasswordToken\")!\n        this.model.email = params.get(\"Email\")!\n    });\n  }\n\n  tryValidate(form:NgForm){\n    if (form.invalid||this.passwordMismatch) {\n      Object.values(form.controls).forEach(control => {\n        control.markAsTouched();\n      });\n      this.checkPasswords()\n    }\n    else{\n      this.changePassword()\n    }\n  }\n\n  changePassword(){\n    this.authService.changePassword(this.model).subscribe(\n      {\n        next:()=>{\n          this.router.navigate(['/login'])\n        },\n        error:(err)=>{\n          this.lastError$=err.error\n        }\n      }\n    )\n  }\n\n  checkPasswords() {\n    this.passwordMismatch = (this.model.password !== this.passwordCheck) || (this.model.password == \"\");\n  }\n}\n\n    \n\n    \n        \n  \n    Change Password\n    @if (lastError$ != null) {\n      \n        {{lastError$.errors[\"errorMessage\"][0]}}\n      \n    }\n    @else if(acountCreation){\n      \n        Email was confirmed succesfuly, after seting your password, you can go to the login page and login\n            \n    }\n\n    \n        \n        \n          \n            Password\n            @if(password.invalid && password.touched){\n            must be at least 8 characters, with at least 1 letter and 1 number.\n            }\n          \n\n          \n        \n        \n        \n          \n            Confirm Password\n            @if(passwordMismatch && confirmPassword.touched){\n            does not match\n            }\n          \n\n          \n        \n        \n          \n            Change Password\n          \n        \n      \n  \n\n    \n\n    \n                \n                    ./change-password-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Change Password    @if (lastError$ != null) {              {{lastError$.errors[\"errorMessage\"][0]}}          }    @else if(acountCreation){              Email was confirmed succesfuly, after seting your password, you can go to the login page and login                }                                          Password            @if(password.invalid && password.touched){            must be at least 8 characters, with at least 1 letter and 1 number.            }                                                                  Confirm Password            @if(passwordMismatch && confirmPassword.touched){            does not match            }                                                          Change Password                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChangePasswordPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultComponent.html":{"url":"components/DefaultComponent.html","title":"component - DefaultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DefaultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/default/default.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-default\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterOutlet\n                            RouterLink\n                            AsyncPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./default.component.html\n            \n\n\n\n            \n                styleUrl\n                ./default.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                dropdownVisible\n                            \n                            \n                                    Protected\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                refresh\n                            \n                            \n                                toggleDropdown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/default/default.component.ts:17\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/default/default.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/default/default.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/default/default.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/default/default.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dropdownVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/default/default.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.authService.userInfoModel$\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/default/default.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AsyncPipe, CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { RouterLink, RouterOutlet } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport 'flowbite';\n \n@Component({\n  selector: 'app-default',\n  standalone: true,\n  imports: [CommonModule,RouterOutlet,RouterLink,AsyncPipe],\n  templateUrl: './default.component.html',\n  styleUrl: './default.component.scss',\n})\nexport class DefaultComponent {\n  authService=inject(AuthService)\n\n  protected user$ = this.authService.userInfoModel$;\n\n  constructor() {    \n  }\n\n  dropdownVisible = false;\n  toggleDropdown(): void {\n    this.dropdownVisible = !this.dropdownVisible;\n  }\n  \n  refresh(){\n    this.authService.userInfo();\n  }\n\n  logout() {\n    this.authService.logout()\n    this.dropdownVisible = false\n    this.refresh()\n  }\n}\n\n    \n\n    \n        \n  \n    @let user = user$ | async;\n    \n      \n      Skarabeus\n    \n    \n      @if(user) {\n      \n        \n          Open user menu\n          \n            \n          \n\n\n\n        \n\n        \n          \n            {{user.userName}}\n            {{user.role}}\n          \n          \n            \n              Sign out\n            \n          \n        \n      \n      }\n    \n    \n      \n        @if (user) {\n        Home\n        dishes\n        events\n        persons\n        } @else {\n        Přihlásit se\n        }\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @let user = user$ | async;                Skarabeus              @if(user) {                        Open user menu                                                                      {{user.userName}}            {{user.role}}                                              Sign out                                          }                      @if (user) {        Home        dishes        events        persons        } @else {        Přihlásit se        }            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DefaultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DishAddIngredientModel.html":{"url":"interfaces/DishAddIngredientModel.html","title":"interface - DishAddIngredientModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DishAddIngredientModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/dish.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amout\n                                        \n                                \n                                \n                                        \n                                            dishId\n                                        \n                                \n                                \n                                        \n                                            ingredientId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dishId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dishId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredientId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DishDetail {\n    id: string;\n    name: string;\n    description: string;\n    ingredients:IngredientDishDetail[]|undefined;\n}\n\nexport interface DishCreate {\n    name: string;\n    description:string;\n}\n\nexport interface IngredientDishDetail {\n    id:string,\n    ingredientId:string;\n    name: string;\n    amount:number;\n    price:number;\n    priceForUnit:number;\n}\n\nexport interface DishAddIngredientModel{\n  dishId:string;\n  ingredientId:string;\n  amout:number;\n}\n\nexport interface DishIngredientModel{\n  dishId:string;\n  ingredientId:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DishCreate.html":{"url":"interfaces/DishCreate.html","title":"interface - DishCreate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DishCreate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/dish.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DishDetail {\n    id: string;\n    name: string;\n    description: string;\n    ingredients:IngredientDishDetail[]|undefined;\n}\n\nexport interface DishCreate {\n    name: string;\n    description:string;\n}\n\nexport interface IngredientDishDetail {\n    id:string,\n    ingredientId:string;\n    name: string;\n    amount:number;\n    price:number;\n    priceForUnit:number;\n}\n\nexport interface DishAddIngredientModel{\n  dishId:string;\n  ingredientId:string;\n  amout:number;\n}\n\nexport interface DishIngredientModel{\n  dishId:string;\n  ingredientId:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DishDetail.html":{"url":"interfaces/DishDetail.html","title":"interface - DishDetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DishDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/dish.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ingredients\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredients:     IngredientDishDetail[] | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IngredientDishDetail[] | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DishDetail {\n    id: string;\n    name: string;\n    description: string;\n    ingredients:IngredientDishDetail[]|undefined;\n}\n\nexport interface DishCreate {\n    name: string;\n    description:string;\n}\n\nexport interface IngredientDishDetail {\n    id:string,\n    ingredientId:string;\n    name: string;\n    amount:number;\n    price:number;\n    priceForUnit:number;\n}\n\nexport interface DishAddIngredientModel{\n  dishId:string;\n  ingredientId:string;\n  amout:number;\n}\n\nexport interface DishIngredientModel{\n  dishId:string;\n  ingredientId:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DishIngredientModel.html":{"url":"interfaces/DishIngredientModel.html","title":"interface - DishIngredientModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DishIngredientModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/dish.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dishId\n                                        \n                                \n                                \n                                        \n                                            ingredientId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dishId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dishId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredientId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DishDetail {\n    id: string;\n    name: string;\n    description: string;\n    ingredients:IngredientDishDetail[]|undefined;\n}\n\nexport interface DishCreate {\n    name: string;\n    description:string;\n}\n\nexport interface IngredientDishDetail {\n    id:string,\n    ingredientId:string;\n    name: string;\n    amount:number;\n    price:number;\n    priceForUnit:number;\n}\n\nexport interface DishAddIngredientModel{\n  dishId:string;\n  ingredientId:string;\n  amout:number;\n}\n\nexport interface DishIngredientModel{\n  dishId:string;\n  ingredientId:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DishService.html":{"url":"injectables/DishService.html","title":"injectable - DishService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DishService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/dish.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Private\n                                dishes\n                            \n                            \n                                dishes$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                AddIngredientToDish\n                            \n                            \n                                CreateDish\n                            \n                            \n                                generatePatch\n                            \n                            \n                                PatchDish\n                            \n                            \n                                patchIngredientDish\n                            \n                            \n                                RemoveDish\n                            \n                            \n                                removeIngredientFromDish\n                            \n                            \n                                UpdateDishes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/dish.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        AddIngredientToDish\n                        \n                    \n                \n            \n            \n                \nAddIngredientToDish(model: DishAddIngredientModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            DishAddIngredientModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreateDish\n                        \n                    \n                \n            \n            \n                \nCreateDish(data: DishCreate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            DishCreate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatePatch\n                        \n                    \n                \n            \n            \n                \ngeneratePatch(updated: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:70\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updated\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatchDish\n                        \n                    \n                \n            \n            \n                \nPatchDish(id: string | undefined, patch: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patch\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patchIngredientDish\n                        \n                    \n                \n            \n            \n                \npatchIngredientDish(id: string, patch: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patch\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RemoveDish\n                        \n                    \n                \n            \n            \n                \nRemoveDish(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeIngredientFromDish\n                        \n                    \n                \n            \n            \n                \nremoveIngredientFromDish(model: DishIngredientModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            DishIngredientModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateDishes\n                        \n                    \n                \n            \n            \n                \nUpdateDishes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/dish.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"/api/v1/Dish\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dish.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dishes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dish.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dishes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.dishes.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/dish.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DishAddIngredientModel, DishIngredientModel, IngredientDishDetail } from './../models/dish.interface';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, generate, Observable, ReplaySubject } from 'rxjs';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { DishCreate, DishDetail } from '../models/dish.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DishService {\n  protected readonly baseUrl = \"/api/v1/Dish\"\n    private dishes = new BehaviorSubject([]);\n    dishes$ = this.dishes.asObservable();\n\n\n  constructor(private httpClient: HttpClient) {\n    this.UpdateDishes()\n   }\n\n   PatchDish(id:string|undefined,patch:Partial) {\n\n    const url = `${this.baseUrl}/${id}`;\n    return this.httpClient.patch(url,this.generatePatch(patch))\n  }\n\n  UpdateDishes(){\n    const url = this.baseUrl;\n    this.httpClient.get(url)\n    .subscribe(x=>{this.dishes.next(x)});\n  }\n\n  AddIngredientToDish(model:DishAddIngredientModel){\n    const url = `${this.baseUrl}/AddIngredientToDish`;\n    this.httpClient.post(url,model).subscribe({\n      next: (response) => {this.UpdateDishes(),console.log(response)},\n      error: (error) => console.error(error)\n    });\n  }\n\n  patchIngredientDish(id:string,patch:Partial){\n    const url = `${this.baseUrl}/UpdateIngredientDish/${id}`;\n    this.httpClient.patch(url,this.generatePatch(patch))\n    .subscribe({\n      next: (response) => {this.UpdateDishes()},\n      error: (error) => console.error('Error:', error)\n    })\n  }\n\n  removeIngredientFromDish(model:DishIngredientModel){\n    const url = `${this.baseUrl}/RemoveIngredientFromDish`;\n    this.httpClient.post(url,model).subscribe({\n      next: (response) => {this.UpdateDishes(),console.log(response)},\n      error: (error) => console.error(error)\n    });\n  }\n\n  CreateDish(data:DishCreate):Observable{\n    const url = this.baseUrl;\n    return this.httpClient.post(url,data)\n  }\n\n  RemoveDish(id: string): void {\n    const url = `${this.baseUrl}/${id}`;\n    this.httpClient.delete(url).subscribe({\n      next: (response) => {this.UpdateDishes(),console.log(response)},\n      error: (error) => console.error(error)\n    });\n  }\n\n  generatePatch(updated: Partial): any[] {\n    const patch: any[] = [];\n\n    Object.keys(updated).forEach((key) => {\n\n        patch.push({\n          op: 'replace',\n          path: `${key}`,\n          value: (updated as any)[key],\n        });\n\n    });\n\n    return patch;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EditService.html":{"url":"injectables/EditService.html","title":"injectable - EditService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EditService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/Edit.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendarMonth\n                            \n                            \n                                calendarYear\n                            \n                            \n                                    Private\n                                EditDishId\n                            \n                            \n                                EditDishId$\n                            \n                            \n                                    Private\n                                editEventId\n                            \n                            \n                                EditEventId$\n                            \n                            \n                                    Private\n                                editPersonId\n                            \n                            \n                                editPersonId$\n                            \n                            \n                                openDishCreate\n                            \n                            \n                                openEventCreate\n                            \n                            \n                                openPersonCreate\n                            \n                            \n                                    Private\n                                returnUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDishEdit\n                            \n                            \n                                closeEventEdit\n                            \n                            \n                                closePersonEdit\n                            \n                            \n                                openDishCreateModal\n                            \n                            \n                                openDishEditModal\n                            \n                            \n                                openEventCreateModal\n                            \n                            \n                                openEventEditModal\n                            \n                            \n                                openPersonCreateModal\n                            \n                            \n                                openPersonEditModal\n                            \n                            \n                                popReturnUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDishEdit\n                        \n                    \n                \n            \n            \n                \ncloseDishEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeEventEdit\n                        \n                    \n                \n            \n            \n                \ncloseEventEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closePersonEdit\n                        \n                    \n                \n            \n            \n                \nclosePersonEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDishCreateModal\n                        \n                    \n                \n            \n            \n                \nopenDishCreateModal(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDishEditModal\n                        \n                    \n                \n            \n            \n                \nopenDishEditModal(dishId: string, url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dishId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEventCreateModal\n                        \n                    \n                \n            \n            \n                \nopenEventCreateModal(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEventEditModal\n                        \n                    \n                \n            \n            \n                \nopenEventEditModal(eventId: string, url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eventId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPersonCreateModal\n                        \n                    \n                \n            \n            \n                \nopenPersonCreateModal(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPersonEditModal\n                        \n                    \n                \n            \n            \n                \nopenPersonEditModal(personId: string, url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                personId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        popReturnUrl\n                        \n                    \n                \n            \n            \n                \npopReturnUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Edit.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendarMonth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : new Date().getMonth()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calendarYear\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        EditDishId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EditDishId$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.EditDishId.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editEventId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EditEventId$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.editEventId.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editPersonId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editPersonId$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.editPersonId.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDishCreate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEventCreate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPersonCreate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Edit.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { PersonCreateModel } from '../models/person.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditService {\n  calendarMonth:number=new Date().getMonth();\n  calendarYear:number=new Date().getFullYear();\n\n  private editPersonId= new BehaviorSubject(null);\n  editPersonId$ = this.editPersonId.asObservable();\n\n  private editEventId= new BehaviorSubject(null);\n  EditEventId$ = this.editEventId.asObservable();\n\n  private EditDishId= new BehaviorSubject(null);\n  EditDishId$ = this.EditDishId.asObservable();\n\n  private returnUrl:any;\n  \n  openPersonCreate = false\n  openEventCreate = false\n  openDishCreate = false\n\n  openPersonEditModal(personId: string, url:string) {\n    this.returnUrl = url\n    this.editPersonId.next(personId);\n  }\n\n  openDishEditModal(dishId: string, url:string) {\n    this.returnUrl = url\n    this.EditDishId.next(dishId);\n  }\n\n  openEventEditModal(eventId: string, url:string) {\n    this.returnUrl = url    \n    this.editEventId.next(eventId);\n  }\n\n  closePersonEdit(){\n    this.editPersonId.next(null)\n  }\n\n  closeDishEdit(){\n    this.EditDishId.next(null)\n  }\n\n  closeEventEdit(){\n    this.editEventId.next(null)\n  }\n\n  openPersonCreateModal(url:string){\n    this.openPersonCreate = true\n    this.returnUrl = url\n  }\n  \n  openDishCreateModal(url:string){\n    this.openDishCreate = true\n    this.returnUrl = url\n  }\n\n  openEventCreateModal(url:string){\n    this.openEventCreate = true\n    this.returnUrl = url\n  }\n\n  popReturnUrl(){\n    var url = this.returnUrl;\n    this.returnUrl = null\n    return url;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventCreateModel.html":{"url":"interfaces/EventCreateModel.html","title":"interface - EventCreateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventCreateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/event.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            end\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            place\n                                        \n                                \n                                \n                                        \n                                            responsiblePersonId\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        place\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        place:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        responsiblePersonId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        responsiblePersonId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DishDetail } from \"./dish.interface\";\nimport { PersonDetailModel, SmallPersonDetailModel } from \"./person.interface\";\n\nexport interface EventCreateModel {\n  name: string;\n  description: string;\n  place: string;\n  responsiblePersonId: string; // UUID format\n  start: string; // ISO 8601 date-time format\n  end: string; // ISO 8601 date-time format\n}\n\nexport interface EventDetailModel {\n  id: string; // UUID format\n  responsiblePerson: SmallPersonDetailModel | null;\n  participants: PersonDetailModel[];\n  dishes: DishDetail[];\n  name: string;\n  description: string;\n  place: string;\n  start: string; // ISO 8601 date-time format\n  end: string; // ISO 8601 date-time format\n  rowInGrid?:number|null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventDetailModel.html":{"url":"interfaces/EventDetailModel.html","title":"interface - EventDetailModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventDetailModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/event.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            dishes\n                                        \n                                \n                                \n                                        \n                                            end\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            participants\n                                        \n                                \n                                \n                                        \n                                            place\n                                        \n                                \n                                \n                                        \n                                            responsiblePerson\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rowInGrid\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dishes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dishes:         DishDetail[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DishDetail[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        participants\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        participants:         PersonDetailModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PersonDetailModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        place\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        place:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        responsiblePerson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        responsiblePerson:     SmallPersonDetailModel | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SmallPersonDetailModel | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowInGrid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rowInGrid:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DishDetail } from \"./dish.interface\";\nimport { PersonDetailModel, SmallPersonDetailModel } from \"./person.interface\";\n\nexport interface EventCreateModel {\n  name: string;\n  description: string;\n  place: string;\n  responsiblePersonId: string; // UUID format\n  start: string; // ISO 8601 date-time format\n  end: string; // ISO 8601 date-time format\n}\n\nexport interface EventDetailModel {\n  id: string; // UUID format\n  responsiblePerson: SmallPersonDetailModel | null;\n  participants: PersonDetailModel[];\n  dishes: DishDetail[];\n  name: string;\n  description: string;\n  place: string;\n  start: string; // ISO 8601 date-time format\n  end: string; // ISO 8601 date-time format\n  rowInGrid?:number|null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EventPipe.html":{"url":"pipes/EventPipe.html","title":"pipe - EventPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EventPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/event.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        event\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(event: EventDetailModel, args?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/event.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            EventDetailModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { EventDetailModel } from '../models/event.interface';\n\n@Pipe({\n  name: 'event',\n  standalone:true\n})\nexport class EventPipe implements PipeTransform {\n\n  transform(event: EventDetailModel, args?: string): any {\n    switch(args){\n      case \"startDate\":{\n        const date = new Date(event.start)\n        return new Date(date.getFullYear(),date.getMonth(),date.getDate(),1);\n      }\n      case \"endDate\":{\n        const date = new Date(event.end)\n        return new Date(date.getFullYear(),date.getMonth(),date.getDate(),1);\n      }\n      default:{\n        return event.name\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventService.html":{"url":"injectables/EventService.html","title":"injectable - EventService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/event.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Protected\n                                events\n                            \n                            \n                                events$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDishToEvent\n                            \n                            \n                                addPersonToEvent\n                            \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                generatePatch\n                            \n                            \n                                Patch\n                            \n                            \n                                removeDishFromEvent\n                            \n                            \n                                removePersonFromEvent\n                            \n                            \n                                updateEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/event.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addDishToEvent\n                        \n                    \n                \n            \n            \n                \naddDishToEvent(id: string, dishId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dishId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addPersonToEvent\n                        \n                    \n                \n            \n            \n                \naddPersonToEvent(id: string, personId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                personId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(model: EventCreateModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            EventCreateModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatePatch\n                        \n                    \n                \n            \n            \n                \ngeneratePatch(updated: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:69\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updated\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Patch\n                        \n                    \n                \n            \n            \n                \nPatch(id: string, model: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                model\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeDishFromEvent\n                        \n                    \n                \n            \n            \n                \nremoveDishFromEvent(id: string, dishId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dishId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePersonFromEvent\n                        \n                    \n                \n            \n            \n                \nremovePersonFromEvent(id: string, personId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                personId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEvents\n                        \n                    \n                \n            \n            \n                \nupdateEvents()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/event.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"/api/v1/Event\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/event.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        events\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/event.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        events$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.events.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/event.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EventCreateModel, EventDetailModel } from './../models/event.interface';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  protected readonly baseUrl = \"/api/v1/Event\"\n  protected events = new BehaviorSubject([])\n  events$ = this.events.asObservable()\n\n  constructor(private httpClient: HttpClient) {\n    this.updateEvents()\n  }\n\n  updateEvents(){\n    this.httpClient.get(this.baseUrl)\n    .subscribe(x =>{\n      console.log(x)\n      x.map(y => {\n        y.start = new Date(y.start).toISOString().split('T')[0]\n        y.end = new Date(y.end).toISOString().split('T')[0]\n        return y;\n      })\n      this.events.next(x)\n    })\n  }\n\n  delete(id:string){\n    return this.httpClient.delete(`${this.baseUrl}/${id}`)\n  }\n\n  create(model:EventCreateModel){\n    return this.httpClient.post(`${this.baseUrl}`,model)\n  }\n\n  Patch(id:string,model:Partial){\n    const url = `${this.baseUrl}/${id}`;\n    return this.httpClient.patch(url,this.generatePatch(model))\n  }\n\n\n  addPersonToEvent(id: string, personId: string) {\n    const url = `${this.baseUrl}/AddPersonToEvent/${id}/${personId}`;\n    return this.httpClient.get(url)\n  }\n\n  removePersonFromEvent(id: string, personId: string) {\n    const url = `${this.baseUrl}/RemovePersonFromEvent/${id}/${personId}`;\n    return this.httpClient.delete(url)\n  }\n\n  addDishToEvent(id: string, dishId: string) {\n    const url = `${this.baseUrl}/AddDishToEvent/${id}/${dishId}`;\n    return this.httpClient.get(url)\n  }\n\n  removeDishFromEvent(id: string, dishId: string) {\n    const url = `${this.baseUrl}/RemoveDishFromEvent/${id}/${dishId}`;\n    return this.httpClient.delete(url)\n  }\n\n\n\n\n\n  generatePatch(updated: Partial): any[] {\n    const patch: any[] = [];\n\n    Object.keys(updated).forEach((key) => {\n\n        patch.push({\n          op: 'replace',\n          path: `${key}`,\n          value: (updated as any)[key],\n        });\n\n    });\n\n    return patch;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FoodPageComponent.html":{"url":"components/FoodPageComponent.html","title":"component - FoodPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FoodPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/food-page/food-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ingredient-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                DishListComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./food-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./food-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { DishListComponent } from '../../components/dish-list/dish-list.component';\n\n\n@Component({\n  selector: 'app-ingredient-page',\n  standalone: true,\n  imports: [\n    DishListComponent,\n  ],\n  templateUrl: './food-page.component.html',\n  styleUrl: './food-page.component.scss'\n})\nexport class FoodPageComponent {\n\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FoodPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePageComponent.html":{"url":"components/HomePageComponent.html","title":"component - HomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home-page/home-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            DatePipe\n                            PersonPipe\n                            EventPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendar\n                            \n                            \n                                currentMonth\n                            \n                            \n                                currentYear\n                            \n                            \n                                    Private\n                                editService\n                            \n                            \n                                events\n                            \n                            \n                                    Private\n                                eventService\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                today\n                            \n                            \n                                viewDay\n                            \n                            \n                                viewEventDetail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEventsToDays\n                            \n                            \n                                dayBeforeBreak\n                            \n                            \n                                eventOnDate\n                            \n                            \n                                filterEvents\n                            \n                            \n                                generateCalendar\n                            \n                            \n                                getCalendarGrid\n                            \n                            \n                                nextMonth\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openEventCreate\n                            \n                            \n                                openEventEdit\n                            \n                            \n                                previusMonth\n                            \n                            \n                                putDayToView\n                            \n                            \n                                putEventToView\n                            \n                            \n                                stringToColor\n                            \n                            \n                                stringToDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEventsToDays\n                        \n                    \n                \n            \n            \n                \naddEventsToDays()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dayBeforeBreak\n                        \n                    \n                \n            \n            \n                \ndayBeforeBreak(week: KeyValue[], index: number, event: EventDetailModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:209\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                week\n                                            \n                                                        KeyValue[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            EventDetailModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eventOnDate\n                        \n                    \n                \n            \n            \n                \neventOnDate(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterEvents\n                        \n                    \n                \n            \n            \n                \nfilterEvents(events: (EventDetailModel)[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                events\n                                            \n                                                            (EventDetailModel)[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateCalendar\n                        \n                    \n                \n            \n            \n                \ngenerateCalendar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCalendarGrid\n                        \n                    \n                \n            \n            \n                \ngetCalendarGrid(year: number, month: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                year\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                month\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [][]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextMonth\n                        \n                    \n                \n            \n            \n                \nnextMonth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEventCreate\n                        \n                    \n                \n            \n            \n                \nopenEventCreate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:186\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEventEdit\n                        \n                    \n                \n            \n            \n                \nopenEventEdit(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:191\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previusMonth\n                        \n                    \n                \n            \n            \n                \npreviusMonth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putDayToView\n                        \n                    \n                \n            \n            \n                \nputDayToView(day: KeyValue)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                day\n                                            \n                                                        KeyValue\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putEventToView\n                        \n                    \n                \n            \n            \n                \nputEventToView(eventId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:181\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eventId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColor\n                        \n                    \n                \n            \n            \n                \nstringToColor(input: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:196\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToDate\n                        \n                    \n                \n            \n            \n                \nstringToDate(dt: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home-page/home-page.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     KeyValue[][]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentMonth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.editService.calendarMonth\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentYear\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.editService.calendarYear\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EditService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        events\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventDetailModel[]\n\n                    \n                \n                \n                    \n                        Default value : [{} as EventDetailModel]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        eventService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EventService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(this.currentYear, this.currentMonth,new Date().getDate(),1)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     KeyValue | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewEventDetail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EventDetailModel | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home-page/home-page.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { EventService } from '../../services/event.service';\nimport { DatePipe, KeyValue } from '@angular/common';\nimport { EventDetailModel } from '../../models/event.interface';\nimport { PersonPipe } from '../../pipes/person.pipe';\nimport { EventPipe } from '../../pipes/event.pipe';\nimport { EditService } from '../../services/Edit.service';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-home-page',\n  standalone: true,\n  imports: [DatePipe,PersonPipe,EventPipe],\n  templateUrl: './home-page.component.html',\n  styleUrl: './home-page.component.scss'\n})\n\nexport class HomePageComponent {\n  private eventService = inject(EventService)\n  private editService = inject(EditService)\n  private router=inject(Router)\n\n  events:EventDetailModel[] = [{} as EventDetailModel];\n  viewEventDetail:EventDetailModel|undefined;\n  viewDay:KeyValue|undefined;\n\n  calendar:KeyValue[][] = [];\n\n  currentMonth=this.editService.calendarMonth\n  currentYear=this.editService.calendarYear\n  \n  today=new Date(this.currentYear, this.currentMonth,new Date().getDate(),1);\n\n\n  ngOnInit(){\n    this.today.setHours(1)\n    this.generateCalendar()\n    \n    var todayPair\n    this.calendar.forEach(x =>\n      {\n        var d = x.find(y => y.key.getTime() == this.today.getTime())\n        if(d!=undefined) todayPair = d\n      });\n    this.putDayToView(todayPair!);\n  }\n\n  generateCalendar(){\n    this.calendar=this.getCalendarGrid(this.editService.calendarYear,this.editService.calendarMonth)\n    this.eventService.events$.subscribe(\n      x => \n      {\n        this.events = x.filter(y => this.calendar.some(z => z.some(a => a.key.getTime() == this.stringToDate(y.start).getTime()|| a.key.getTime() == this.stringToDate(y.end).getTime())))\n        .sort((a) => this.stringToDate(a.start).getTime());\n        this.addEventsToDays()\n      }\n    )\n  }\n\n  addEventsToDays(){\n    this.calendar.map(\n      x => {\n        x.map( \n          y => {\n            y.value=this.eventOnDate(y.key)\n          }\n        )\n      }\n    )\n  }\n\n  getCalendarGrid(year: number, month: number): KeyValue[][] {\n    const firstDayOfMonth = new Date(year, month, 1);\n    const lastDayOfMonth = new Date(year, month + 1, 0);\n    \n    let startWeekday = firstDayOfMonth.getDay(); // 0 (Sunday) - 6 (Saturday)\n\n    // Adjust so Monday = 0, ..., Sunday = 6\n    startWeekday = (startWeekday === 0) ? 6 : startWeekday - 1;\n\n    const daysInMonth = lastDayOfMonth.getDate();\n    const weeks: KeyValue[][] = [];\n    let currentWeek: KeyValue[] = [];\n\n    // Fill days before the first of the month with placeholders from the previous month\n    for (let i = startWeekday; i > 0; i--) {\n      currentWeek.push({key:new Date(year, month, 1 - i,1),value:undefined});\n    }\n\n    // Fill in the days of the month\n    for (let day = 1; day  {\n          return this.stringToDate(event.start).getTime()  this.stringToDate(a.start).getTime() - this.stringToDate(b.start).getTime()); // Sort by start time\n    \n    const rowsFull=[1];\n    events.forEach(x=>{\n      if(x.rowInGrid) rowsFull.push(x.rowInGrid)\n    })  \n  \n    const mapedEvents = [...events].map(x=>{\n        if(x.rowInGrid == undefined) {\n          const firstEmpty = [1,2,3,4].filter(x=>!rowsFull.includes(x))[0];\n          if(firstEmpty==undefined){\n            this.events.find(y=>y.id==x.id)!.rowInGrid = null\n            console.log(\"delll\")\n          }\n          else{\n            this.events.find(y=>y.id==x.id)!.rowInGrid = firstEmpty\n            rowsFull.push(firstEmpty)\n          }\n        }\n        return x\n    });\n    return mapedEvents.sort(x=>x.rowInGrid!);\n  }\n\n  filterEvents(events:(EventDetailModel)[]){\n    return events.filter(x=>x.rowInGrid != null)\n  }\n\n  putDayToView(day:KeyValue){\n    this.viewEventDetail = undefined;\n    this.viewDay = day\n  }\n\n  putEventToView(eventId:string){\n    this.viewDay = undefined;\n    this.viewEventDetail = this.events.find(x=>x.id==eventId)!;\n  }\n\n  openEventCreate(){\n    this.editService.openEventCreateModal(this.router.url);\n    this.router.navigate(['/events'])\n  }\n  \n  openEventEdit(id:string){\n    this.editService.openEventEditModal(id,this.router.url);\n    this.router.navigate(['/events'])\n  }\n\n  stringToColor(input: string): string {\n  let hash = 0;\n  \n  // Generate a hash code from the string\n  for (let i = 0; i [],index:number,event:EventDetailModel):boolean{\n   \n  var dayBefore:any\n  if(index != 0) dayBefore = week[index-1]\n  else if(this.calendar.indexOf(week) == 0) return true\n  else dayBefore = this.calendar[this.calendar.indexOf(week)-1][6]\n\n  return dayBefore.value!.includes(event) && !dayBefore.value!.slice(0,3).includes(event);\n}\n}\n\n    \n\n    \n        \n  \n    Upcoming events on {{currentMonth+1}}. {{currentYear}}\n    @if(viewDay||viewEventDetail){\n      Detail view\n    }\n    @if(viewEventDetail){\n      \n        \n      \n    }\n  \n  \n  \n  \n    \n      \n      \n        \n        @for(week of calendar[0]; track week.key){\n          {{ week.key| date:\"E\" }}\n        }\n      \n      >\n    \n        \n      \n      @for(week of calendar; track week){\n        @for(day of week; track day.key){\n           \n            \n              {{ day.key | date:\"d.\" }}\n              @if(day.value!.length > 3){\n                +{{day.value!.length-3}}\n              }\n            \n          \n            \n            @for(event of day.value?.slice(0,3); track event.id){\n              @let eventStart = event|event:\"startDate\";\n              @let eventEnd = event|event:\"endDate\";\n              @let eventColor = stringToColor((event.start+(event.rowInGrid!/4)));\n              \n                @if(dayBeforeBreak(week,week.indexOf(day),event)){\n                  \n                }\n                \n                    {{ event.name }}\n                \n              \n            }\n          \n        }\n      }\n    \n  \n  @if(viewDay || viewEventDetail){\n  \n    @if(viewDay){\n      \n        Events on {{viewDay.key | date:\"fullDate\"}} \n        x\n      \n        \n          @for(event of viewDay.value; track event.id){\n              @let eventColor = stringToColor((event.start+(event.rowInGrid!/4)));\n              \n                \n                    {{ event.name }}\n                \n              \n          }\n          @if(viewDay.value?.length == 0){\n            No events on this day\n          }\n           \n                \n                    Add new Event\n                \n              \n      \n    }\n    @if(viewEventDetail != undefined){\n      \n        {{viewEventDetail.name}}\n        x\n      \n      \n        place: \n        {{(viewEventDetail.place)}}\n      \n      \n        Description:\n        {{viewEventDetail.description}}\n      \n      \n        Starts on: \n        {{viewEventDetail.start | date:\"fullDate\"}}\n      \n      \n        Ends on: \n        {{viewEventDetail.end | date:\"fullDate\"}}\n      \n      \n        Person responsible: \n        {{(viewEventDetail.responsiblePerson! | person:\"fullName\")}}\n      \n      \n        Number of Participants: \n        {{(viewEventDetail.participants.length)}}\n      \n    }\n  \n}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Upcoming events on {{currentMonth+1}}. {{currentYear}}    @if(viewDay||viewEventDetail){      Detail view    }    @if(viewEventDetail){                        }                                        @for(week of calendar[0]; track week.key){          {{ week.key| date:\"E\" }}        }            >                        @for(week of calendar; track week){        @for(day of week; track day.key){                                     {{ day.key | date:\"d.\" }}              @if(day.value!.length > 3){                +{{day.value!.length-3}}              }                                              @for(event of day.value?.slice(0,3); track event.id){              @let eventStart = event|event:\"startDate\";              @let eventEnd = event|event:\"endDate\";              @let eventColor = stringToColor((event.start+(event.rowInGrid!/4)));                              @if(dayBeforeBreak(week,week.indexOf(day),event)){                                  }                                    {{ event.name }}                                          }                  }      }        @if(viewDay || viewEventDetail){      @if(viewDay){              Events on {{viewDay.key | date:\"fullDate\"}}         x                        @for(event of viewDay.value; track event.id){              @let eventColor = stringToColor((event.start+(event.rowInGrid!/4)));                                                  {{ event.name }}                                        }          @if(viewDay.value?.length == 0){            No events on this day          }                                               Add new Event                                        }    @if(viewEventDetail != undefined){              {{viewEventDetail.name}}        x                    place:         {{(viewEventDetail.place)}}                    Description:        {{viewEventDetail.description}}                    Starts on:         {{viewEventDetail.start | date:\"fullDate\"}}                    Ends on:         {{viewEventDetail.end | date:\"fullDate\"}}                    Person responsible:         {{(viewEventDetail.responsiblePerson! | person:\"fullName\")}}                    Number of Participants:         {{(viewEventDetail.participants.length)}}          }  }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IngredientCreate.html":{"url":"interfaces/IngredientCreate.html","title":"interface - IngredientCreate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IngredientCreate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ingredient.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            priceforunit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priceforunit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priceforunit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IngredientCreate {\n    name: string;\n    priceforunit: number\n}\n\nexport interface IngredientDetail {\n    id: string;\n    name: string;\n    priceForUnit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IngredientDetail.html":{"url":"interfaces/IngredientDetail.html","title":"interface - IngredientDetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IngredientDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ingredient.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            priceForUnit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priceForUnit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priceForUnit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IngredientCreate {\n    name: string;\n    priceforunit: number\n}\n\nexport interface IngredientDetail {\n    id: string;\n    name: string;\n    priceForUnit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IngredientDishDetail.html":{"url":"interfaces/IngredientDishDetail.html","title":"interface - IngredientDishDetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IngredientDishDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/dish.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ingredientId\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            priceForUnit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredientId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priceForUnit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priceForUnit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DishDetail {\n    id: string;\n    name: string;\n    description: string;\n    ingredients:IngredientDishDetail[]|undefined;\n}\n\nexport interface DishCreate {\n    name: string;\n    description:string;\n}\n\nexport interface IngredientDishDetail {\n    id:string,\n    ingredientId:string;\n    name: string;\n    amount:number;\n    price:number;\n    priceForUnit:number;\n}\n\nexport interface DishAddIngredientModel{\n  dishId:string;\n  ingredientId:string;\n  amout:number;\n}\n\nexport interface DishIngredientModel{\n  dishId:string;\n  ingredientId:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IngredientService.html":{"url":"injectables/IngredientService.html","title":"injectable - IngredientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IngredientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/ingredient.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Private\n                                ingredients\n                            \n                            \n                                ingredients$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createIngredient\n                            \n                            \n                                generatePatch\n                            \n                            \n                                PatchIngredient\n                            \n                            \n                                removeIngredient\n                            \n                            \n                                UpdateIngredients\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/ingredient.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createIngredient\n                        \n                    \n                \n            \n            \n                \ncreateIngredient(data: IngredientCreate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ingredient.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            IngredientCreate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatePatch\n                        \n                    \n                \n            \n            \n                \ngeneratePatch(updated: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ingredient.service.ts:41\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updated\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PatchIngredient\n                        \n                    \n                \n            \n            \n                \nPatchIngredient(id: string | undefined, patch: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ingredient.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patch\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeIngredient\n                        \n                    \n                \n            \n            \n                \nremoveIngredient(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ingredient.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateIngredients\n                        \n                    \n                \n            \n            \n                \nUpdateIngredients()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ingredient.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"/api/v1/ingredient\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/ingredient.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/ingredient.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredients$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.ingredients.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/ingredient.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { IngredientCreate, IngredientDetail } from '../models/ingredient.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IngredientService {\n  protected readonly baseUrl = \"/api/v1/ingredient\"\n    private ingredients = new BehaviorSubject([]);\n    ingredients$ = this.ingredients.asObservable();\n\n\n  constructor(private httpClient: HttpClient) {\n    this.UpdateIngredients()\n   }\n\n   PatchIngredient(id:string|undefined,patch:Partial) {\n\n    const url = `${this.baseUrl}/${id}`;\n    return this.httpClient.patch(url,this.generatePatch(patch))\n  }\n\n  UpdateIngredients(){\n    const url = this.baseUrl;\n    this.httpClient.get(url)\n    .subscribe(x=>{this.ingredients.next(x)})\n  }\n\n  createIngredient(data:IngredientCreate){\n    const url = this.baseUrl;\n    return this.httpClient.post(url,data)\n  }\n\n  removeIngredient(id: string) {\n    const url = `${this.baseUrl}/${id}`;\n    return this.httpClient.delete(url)\n  }\n\n  generatePatch(updated: Partial): any[] {\n    const patch: any[] = [];\n\n    Object.keys(updated).forEach((key) => {\n\n        patch.push({\n          op: 'replace',\n          path: `${key}`,\n          value: (updated as any)[key],\n        });\n\n    });\n\n    return patch;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginModel.html":{"url":"interfaces/LoginModel.html","title":"interface - LoginModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginModel {\n  email: string;\n  password: string;\n}\n\nexport interface TokenModel{\n  email:string;\n  token:string;\n}\n\nexport interface PasswordResetModel extends TokenModel{\n  password:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/login-page/login-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            RouterLink\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                authService\n                            \n                            \n                                    Protected\n                                    Readonly\n                                fb\n                            \n                            \n                                    Protected\n                                lastError$\n                            \n                            \n                                    Protected\n                                loginForm\n                            \n                            \n                                    Protected\n                                resetForm\n                            \n                            \n                                resetingPassword\n                            \n                            \n                                    Protected\n                                    Readonly\n                                router\n                            \n                            \n                                    Protected\n                                sentReset\n                            \n                            \n                                    Protected\n                                    Readonly\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                            \n                                resetPassword\n                            \n                            \n                                toggleToResetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login-page/login-page.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login-page/login-page.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleToResetPassword\n                        \n                    \n                \n            \n            \n                \ntoggleToResetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login-page/login-page.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        lastError$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    email: new FormControl('', { nonNullable: true}),\n    password: new FormControl('', { nonNullable: true})\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        resetForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.fb.group({\n    resetEmail: new FormControl('', { nonNullable: true})\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetingPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        sentReset\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login-page/login-page.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { FormBuilder, FormControl, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router, RouterLink } from '@angular/router';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-login-page',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterLink,\n    ReactiveFormsModule,\n  ],\n  templateUrl: './login-page.component.html',\n  styleUrl: './login-page.component.scss'\n})\nexport class LoginPageComponent {\n  protected readonly fb = inject(FormBuilder);\n\n  protected readonly authService = inject(AuthService);\n  protected readonly userService = inject(UserService);\n\n  protected readonly router = inject(Router);\n\n  protected lastError$:any;\n  protected sentReset=false;\n\n  resetingPassword = false;\n\n  protected loginForm = this.fb.group({\n    email: new FormControl('', { nonNullable: true}),\n    password: new FormControl('', { nonNullable: true})\n  });\n  \n  protected resetForm = this.fb.group({\n    resetEmail: new FormControl('', { nonNullable: true})\n  });\n\n  onSubmit(): void {\n    const data = this.loginForm.getRawValue();\n\n    this.authService.login(data).subscribe({\n      next: () => {\n        this.lastError$ = null\n      },\n      error: (error) => {\n        this.lastError$ = error.error\n        console.log(this.lastError$)\n      }\n    });\n  }\n\n  toggleToResetPassword(){\n    this.resetingPassword = !this.resetingPassword;\n  }\n\n  resetPassword():void{\n    this.userService.changePassword(this.resetForm.getRawValue().resetEmail)\n    .subscribe(\n      {\n        next: (x) => {\n          this.lastError$ = null\n          this.sentReset=true          \n        },\n        error: (error) => {\n          this.lastError$ = error\n          console.log(this.lastError$)\n        }\n      }\n    )\n  }\n}\n\n    \n\n    \n        \n  \n    @if(!resetingPassword){\n      \n        Login\n        @if(authService.userInfoModel$|async;){\n          logged in \n            \n              \n            \n          \n        }\n      \n      \n        @if (lastError$ != null) {\n          \n            {{lastError$?.errors[\"error\"]}}\n          \n        }\n        \n          \n            Your email\n              @if(lastError$?.errors[\"Email\"] != null){\n                is required and needs to be a valid email address\n              }\n            \n            \n          \n          \n            Your password\n              @if(lastError$?.errors.Password != null){\n                is required\n              }\n            \n            \n          \n          Login\n          \n          Reset Password\n        \n      \n    }\n    @else {\n      \n        Reset password\n      \n        \n          \n          @if(sentReset){\n            Reset email sent, try checking your inbox and if you can't find it, check spelling and try again or conntact support\n          }\n          \n            Your email\n              @if(lastError$?.errors[\"Email\"] != null){\n                is required and needs to be a valid email address\n              }\n            \n            \n          \n          reset\n          Back\n        \n      }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if(!resetingPassword){              Login        @if(authService.userInfoModel$|async;){          logged in                                                         }                    @if (lastError$ != null) {                      {{lastError$?.errors[\"error\"]}}                  }                              Your email              @if(lastError$?.errors[\"Email\"] != null){                is required and needs to be a valid email address              }                                                        Your password              @if(lastError$?.errors.Password != null){                is required              }                                            Login                    Reset Password                  }    @else {              Reset password                                  @if(sentReset){            Reset email sent, try checking your inbox and if you can\\'t find it, check spelling and try again or conntact support          }                      Your email              @if(lastError$?.errors[\"Email\"] != null){                is required and needs to be a valid email address              }                                            reset          Back              }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundPageComponent.html":{"url":"components/NotFoundPageComponent.html","title":"component - NotFoundPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/errors/not-found-page/not-found-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./not-found-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./not-found-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-not-found',\n  imports: [RouterLink],\n  standalone: true,\n  templateUrl: './not-found-page.component.html',\n  styleUrl: './not-found-page.component.scss'\n})\nexport class NotFoundPageComponent {\n\n}\n\n    \n\n    \n        \n    404\n    Page Not Found\n    \n      Go Home\n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    404    Page Not Found          Go Home        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PasswordResetModel.html":{"url":"interfaces/PasswordResetModel.html","title":"interface - PasswordResetModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PasswordResetModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/auth.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            TokenModel\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginModel {\n  email: string;\n  password: string;\n}\n\nexport interface TokenModel{\n  email:string;\n  token:string;\n}\n\nexport interface PasswordResetModel extends TokenModel{\n  password:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PeoplePageComponent.html":{"url":"components/PeoplePageComponent.html","title":"component - PeoplePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PeoplePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/people-page/people-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-people-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                PersonsListComponent\n                                UserListComponent\n                            AsyncPipe\n                \n            \n\n            \n                styleUrls\n                ./people-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./people-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                user$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/people-page/people-page.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.authService.userInfoModel$\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/people-page/people-page.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { PersonsListComponent } from \"../../components/persons-list/persons-list.component\";\nimport { UserListComponent } from \"../../components/user-list/user-list.component\";\nimport { AuthService } from '../../services/auth.service';\nimport { AsyncPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-people-page',\n  standalone:true,\n  templateUrl: './people-page.component.html',\n  styleUrls: ['./people-page.component.scss'],\n  imports: [PersonsListComponent, UserListComponent,AsyncPipe]\n})\nexport class PeoplePageComponent{\n\n  protected user$ = this.authService.userInfoModel$;\n\n  constructor(private authService:AuthService) { }\n}\n\n    \n\n    \n        @let user = user$ | async;\n\n  \n    \n  \n  @if(user?.role == \"Admin\"){\n    \n      \n    \n  }\n\n\n\n    \n\n    \n                \n                    ./people-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@let user = user$ | async;          @if(user?.role == \"Admin\"){                }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PeoplePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PersonCreateModel.html":{"url":"interfaces/PersonCreateModel.html","title":"interface - PersonCreateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PersonCreateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/person.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            dateOfBirth\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            emailOfFather\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            emailOfMother\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fullNameOfFather\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fullNameOfMother\n                                        \n                                \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            nickname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phoneNumberOfFather\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phoneNumberOfMother\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateOfBirth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateOfBirth:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emailOfFather\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emailOfFather:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emailOfMother\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emailOfMother:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullNameOfFather\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullNameOfFather:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullNameOfMother\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullNameOfMother:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nickname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nickname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumberOfFather\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumberOfFather:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumberOfMother\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumberOfMother:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         PersonStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PersonStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PersonCreateModel {\n  firstName: string;\n  nickname:string;\n  lastName: string;\n  gender: boolean;\n  dateOfBirth: string; // ISO 8601 date format\n  active: boolean;\n  email?: string | null;\n  emailOfMother?: string | null;\n  emailOfFather?: string | null;\n  phoneNumberOfMother?: string | null;\n  phoneNumberOfFather?: string | null;\n  phoneNumber?: string | null;\n  fullNameOfMother?: string | null;\n  fullNameOfFather?: string | null;\n  status: PersonStatus;\n}\n\nexport interface SmallPersonDetailModel {\n  id: string; // UUID as a string\n  firstName: string;\n  nickname:string;\n  lastName: string;\n  gender: boolean;\n  dateOfBirth?: string | null; // ISO 8601 format\n  age?:number|null;\n  email?: string | null;\n  phoneNumber?: string | null;\n  active: boolean;\n  deleted: boolean;\n}\n\nexport interface PersonDetailModel extends SmallPersonDetailModel {\n  emailOfMother?: string | null;\n  emailOfFather?: string | null;\n  phoneNumberOfMother?: string | null;\n  phoneNumberOfFather?: string | null;\n  fullNameOfMother?: string | null;\n  fullNameOfFather?: string | null;\n  status: PersonStatus;\n}\n\nexport enum PersonStatus {\n  Other = 'other',\n  Child = 'child',\n  Instruktor = 'instruktor',\n  Leader = 'leader',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PersonDetailModel.html":{"url":"interfaces/PersonDetailModel.html","title":"interface - PersonDetailModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PersonDetailModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/person.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            SmallPersonDetailModel\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            emailOfFather\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            emailOfMother\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fullNameOfFather\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fullNameOfMother\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phoneNumberOfFather\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phoneNumberOfMother\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        emailOfFather\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emailOfFather:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emailOfMother\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emailOfMother:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullNameOfFather\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullNameOfFather:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullNameOfMother\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullNameOfMother:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumberOfFather\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumberOfFather:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumberOfMother\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumberOfMother:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         PersonStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PersonStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PersonCreateModel {\n  firstName: string;\n  nickname:string;\n  lastName: string;\n  gender: boolean;\n  dateOfBirth: string; // ISO 8601 date format\n  active: boolean;\n  email?: string | null;\n  emailOfMother?: string | null;\n  emailOfFather?: string | null;\n  phoneNumberOfMother?: string | null;\n  phoneNumberOfFather?: string | null;\n  phoneNumber?: string | null;\n  fullNameOfMother?: string | null;\n  fullNameOfFather?: string | null;\n  status: PersonStatus;\n}\n\nexport interface SmallPersonDetailModel {\n  id: string; // UUID as a string\n  firstName: string;\n  nickname:string;\n  lastName: string;\n  gender: boolean;\n  dateOfBirth?: string | null; // ISO 8601 format\n  age?:number|null;\n  email?: string | null;\n  phoneNumber?: string | null;\n  active: boolean;\n  deleted: boolean;\n}\n\nexport interface PersonDetailModel extends SmallPersonDetailModel {\n  emailOfMother?: string | null;\n  emailOfFather?: string | null;\n  phoneNumberOfMother?: string | null;\n  phoneNumberOfFather?: string | null;\n  fullNameOfMother?: string | null;\n  fullNameOfFather?: string | null;\n  status: PersonStatus;\n}\n\nexport enum PersonStatus {\n  Other = 'other',\n  Child = 'child',\n  Instruktor = 'instruktor',\n  Leader = 'leader',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PersonPipe.html":{"url":"pipes/PersonPipe.html","title":"pipe - PersonPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PersonPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/person.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        person\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(person: PersonDetailModel | SmallPersonDetailModel, format?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/person.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                person\n                                            \n                                                        PersonDetailModel | SmallPersonDetailModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                format\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { PersonDetailModel, SmallPersonDetailModel } from '../models/person.interface';\n\n@Pipe({\n  name: 'person',\n  standalone:true\n})\nexport class PersonPipe implements PipeTransform {\n\n  transform(person: PersonDetailModel|SmallPersonDetailModel, format?: string): any {\n    switch(format){\n      case \"fullName\":{\n         return `${person.firstName} ${person.nickname!=null?person.nickname:\"\"} ${person.lastName}`;\n      }\n      default :{\n        return person.firstName\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonService.html":{"url":"injectables/PersonService.html","title":"injectable - PersonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PersonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/person.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Private\n                                persons\n                            \n                            \n                                persons$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Create\n                            \n                            \n                                Delete\n                            \n                            \n                                generatePatch\n                            \n                            \n                                Patch\n                            \n                            \n                                updatePersons\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/person.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Create\n                        \n                    \n                \n            \n            \n                \nCreate(model: PersonCreateModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/person.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            PersonCreateModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Delete\n                        \n                    \n                \n            \n            \n                \nDelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/person.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatePatch\n                        \n                    \n                \n            \n            \n                \ngeneratePatch(model: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/person.service.ts:57\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Patch\n                        \n                    \n                \n            \n            \n                \nPatch(id: string, model: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/person.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                model\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePersons\n                        \n                    \n                \n            \n            \n                \nupdatePersons(unfiltred: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/person.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                unfiltred\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"/api/v1/Person\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/person.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        persons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/person.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persons$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.persons.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/person.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { PersonCreateModel, PersonDetailModel } from '../models/person.interface';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonService {\n  protected readonly baseUrl = \"/api/v1/Person\"\n  private persons = new BehaviorSubject([]);\n  persons$ = this.persons.asObservable();\n\n\n  constructor(private httpClient: HttpClient) {\n    this.updatePersons()\n   }\n\n  updatePersons(unfiltred:boolean=true){\n    var request =\n    unfiltred ?\n    this.httpClient.get(`${this.baseUrl}/unfiltred`):\n    this.httpClient.get(`${this.baseUrl}`);\n\n\n    request.subscribe(\n      x =>\n        {\n          this.persons.next(x.map(y =>\n            {\n              if(y.dateOfBirth==undefined) return y;\n              y.age =  new Date().getFullYear() - new Date(y.dateOfBirth).getFullYear();\n              y.dateOfBirth = new Date(y.dateOfBirth).toISOString().split('T')[0]\n              return y;\n            }\n          )\n          )\n        }\n    )\n  }\n\n  Delete(id:string){\n    return this.httpClient.delete(`${this.baseUrl}/${id}`)\n  }\n\n  Create(model:PersonCreateModel):Observable{\n    return this.httpClient.post(this.baseUrl,model);\n  }\n\n  Patch(id:string,model:Partial){\n    const url = `${this.baseUrl}/${id}`\n    var patch = this.generatePatch(model);\n    console.log(patch)\n    return this.httpClient.patch(url,patch)\n  }\n\n  generatePatch(model: Partial): any[] {\n    const patch: any[] = [];\n\n    Object.keys(model).forEach((key) => {\n\n        patch.push({\n          op: 'replace',\n          path: `${key}`,\n          value: (model as any)[key],\n        });\n\n    });\n\n    return patch;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PersonsListComponent.html":{"url":"components/PersonsListComponent.html","title":"component - PersonsListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PersonsListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/persons-list/persons-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-persons-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            AsyncPipe\n                            FormsModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./persons-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./persons-list.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeCreateModal\n                            \n                            \n                                activeEditModal\n                            \n                            \n                                CreatingPerson\n                            \n                            \n                                editingPerson$\n                            \n                            \n                                editingPersonBase\n                            \n                            \n                                editingPersonPage\n                            \n                            \n                                editService\n                            \n                            \n                                    Protected\n                                persons$\n                            \n                            \n                                personService\n                            \n                            \n                                router\n                            \n                            \n                                search\n                            \n                            \n                                searchIngredients\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeCreateModal\n                            \n                            \n                                closeEditModal\n                            \n                            \n                                create\n                            \n                            \n                                checkForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                normalizeString\n                            \n                            \n                                onBlur\n                            \n                            \n                                openCreateModal\n                            \n                            \n                                openEditModal\n                            \n                            \n                                refresh\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                            \n                                updateField\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/persons-list/persons-list.component.ts:40\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeCreateModal\n                        \n                    \n                \n            \n            \n                \ncloseCreateModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeEditModal\n                        \n                    \n                \n            \n            \n                \ncloseEditModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkForm\n                        \n                    \n                \n            \n            \n                \ncheckForm(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        normalizeString\n                        \n                    \n                \n            \n            \n                \nnormalizeString(ob: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ob\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBlur\n                        \n                    \n                \n            \n            \n                \nonBlur(field: string, isValid?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isValid\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openCreateModal\n                        \n                    \n                \n            \n            \n                \nopenCreateModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditModal\n                        \n                    \n                \n            \n            \n                \nopenEditModal(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateField\n                        \n                    \n                \n            \n            \n                \nupdateField(field: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/persons-list/persons-list.component.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeCreateModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activeEditModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreatingPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PersonCreateModel\n\n                    \n                \n                \n                    \n                        Default value : {gender:true,status:'other'} as PersonCreateModel\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingPerson$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PersonDetailModel\n\n                    \n                \n                \n                    \n                        Default value : {} as PersonDetailModel\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingPersonBase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PersonDetailModel\n\n                    \n                \n                \n                    \n                        Default value : JSON.parse(JSON.stringify(this.editingPerson$))\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingPersonPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EditService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        persons$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.personService.persons$\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        personService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PersonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchIngredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/persons-list/persons-list.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { PersonStatus } from './../../models/person.interface';\nimport { PersonService } from './../../services/person.service';\nimport { Component, inject, isStandalone } from '@angular/core';\nimport { PersonCreateModel, PersonDetailModel } from '../../models/person.interface';\nimport { AsyncPipe, CommonModule } from '@angular/common';\nimport { FormsModule, NgForm, ReactiveFormsModule } from '@angular/forms';\nimport { combineLatest } from 'rxjs';\nimport { EditService } from '../../services/Edit.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-persons-list',\n  standalone: true,\n  imports: [\n      CommonModule,\n      AsyncPipe,\n      FormsModule,\n    ReactiveFormsModule\n  ],\n  templateUrl: './persons-list.component.html',\n  styleUrl: './persons-list.component.scss'\n})\nexport class PersonsListComponent {\n  personService=inject(PersonService);\n  editService=inject(EditService)\n  router=inject(Router)\n  protected persons$= this.personService.persons$;\n\n  search:string = \"\";\n  searchIngredients:string = \"\";\n\n  editingPersonPage = 1;\n\n  activeEditModal=false\n  activeCreateModal=false\n\n  CreatingPerson:PersonCreateModel = {gender:true,status:'other'} as PersonCreateModel;\n\n  editingPerson$:PersonDetailModel = {} as PersonDetailModel;\n  editingPersonBase:PersonDetailModel  = JSON.parse(JSON.stringify(this.editingPerson$));\n\n  constructor() { \n  }\n\n  ngOnInit() {\n    this.editService.editPersonId$.subscribe(x=>{if(x!=null)this.openEditModal(x!)});\n    if(this.editService.openPersonCreate) this.openCreateModal();\n    this.editService.openPersonCreate = false\n  }\n\n  closeEditModal(){\n    this.editingPerson$= {} as PersonDetailModel\n    this.editingPersonBase = JSON.parse(JSON.stringify(this.editingPerson$))\n    this.activeEditModal=false;\n    this.refresh()\n    this.editService.closePersonEdit()\n    var url = this.editService.popReturnUrl()\n    console.log(url)\n    if(url) this.router.navigateByUrl(url);\n  }\n\n  openEditModal(id:string){\n    this.persons$.subscribe(x => this.editingPerson$ = x.find(y => y.id == id)!)\n    this.editingPersonBase = JSON.parse(JSON.stringify(this.editingPerson$))\n    this.activeEditModal = true\n    this.refresh()\n  }\n\n  closeCreateModal(){\n    this.CreatingPerson = {gender:true,status:'other'} as PersonCreateModel\n    this.activeCreateModal=false;\n    this.refresh()\n  }\n\n  checkForm(form: NgForm) {\n    if (form.invalid) {\n      Object.values(form.controls).forEach(control => {\n        control.markAsTouched();\n      });\n    }\n    else{\n      this.create()\n    }\n  }\n\n  openCreateModal(){\n    this.activeCreateModal = true\n    this.refresh()\n  }\n\n  refresh(){\n    this.personService.updatePersons()\n  }\n\n  update() {\n    const patch:Partial={};\n\n    console.log(this.editingPerson$,this.editingPersonBase)\n\n    Object.keys(this.editingPersonBase).forEach(\n      x =>\n        {\n          if(x!=\"id\")\n          {\n            if((this.editingPersonBase as any)[x] != (this.editingPerson$ as any)[x]){\n              (patch as any)[x] = (this.editingPerson$ as any)[x]\n            }\n          }\n        })\n    this.personService.Patch(this.editingPerson$.id,patch)\n    .subscribe(\n      x => this.refresh()\n    )\n  }\n\n  updateField(field: string) {\n    const patch: Partial = {};\n\n    if ((this.editingPersonBase as any)[field] !== (this.editingPerson$ as any)[field]) {\n      (patch as any)[field] = (this.editingPerson$ as any)[field];\n\n      this.personService.Patch(this.editingPerson$.id, patch)\n        .subscribe(() => this.refresh());\n    }\n  }\n\n  onBlur(field: string, isValid?: boolean) {\n    if (isValid) {\n      this.updateField(field);\n    }\n  }\n\n  remove(){\n    this.personService.Delete(this.editingPerson$.id)\n    .subscribe({\n      next:() =>\n        {\n          this.refresh()\n          this.closeEditModal()\n        },\n      error:x => {\n        alert(x.error.message)\n        this.refresh()\n        this.closeEditModal()\n      }\n      }\n    )\n  }\n\n  create() {\n    this.personService.Create(this.CreatingPerson)\n    .subscribe(\n      {\n        next:x=>{\n          var url = this.editService.popReturnUrl()\n          if(url) this.router.navigateByUrl(url);\n          this.closeCreateModal()\n        }\n      })\n  }\n\n  normalizeString(ob:string){\n    return ob.normalize().toUpperCase().replaceAll(' ', \"\").trim()\n  }\n\n}\n\n    \n\n    \n        \n  People\n  \n    \n      @if(search != \"\"){\n        x\n      }\n    \n      +\n    \n  \n\n  \n    @if (persons$ | async; as persons) {\n    @for (person of persons$ | async; track person) {\n    @if (normalizeString(person.firstName).indexOf(normalizeString(search)) != -1) {\n    \n      {{ person.firstName }}\n      {{ person.age }}\n    \n    }\n    }\n    }\n    @else {\n    Žádná data 😦\n    }\n  \n\n\n  @if (activeEditModal) {\n  \n    \n      \n        Editing\n        x\n      \n      \n        Personal Info\n        Mothers Info\n        Fathers Info\n      \n      \n\n      @switch (editingPersonPage) {\n        @default{\n        \n          \n            First name\n            \n            Invalid name\n          \n\n          \n            nickname\n            \n          \n\n          \n            Last name\n            \n            Invalid name\n          \n\n          \n            Gender\n            \n              Male\n              Female\n            \n          \n\n          \n            Date of Birth\n            \n          \n\n          \n            Email\n            \n            Invalid email\n          \n\n          \n            Phone Number\n            \n            Invalid phone\n          \n\n          \n            Active\n            \n          \n\n          \n            Status\n            \n              Other\n              Child\n              Instruktor\n              Leader\n            \n          \n          delete\n        \n        }\n        @case(2){\n        \n          \n            Mother's Full Name\n            \n          \n\n          \n            Mother's Email\n            \n          \n\n          \n            Mother's Phone Number\n            \n          \n        \n        }\n        @case(3){\n        \n          \n            Father's Full Name\n            \n          \n          \n            Father's Email\n            \n          \n\n          \n            Father's Phone Number\n            \n          \n        \n        }\n      }\n      \n    \n  \n  }\n\n  @if (activeCreateModal) {\n  \n    \n      \n        Creating\n        x\n      \n      \n        \n          First name \n            @if(firstName.invalid && firstName.touched){\n              can't start or end with spaces\n            }\n            @else{\n              *\n            }\n          \n        \n      \n        \n          Nickname\n          \n        \n      \n        \n          Last name \n            @if(lastName.invalid && lastName.touched){\n              can't start or end with spaces\n            }\n            @else{\n              *\n            }\n          \n        \n      \n        \n          \n            Gender \n              @if(gender.invalid && gender.touched){\n                  is required.\n              }\n              @else{\n                *\n              }\n            \n              Male\n              Female\n            \n          \n        \n          \n            Date of birth \n              @if(dateOfBirth.invalid && dateOfBirth.touched){\n                  is required.\n              }\n              @else{\n                *\n              }\n            \n          \n        \n      \n        \n          Status \n            *\n          \n            Other\n            Child\n            Instruktor\n            Leader\n          \n        \n        \n          \n            Create\n          \n        \n      \n    \n  \n  }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  People            @if(search != \"\"){        x      }          +            @if (persons$ | async; as persons) {    @for (person of persons$ | async; track person) {    @if (normalizeString(person.firstName).indexOf(normalizeString(search)) != -1) {          {{ person.firstName }}      {{ person.age }}        }    }    }    @else {    Žádná data 😦    }    @if (activeEditModal) {                    Editing        x                    Personal Info        Mothers Info        Fathers Info                  @switch (editingPersonPage) {        @default{                              First name                        Invalid name                                nickname                                            Last name                        Invalid name                                Gender                          Male              Female                                            Date of Birth                                            Email                        Invalid email                                Phone Number                        Invalid phone                                Active                                            Status                          Other              Child              Instruktor              Leader                                delete                }        @case(2){                              Mother\\'s Full Name                                            Mother\\'s Email                                            Mother\\'s Phone Number                                      }        @case(3){                              Father\\'s Full Name                                            Father\\'s Email                                            Father\\'s Phone Number                                      }      }              }  @if (activeCreateModal) {                    Creating        x                              First name             @if(firstName.invalid && firstName.touched){              can\\'t start or end with spaces            }            @else{              *            }                                          Nickname                                          Last name             @if(lastName.invalid && lastName.touched){              can\\'t start or end with spaces            }            @else{              *            }                                                      Gender               @if(gender.invalid && gender.touched){                  is required.              }              @else{                *              }                          Male              Female                                                    Date of birth               @if(dateOfBirth.invalid && dateOfBirth.touched){                  is required.              }              @else{                *              }                                                      Status             *                      Other            Child            Instruktor            Leader                                                Create                                }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PersonsListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SmallPersonDetailModel.html":{"url":"interfaces/SmallPersonDetailModel.html","title":"interface - SmallPersonDetailModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SmallPersonDetailModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/person.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            age\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dateOfBirth\n                                        \n                                \n                                \n                                        \n                                            deleted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            nickname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phoneNumber\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateOfBirth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateOfBirth:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nickname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nickname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PersonCreateModel {\n  firstName: string;\n  nickname:string;\n  lastName: string;\n  gender: boolean;\n  dateOfBirth: string; // ISO 8601 date format\n  active: boolean;\n  email?: string | null;\n  emailOfMother?: string | null;\n  emailOfFather?: string | null;\n  phoneNumberOfMother?: string | null;\n  phoneNumberOfFather?: string | null;\n  phoneNumber?: string | null;\n  fullNameOfMother?: string | null;\n  fullNameOfFather?: string | null;\n  status: PersonStatus;\n}\n\nexport interface SmallPersonDetailModel {\n  id: string; // UUID as a string\n  firstName: string;\n  nickname:string;\n  lastName: string;\n  gender: boolean;\n  dateOfBirth?: string | null; // ISO 8601 format\n  age?:number|null;\n  email?: string | null;\n  phoneNumber?: string | null;\n  active: boolean;\n  deleted: boolean;\n}\n\nexport interface PersonDetailModel extends SmallPersonDetailModel {\n  emailOfMother?: string | null;\n  emailOfFather?: string | null;\n  phoneNumberOfMother?: string | null;\n  phoneNumberOfFather?: string | null;\n  fullNameOfMother?: string | null;\n  fullNameOfFather?: string | null;\n  status: PersonStatus;\n}\n\nexport enum PersonStatus {\n  Other = 'other',\n  Child = 'child',\n  Instruktor = 'instruktor',\n  Leader = 'leader',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenModel.html":{"url":"interfaces/TokenModel.html","title":"interface - TokenModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginModel {\n  email: string;\n  password: string;\n}\n\nexport interface TokenModel{\n  email:string;\n  token:string;\n}\n\nexport interface PasswordResetModel extends TokenModel{\n  password:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCreate.html":{"url":"interfaces/UserCreate.html","title":"interface - UserCreate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserCreate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            personId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        personId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        personId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PersonDetailModel } from \"./person.interface\";\n\nexport interface UserDetail {\n  deleted:boolean;\n  emailConfirmed:boolean;\n  role:string;\n  id: string;\n  userName: string;\n  email: string;\n  person: PersonDetailModel;\n}\n\nexport interface UserCreate {\n  name:string;\n  email:string;\n  personId:string;\n  password:string;\n}\n\nexport interface UserPatch {\n  userName: string;\n  email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDetail.html":{"url":"interfaces/UserDetail.html","title":"interface - UserDetail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            deleted\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            emailConfirmed\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            person\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            userName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deleted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emailConfirmed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emailConfirmed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        person\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        person:         PersonDetailModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PersonDetailModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PersonDetailModel } from \"./person.interface\";\n\nexport interface UserDetail {\n  deleted:boolean;\n  emailConfirmed:boolean;\n  role:string;\n  id: string;\n  userName: string;\n  email: string;\n  person: PersonDetailModel;\n}\n\nexport interface UserCreate {\n  name:string;\n  email:string;\n  personId:string;\n  password:string;\n}\n\nexport interface UserPatch {\n  userName: string;\n  email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserInfoPageComponent.html":{"url":"components/UserInfoPageComponent.html","title":"component - UserInfoPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserInfoPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/user-info-page/user-info-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-info-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./user-info-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-info-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authService\n                            \n                            \n                                editService\n                            \n                            \n                                router\n                            \n                            \n                                user\n                            \n                            \n                                userService\n                            \n                            \n                                userUpdateBase\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                openPersonEdit\n                            \n                            \n                                updateField\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/user-info-page/user-info-page.component.ts:23\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-info-page/user-info-page.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBlur\n                        \n                    \n                \n            \n            \n                \nonBlur(field: string, isValid?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-info-page/user-info-page.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isValid\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPersonEdit\n                        \n                    \n                \n            \n            \n                \nopenPersonEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-info-page/user-info-page.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateField\n                        \n                    \n                \n            \n            \n                \nupdateField(field: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-info-page/user-info-page.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-info-page/user-info-page.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EditService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-info-page/user-info-page.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-info-page/user-info-page.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {} as UserDetail\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-info-page/user-info-page.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-info-page/user-info-page.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userUpdateBase\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {} as UserDetail\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-info-page/user-info-page.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { UserDetail, UserPatch } from '../../models/user.interface';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EditService } from '../../services/Edit.service';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-user-info-page',\n  standalone:true,\n  templateUrl: './user-info-page.component.html',\n  imports:[FormsModule,ReactiveFormsModule],\n  styleUrls: ['./user-info-page.component.scss']\n})\nexport class UserInfoPageComponent implements OnInit {\n  userService = inject(UserService)\n  authService = inject(AuthService);\n  editService = inject(EditService);\n  router = inject(Router);\n\n  user = {} as UserDetail;\n  userUpdateBase = {} as UserDetail;\n\n  constructor() {\n    this.authService.userInfoModel$.subscribe(x=>this.user = x!)\n  }\n\n  ngOnInit() {\n  }\n\n  openPersonEdit(){\n    this.editService.openPersonEditModal(this.user.person.id, this.router.url)\n    this.router.navigate(['/people'])\n  }\n\n    updateField(field: string) {\n      const patch: Partial = {};\n      \n      if ((this.userUpdateBase as any)[field] !== (this.user as any)[field]) {\n        (patch as any)[field] = (this.user as any)[field];\n        this.userService.Patch(this.user.id, patch)\n        .subscribe(() => this.authService.userInfo())\n      }\n    }\n        \n    \n    onBlur(field: string, isValid?: boolean) {\n      console.log(isValid,field)\n      if (isValid) {\n        this.updateField(field);\n      }\n    }\n\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n            User Information\n          \n          \n          \n            \n              User name\n              @if(userName.invalid && userName.touched){\n                is required\n              }\n            \n            \n          \n          \n          \n            \n              User email\n              @if(userMail.invalid && userMail.touched){\n                   must be a valid email address\n              }\n            \n            \n          \n          \n            \n              Identity\n            \n          \n        \n      \n    \n    \n\n    \n                \n                    ./user-info-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        User Information                                                        User name              @if(userName.invalid && userName.touched){                is required              }                                                                                User email              @if(userMail.invalid && userMail.touched){                   must be a valid email address              }                                                                      Identity                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserInfoPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserListComponent.html":{"url":"components/UserListComponent.html","title":"component - UserListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user-list/user-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            AsyncPipe\n                            ReactiveFormsModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./user-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeCreateModal\n                            \n                            \n                                activeEditModal\n                            \n                            \n                                creatingUser\n                            \n                            \n                                editingUser\n                            \n                            \n                                editingUserBase\n                            \n                            \n                                    Private\n                                editService\n                            \n                            \n                                password2\n                            \n                            \n                                passwordMismatch\n                            \n                            \n                                    Protected\n                                persons$\n                            \n                            \n                                    Private\n                                personService\n                            \n                            \n                                roles\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Protected\n                                searchUsers\n                            \n                            \n                                    Protected\n                                users$\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeCreateModal\n                            \n                            \n                                closeEditModal\n                            \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                changeRole\n                            \n                            \n                                checkPasswords\n                            \n                            \n                                normalizeString\n                            \n                            \n                                onBlur\n                            \n                            \n                                openCreateModal\n                            \n                            \n                                openEditModal\n                            \n                            \n                                openPersonEdit\n                            \n                            \n                                refresh\n                            \n                            \n                                refreshPersons\n                            \n                            \n                                unDelete\n                            \n                            \n                                updateField\n                            \n                            \n                                validateAndTryCreate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/user-list/user-list.component.ts:38\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeCreateModal\n                        \n                    \n                \n            \n            \n                \ncloseCreateModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeEditModal\n                        \n                    \n                \n            \n            \n                \ncloseEditModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeRole\n                        \n                    \n                \n            \n            \n                \nchangeRole()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:126\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswords\n                        \n                    \n                \n            \n            \n                \ncheckPasswords()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:153\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        normalizeString\n                        \n                    \n                \n            \n            \n                \nnormalizeString(ob: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:149\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ob\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBlur\n                        \n                    \n                \n            \n            \n                \nonBlur(field: string, isValid?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isValid\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openCreateModal\n                        \n                    \n                \n            \n            \n                \nopenCreateModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditModal\n                        \n                    \n                \n            \n            \n                \nopenEditModal(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openPersonEdit\n                        \n                    \n                \n            \n            \n                \nopenPersonEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshPersons\n                        \n                    \n                \n            \n            \n                \nrefreshPersons()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unDelete\n                        \n                    \n                \n            \n            \n                \nunDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:116\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateField\n                        \n                    \n                \n            \n            \n                \nupdateField(field: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateAndTryCreate\n                        \n                    \n                \n            \n            \n                \nvalidateAndTryCreate(form: NgForm)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/user-list/user-list.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        NgForm\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeCreateModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        activeEditModal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatingUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserCreate\n\n                    \n                \n                \n                    \n                        Default value : {} as UserCreate\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDetail\n\n                    \n                \n                \n                    \n                        Default value : {} as UserDetail\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editingUserBase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDetail\n\n                    \n                \n                \n                    \n                        Default value : {} as UserDetail\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(EditService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMismatch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        persons$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.personService.persons$\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        personService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(PersonService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"\",\"Admin\",\"UserManger\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        searchUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.userService.users$\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-list/user-list.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { AsyncPipe } from '@angular/common';\nimport { FormsModule, NgForm, ReactiveFormsModule } from '@angular/forms';\nimport { UserCreate, UserDetail, UserPatch } from '../../models/user.interface';\nimport { PersonService } from '../../services/person.service';\nimport { EditService } from '../../services/Edit.service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-user-list',\n  standalone:true,\n  imports:[AsyncPipe,ReactiveFormsModule,FormsModule],\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent{\n  private userService=inject(UserService)\n  private personService=inject(PersonService)\n  private editService=inject(EditService)\n  private router=inject(Router)\n\n  roles = [\"\",\"Admin\",\"UserManger\"]\n\n  protected users$ = this.userService.users$;\n  protected persons$ = this.personService.persons$;\n\n  protected searchUsers = \"\"\n  password2: string = '';\n  passwordMismatch: boolean = false;\n\n  activeCreateModal:boolean = false;\n  activeEditModal:boolean = false;\n\n  creatingUser:UserCreate = {} as UserCreate;\n  editingUser:UserDetail = {} as UserDetail;\n  editingUserBase:UserDetail = {} as UserDetail;\n\n  constructor() {\n  }\n\n  openPersonEdit(){\n    this.editService.openPersonEditModal(this.editingUser.person.id, this.router.url)\n  }\n\n  refresh(){\n    this.userService.updateUsers()\n    this.editingUserBase  = JSON.parse(JSON.stringify(this.editingUser))\n  }\n\n  refreshPersons(){\n    this.personService.updatePersons()\n  }\n\n  openCreateModal(){\n    this.creatingUser.name = this.searchUsers;\n    this.activeCreateModal=true\n  }\n\n  closeCreateModal(){\n    this.activeCreateModal=false\n    this.password2 = \"\"\n    this.creatingUser = {} as UserCreate\n  }\n\n  openEditModal(id:string){\n    this.users$.subscribe(\n      x => {\n        this.editingUser = x.find(y => y.id == id)!;\n      }\n    )\n    this.editingUserBase  = JSON.parse(JSON.stringify(this.editingUser))\n    this.activeEditModal = true\n  }\n\n  closeEditModal(){\n    this.activeEditModal=false\n    this.creatingUser = {} as UserCreate  \n    this.editingUserBase  = JSON.parse(JSON.stringify(this.editingUser))\n  }\n\n  validateAndTryCreate(form: NgForm){\n    if (form.invalid) {\n      Object.values(form.controls).forEach(control => {\n        control.markAsTouched();\n      });\n      this.checkPasswords()\n    }\n    else{\n      this.create()\n    }\n  }\n\n  create(){\n    this.userService.create(this.creatingUser)\n    .subscribe(\n      x => {\n        this.refresh()\n        this.closeCreateModal()\n      }\n    )\n  }\n\n\n  delete(){\n    this.userService.delete(this.editingUser.id)\n    .subscribe(\n      x =>\n      {\n        this.refresh()\n      }\n    )\n  }\n\n  unDelete(){\n    this.userService.unDelete(this.editingUser.id)\n    .subscribe(\n      x =>\n      {\n        this.refresh()\n      }\n    )\n  }\n\n  changeRole(){\n    console.log(this.editingUser)\n    if(this.editingUser.role == \"\") this.userService.removeRole(this.editingUser.id).subscribe(x=>this.refresh());\n    else  this.userService.addRole(this.editingUser.id,this.editingUser.role).subscribe(x=>this.refresh());\n  }\n  \n  updateField(field: string) {\n    const patch: Partial = {};\n    \n    if ((this.editingUserBase as any)[field] !== (this.editingUser as any)[field]) {\n      (patch as any)[field] = (this.editingUser as any)[field];\n      this.userService.Patch(this.editingUser.id, patch)\n      .subscribe(() => this.refresh());\n    }\n  }\n      \n  \n    onBlur(field: string, isValid?: boolean) {\n      if (isValid) {\n        this.updateField(field);\n      }\n    }\n\n  normalizeString(ob:string){\n    return ob.normalize().toUpperCase().replaceAll(' ', \"\").trim()\n  }\n\n  checkPasswords() {\n    this.passwordMismatch = (this.creatingUser.password !== this.password2) || (this.creatingUser.password == \"\");\n    console.log(this.passwordMismatch)\n  }\n}\n\n    \n\n    \n        \n  Users\n  \n    \n      @if(searchUsers != \"\"){\n        x\n      }\n    \n      +\n    \n  \n\n  \n    @if (users$ | async; as users) {\n    @for (user of users$ | async; track user) {\n    @if (normalizeString(user.userName).indexOf(normalizeString(searchUsers)) != -1) {\n    \n      {{ user.id }}\n      {{ user.userName }}\n    \n    }\n    }\n    }\n    @else {\n    Žádná data 😦\n    }\n  \n\n\n  @if (activeCreateModal) {\n  \n    \n      \n        Creating\n        x\n      \n      \n        \n        \n          \n            User name\n            @if(userName.invalid && userName.touched){\n            is required\n            }\n          \n          \n        \n        \n        \n          \n            User email\n            @if(userMail.invalid && userMail.touched){\n            must be a valid email address\n            }\n          \n          \n        \n        \n          Identity of user\n          \n            none\n            @for(person of persons$ | async;track person){\n            {{person.firstName}}\n            }\n          \n        \n        \n          \n            Create\n          \n        \n      \n\n    \n  \n  }\n\n  @if (activeEditModal) {\n  \n    \n      \n        Editing User\n        x\n      \n      \n        \n        \n          \n            User name\n            @if(userName.invalid && userName.touched){\n            is required\n            }\n            \n              @if(!editingUser.emailConfirmed){\n                not\n              }\n              confirmed\n          \n          \n        \n        \n        \n          \n            User email\n            @if(email.invalid && email.touched){\n            must be a valid email address\n            }\n          \n          \n        \n        \n        \n          \n            User Role\n          \n          \n            @for(role of roles;track role){\n              {{role==\"\"?'None':role}}\n            }\n          \n        \n        \n          \n            Identity\n          \n            @if(editingUser.deleted){\n              Undelete\n            }\n            @else {\n              Delete\n            }\n        \n      \n    \n  \n  }\n\n    \n\n    \n                \n                    ./user-list.component.scss\n                \n                .user{\n    @apply border p-5 shadow my-3 w-56 h-64 flex flex-col rounded-lg ;\n    transition: transform 0.3s ease-in-out;\n  }\n  .user>p{\n    @apply flex-1 break-words text-wrap overflow-hidden\n  }\n  \n  .user button{\n    @apply border pl-3 pr-3 rounded-md\n  }\n  \n  .user:hover{\n    cursor: pointer;\n    box-shadow: 0 0.5rem 1rem rgba(95, 95, 95, 0.5);\n    transform: translateY(-0.5rem);\n  }\n  \n  .inputs>input,.inputs>select{\n    @apply w-full\n  }\n  .inputs>*{\n    @apply my-1\n  }\n  \n  .editing_inputs>*{\n    @apply w-1/2 flex flex-col flex-1 mx-1\n  }\n  .editing_inputs{\n    @apply justify-between content-between\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Users            @if(searchUsers != \"\"){        x      }          +            @if (users$ | async; as users) {    @for (user of users$ | async; track user) {    @if (normalizeString(user.userName).indexOf(normalizeString(searchUsers)) != -1) {          {{ user.id }}      {{ user.userName }}        }    }    }    @else {    Žádná data 😦    }    @if (activeCreateModal) {                    Creating        x                                                  User name            @if(userName.invalid && userName.touched){            is required            }                                                                  User email            @if(userMail.invalid && userMail.touched){            must be a valid email address            }                                              Identity of user                      none            @for(person of persons$ | async;track person){            {{person.firstName}}            }                                                Create                                }  @if (activeEditModal) {                    Editing User        x                                                  User name            @if(userName.invalid && userName.touched){            is required            }                          @if(!editingUser.emailConfirmed){                not              }              confirmed                                                                  User email            @if(email.invalid && email.touched){            must be a valid email address            }                                                                  User Role                                @for(role of roles;track role){              {{role==\"\"?\\'None\\':role}}            }                                                Identity                      @if(editingUser.deleted){              Undelete            }            @else {              Delete            }                      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPatch.html":{"url":"interfaces/UserPatch.html","title":"interface - UserPatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserPatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            userName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PersonDetailModel } from \"./person.interface\";\n\nexport interface UserDetail {\n  deleted:boolean;\n  emailConfirmed:boolean;\n  role:string;\n  id: string;\n  userName: string;\n  email: string;\n  person: PersonDetailModel;\n}\n\nexport interface UserCreate {\n  name:string;\n  email:string;\n  personId:string;\n  password:string;\n}\n\nexport interface UserPatch {\n  userName: string;\n  email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                baseUrl\n                            \n                            \n                                    Private\n                                users\n                            \n                            \n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRole\n                            \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                generatePatch\n                            \n                            \n                                changePassword\n                            \n                            \n                                Patch\n                            \n                            \n                                removeRole\n                            \n                            \n                                unDelete\n                            \n                            \n                                updateUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRole\n                        \n                    \n                \n            \n            \n                \naddRole(id: string, role: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                role\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(model: UserCreate)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                            UserCreate\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatePatch\n                        \n                    \n                \n            \n            \n                \ngeneratePatch(model: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:53\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Patch\n                        \n                    \n                \n            \n            \n                \nPatch(id: string, model: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                model\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRole\n                        \n                    \n                \n            \n            \n                \nremoveRole(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unDelete\n                        \n                    \n                \n            \n            \n                \nunDelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUsers\n                        \n                    \n                \n            \n            \n                \nupdateUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"/api/v1/User\"\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.users.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { UserCreate, UserDetail, UserPatch } from '../models/user.interface';\nimport { PersonCreateModel } from '../models/person.interface';\nimport { query } from '@angular/animations';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  protected readonly baseUrl = \"/api/v1/User\"\n  private users = new BehaviorSubject([]);\n  users$ = this.users.asObservable();\n\n\n  constructor(private httpClient: HttpClient) {\n    this.updateUsers()\n   }\n\n   updateUsers(){\n    this.httpClient.get(this.baseUrl)\n    .subscribe(x => {this.users.next(x);console.log(x)})\n   }\n\n   create(model:UserCreate){\n    return this.httpClient.post(`${this.baseUrl}/CreateUser`,model)\n   }\n   \n  Patch(id:string,model:Partial){\n    const url = `${this.baseUrl}/${id}`\n    var patch = this.generatePatch(model);\n    console.log(patch)\n    return this.httpClient.patch(url,patch)\n  }\n  \n  delete(id:string){\n    return this.httpClient.delete(`${this.baseUrl}/SoftDelete/${id}`)\n  }\n\n  unDelete(id:string){\n    return this.httpClient.get(`${this.baseUrl}/UndeleteUser/${id}`)\n  }\n  \n  addRole(id:string,role:string){\n    return this.httpClient.get(`${this.baseUrl}/AddRole`,{params:{userId:id,role:role}})\n  }\n  \n  removeRole(id:string){\n    return this.httpClient.get(`${this.baseUrl}/RemoveRole`,{params:{userId:id}})\n  }\n\n  generatePatch(model: Partial): any[] {\n    const patch: any[] = [];\n\n    Object.keys(model).forEach((key) => {\n\n        patch.push({\n          op: 'replace',\n          path: `${key}`,\n          value: (model as any)[key],\n        });\n\n    });\n\n    return patch;\n  }\n\n  changePassword(email:string){\n    return this.httpClient.get(`${this.baseUrl}/ChangePassword/${email}`)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ValidateEmailPageComponent.html":{"url":"components/ValidateEmailPageComponent.html","title":"component - ValidateEmailPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ValidateEmailPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/validate-email-page/validate-email-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-validateEmail-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                \n            \n\n            \n                styleUrls\n                ./validate-email-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./validate-email-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                lastError$\n                            \n                            \n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/validate-email-page/validate-email-page.component.ts:16\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/validate-email-page/validate-email-page.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/validate-email-page/validate-email-page.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastError$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/validate-email-page/validate-email-page.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/validate-email-page/validate-email-page.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { ActivatedRoute, RouterLink } from '@angular/router';\nimport { TokenModel } from '../../models/auth.interface';\n\n@Component({\n  selector: 'app-validateEmail-page',\n  standalone:true,\n  imports:[RouterLink],\n  templateUrl: './validate-email-page.component.html',\n  styleUrls: ['./validate-email-page.component.scss']\n})\nexport class ValidateEmailPageComponent implements OnInit {\n  lastError$:any;\n  private readonly authService = inject(AuthService);\n  route=inject(ActivatedRoute);\n\n\n  constructor() { }\n\n  ngOnInit() {\n    this.route.queryParamMap.subscribe(params => {\n\n      this.authService.validateEmail({email:params.get(\"Email\")!,token:params.get(\"Token\")!}).subscribe(\n      {\n        next:()=>{\n\n        },\n        error:(error: any)=>{\n          this.lastError$=error.error\n          console.log(this.lastError$)\n        }\n      }\n    )\n  });\n    \n  }\n\n}\n\n    \n\n    \n        \n  \n    Confirm email\n    @if (lastError$ != null) {\n      \n        {{lastError$[\"errorMessage\"].errors[0][\"errorMessage\"]}}\n      \n    }\n    @else{\n      \n        Email was confirmed succesfuly, you can go to the login page and login\n            \n    }\n    \n      Go to Login\n    \n  \n\n    \n\n    \n                \n                    ./validate-email-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Confirm email    @if (lastError$ != null) {              {{lastError$[\"errorMessage\"].errors[0][\"errorMessage\"]}}          }    @else{              Email was confirmed succesfuly, you can go to the login page and login                }          Go to Login      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChangePasswordPageComponent', 'selector': 'app-change-password-page'},{'name': 'DefaultComponent', 'selector': 'app-default'},{'name': 'DishListComponent', 'selector': 'app-dish-list'},{'name': 'EventListComponent', 'selector': 'app-event-list'},{'name': 'FoodPageComponent', 'selector': 'app-ingredient-page'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'NotFoundPageComponent', 'selector': 'app-not-found'},{'name': 'PeoplePageComponent', 'selector': 'app-people-page'},{'name': 'PersonsListComponent', 'selector': 'app-persons-list'},{'name': 'UserInfoPageComponent', 'selector': 'app-user-info-page'},{'name': 'UserListComponent', 'selector': 'app-user-list'},{'name': 'ValidateEmailPageComponent', 'selector': 'app-validateEmail-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ValidateEmailPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/dish-list/dish-list.component.ts\n            \n            component\n            DishListComponent\n            \n                0 %\n                (0/37)\n            \n        \n        \n            \n                \n                src/app/components/event-list/event-list.component.ts\n            \n            component\n            EventListComponent\n            \n                0 %\n                (0/45)\n            \n        \n        \n            \n                \n                src/app/components/persons-list/persons-list.component.ts\n            \n            component\n            PersonsListComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/components/user-list/user-list.component.ts\n            \n            component\n            UserListComponent\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layouts/default/default.component.ts\n            \n            component\n            DefaultComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/auth.interface.ts\n            \n            interface\n            LoginModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/auth.interface.ts\n            \n            interface\n            PasswordResetModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/models/auth.interface.ts\n            \n            interface\n            TokenModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/dish.interface.ts\n            \n            interface\n            DishAddIngredientModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/dish.interface.ts\n            \n            interface\n            DishCreate\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/dish.interface.ts\n            \n            interface\n            DishDetail\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/dish.interface.ts\n            \n            interface\n            DishIngredientModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/dish.interface.ts\n            \n            interface\n            IngredientDishDetail\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/event.interface.ts\n            \n            interface\n            EventCreateModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/event.interface.ts\n            \n            interface\n            EventDetailModel\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/models/ingredient.interface.ts\n            \n            interface\n            IngredientCreate\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/ingredient.interface.ts\n            \n            interface\n            IngredientDetail\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/person.interface.ts\n            \n            interface\n            PersonCreateModel\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/models/person.interface.ts\n            \n            interface\n            PersonDetailModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/person.interface.ts\n            \n            interface\n            SmallPersonDetailModel\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/models/user.interface.ts\n            \n            interface\n            UserCreate\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/user.interface.ts\n            \n            interface\n            UserDetail\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/user.interface.ts\n            \n            interface\n            UserPatch\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/change-password-page/change-password-page.component.ts\n            \n            component\n            ChangePasswordPageComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/pages/errors/not-found-page/not-found-page.component.ts\n            \n            component\n            NotFoundPageComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/food-page/food-page.component.ts\n            \n            component\n            FoodPageComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/home-page/home-page.component.ts\n            \n            component\n            HomePageComponent\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/pages/login-page/login-page.component.ts\n            \n            component\n            LoginPageComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/pages/people-page/people-page.component.ts\n            \n            component\n            PeoplePageComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/user-info-page/user-info-page.component.ts\n            \n            component\n            UserInfoPageComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/pages/validate-email-page/validate-email-page.component.ts\n            \n            component\n            ValidateEmailPageComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/pipes/event.pipe.ts\n            \n            pipe\n            EventPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pipes/person.pipe.ts\n            \n            pipe\n            PersonPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/Edit.service.ts\n            \n            injectable\n            EditService\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/dish.service.ts\n            \n            injectable\n            DishService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/event.service.ts\n            \n            injectable\n            EventService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/services/ingredient.service.ts\n            \n            injectable\n            IngredientService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/person.service.ts\n            \n            injectable\n            PersonService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/14)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/cdk : ^18.2.12\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            @tailwindcss/postcss : ^4.0.12\n        \n            flowbite : ^2.5.2\n        \n            postcss : ^8.5.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PersonStatus   (src/.../person.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/person.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        PersonStatus\n                    \n                \n                        \n                            \n                                 Other\n                            \n                        \n                        \n                            \n                                Value : other\n                            \n                        \n                        \n                            \n                                 Child\n                            \n                        \n                        \n                            \n                                Value : child\n                            \n                        \n                        \n                            \n                                 Instruktor\n                            \n                        \n                        \n                            \n                                Value : instruktor\n                            \n                        \n                        \n                            \n                                 Leader\n                            \n                        \n                        \n                            \n                                Value : leader\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSkarabeusUi\nThis project was generated with Angular CLI version 17.3.11.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    18 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideRouter(routes),provideHttpClient()]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
